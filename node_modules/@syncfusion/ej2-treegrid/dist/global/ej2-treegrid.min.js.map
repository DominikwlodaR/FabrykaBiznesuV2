{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/loading-indicator.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/logger.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/models/infinite-scroll-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/treegrid/actions/infinite-scroll.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[parseInt(i.toString(), 10)].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[parseInt(i.toString(), 10)]);\n        if (hasChild) {\n            datas.push(records[parseInt(i.toString(), 10)]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords.filter(function (item) { return !item.isSummaryRow; });\n        var keys = Object.keys(childRecords);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            datas.push(childRecords[parseInt(i.toString(), 10)]);\n            if (childRecords[parseInt(i.toString(), 10)].hasChildRecords ||\n                (!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) &&\n                    childRecords[parseInt(i.toString(), 10)].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[parseInt(i.toString(), 10)]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[parseInt(i.toString(), 10)]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[parseInt(j.toString(), 10)]] = array[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[\"\" + idFilter][\"\" + value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[\"\" + id][\"\" + value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[\"\" + addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[parseInt(k.toString(), 10)][\"\" + key]) === 'object') {\n                modifiedData[parseInt(k.toString(), 10)] = modifiedData[parseInt(k.toString(), 10)][\"\" + key];\n            }\n            var keys = modifiedData[parseInt(k.toString(), 10)].taskData ?\n                Object.keys(modifiedData[parseInt(k.toString(), 10)].taskData) :\n                Object.keys(modifiedData[parseInt(k.toString(), 10)]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[parseInt(i.toString(), 10)][\"\" + key] === modifiedData[parseInt(k.toString(), 10)][\"\" + key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[parseInt(i.toString(), 10)];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[\"\" + control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[\"\" + control.idMapping] === currentData_1[\"\" + control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[\"\" + control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[parseInt(p.toString(), 10)][\"\" + control.idMapping] === currentData_1[\"\" + control.idMapping]) {\n                                        if (!control.enableImmutableMode && parentData.childRecords.length === parentData['Children'].length) {\n                                            parentData['childRecords'].splice(p, 1);\n                                        }\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], keys[parseInt(j.toString(), 10)]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[\"\" + changedRecords].length === 0))\n                                    || keys[parseInt(j.toString(), 10)] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[parseInt(k.toString(), 10)].uniqueID);\n                                    treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]] =\n                                        modifiedData[parseInt(k.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[parseInt(j.toString(), 10)]] = editedData[keys[parseInt(j.toString(), 10)]]\n                                            = treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[\"\" + control.parentIdMapping] = treeData[parseInt(i.toString(), 10)][\"\" + control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], control.childMapping)) {\n                                        treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping] = [];\n                                    }\n                                    treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping])) {\n                    if (removeChildRecords(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping], modifiedData[parseInt(k.toString(), 10)], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[parseInt(addRowIndex.toString(), 10)];\n                if (!isNullOrUndefined(currentdata) && currentdata[\"\" + primaryKeys] === details.value[\"\" + primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[\"\" + internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[parseInt(j.toString(), 10)][\"\" + key] === modifiedData[\"\" + key] ||\n            (isSelfReference && childRecords[parseInt(j.toString(), 10)][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], keys[parseInt(i.toString(), 10)]) &&\n                        (control.editSettings.mode !== 'Cell' || keys[parseInt(i.toString(), 10)] === columnName)) {\n                        editedData[keys[parseInt(i.toString(), 10)]] =\n                            editedData.taskData[keys[parseInt(i.toString(), 10)]] =\n                                childRecords[parseInt(j.toString(), 10)][keys[parseInt(i.toString(), 10)]] =\n                                    modifiedData[keys[parseInt(i.toString(), 10)]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[\"\" + editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[\"\" + editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[\"\" + control.parentIdMapping] = childRecords[parseInt(j.toString(), 10)][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], control.childMapping)) {\n                            childRecords[parseInt(j.toString(), 10)][control.childMapping] = [];\n                        }\n                        childRecords[parseInt(j.toString(), 10)][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[parseInt(j.toString(), 10)][control.childMapping])) {\n            if (removeChildRecords(childRecords[parseInt(j.toString(), 10)][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[\"\" + key] === record[\"\" + key]) {\n            index_1 = i;\n            return;\n        } });\n        if (control.enableVirtualization && isNullOrUndefined(index_1)) {\n            var updatedParent = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n            record = updatedParent;\n        }\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[parseInt(index_1.toString(), 10)];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[\"\" + key] !== child[\"\" + key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[\"\" + control.childMapping].indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[parseInt(i.toString(), 10)][\"\" + primaryKeys] === record[\"\" + primaryKeys]) {\n                data[parseInt(i.toString(), 10)] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            if (action === 'add') {\n                row = control.getRows()[control.grid.getCurrentViewRecords().indexOf(record)];\n            }\n            else {\n                row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[\"\" + key])];\n            }\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[parseInt(index_2.toString(), 10)] ? row.cells[parseInt(index_2.toString(), 10)]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n            if (control.enableImmutableMode && control['action'] === 'indenting' || control['action'] === 'outdenting') {\n                control.renderModule.RowModifier({\n                    data: record, row: row\n                });\n            }\n        }\n    }\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { merge, Property } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    /**\n     * Update the State changes reflected for TreeGrid columndirective in react platform.\n     *\n     * @param {Column} column - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Column.prototype.setProperties = function (column) {\n        //Angular two way binding\n        var keys = Object.keys(column);\n        for (var i = 0; i < keys.length; i++) {\n            this[keys[parseInt(i.toString(), 10)]] = column[keys[parseInt(i.toString(), 10)]];\n            //Refresh the react columnTemplates on state change\n            if (this.parent && this.parent['isReact'] && keys[parseInt(i.toString(), 10)] === 'template') {\n                var refreshReactColumnTemplateByUid = 'refreshReactColumnTemplateByUid';\n                this.parent.clipboardModule['treeGridParent'].renderModule[\"\" + refreshReactColumnTemplateByUid](this.uid);\n            }\n        }\n    };\n    return Column;\n}());\nexport { Column };\n/**\n * Defines TreeGrid column\n */\nvar TreeGridColumn = /** @class */ (function (_super) {\n    __extends(TreeGridColumn, _super);\n    function TreeGridColumn() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], TreeGridColumn.prototype, \"columns\", void 0);\n    return TreeGridColumn;\n}(Column));\nexport { TreeGridColumn };\n/**\n * Defines stacked tree grid column\n */\nvar StackedColumn = /** @class */ (function (_super) {\n    __extends(StackedColumn, _super);\n    function StackedColumn() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return StackedColumn;\n}(TreeGridColumn));\nexport { StackedColumn };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the Loading Indicator of the Tree Grid.\n */\nvar LoadingIndicator = /** @class */ (function (_super) {\n    __extends(LoadingIndicator, _super);\n    function LoadingIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Spinner')\n    ], LoadingIndicator.prototype, \"indicatorType\", void 0);\n    return LoadingIndicator;\n}(ChildProperty));\nexport { LoadingIndicator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[parseInt(i.toString(), 10)] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[parseInt(i.toString(), 10)] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'primary_column_missing' || type[parseInt(i.toString(), 10)] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[parseInt(i.toString(), 10)] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent, serviceLocator) {\n        var _this = _super.call(this, parent.grid, serviceLocator) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        _this.serviceLocator = serviceLocator;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[\"\" + copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[parseInt(i.toString(), 10)]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[parseInt(i.toString(), 10)]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[parseInt(i.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader, i);\n                            }\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[\"\" + copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[parseInt(i.toString(), 10)] =\n                            this.treeGridParent.getVisibleColumns()[parseInt(i.toString(), 10)].headerText;\n                    }\n                    this[\"\" + getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[\"\" + copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[\"\" + isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem])) {\n            var treeLevel = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem]) &&\n                        currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[parseInt(selectedIndex.toString(), 10)].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[\"\" + copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + hasChildRecords]) {\n            var childData = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) && currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) {\n                        if ((!isNullOrUndefined(rows[parseInt(j.toString(), 10)])) && !rows[parseInt(j.toString(), 10)].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[parseInt(j.toString(), 10)].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[\"\" + copyContent]);\n                                this[\"\" + copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var destroy = 'destroy';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n/** @hidden */\nexport var autoCol = 'auto-col';\n/** @hidden */\nexport var rowDeselecting = 'rowDeselecting';\n/** @hidden */\nexport var headerContent = 'e-headercontent';\n/** @hidden */\nexport var movableContent = 'e-movablecontent';\n/** @hidden */\nexport var movableHeader = 'e-movableheader';\n/** @hidden */\nexport var frozenContent = 'e-frozencontent';\n/** @hidden */\nexport var frozenHeader = 'e-frozenheader';\n/** @hidden */\nexport var content = 'e-content';\n/** @hidden */\nexport var table = 'e-table';\n/** @hidden */\nexport var leftRight = 'Left-Right';\n/** @hidden */\nexport var frozenRight = 'frozen-right';\n/** @hidden */\nexport var frozenLeft = 'frozen-left';\n/** @hidden */\nexport var dataColIndex = 'data-colindex';\n/** @hidden */\nexport var ariaColIndex = 'aria-colindex';\n/** @hidden */\nexport var dataRowIndex = 'data-rowindex';\n/** @hidden */\nexport var ariaRowIndex = 'aria-rowindex';\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn, findChildrenRecords } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.searchingRecords = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var stackedHeader = 'stackedHeader';\n        var columnModel = 'columnModel';\n        var columns = this.parent[\"\" + stackedHeader] ? this.parent[\"\" + columnModel] : (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[parseInt(col.toString(), 10)].showCheckbox) {\n                mappingUid = columns[parseInt(col.toString(), 10)].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[parseInt(j.toString(), 10)];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox', 'aria-label': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[parseInt(i.toString(), 10)]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[parseInt(j.toString(), 10)])) {\n                    flatRecord[keys[parseInt(j.toString(), 10)]] = record[keys[parseInt(j.toString(), 10)]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[parseInt(count.toString(), 10)].isSummaryRow) {\n                    if (childRecords[parseInt(count.toString(), 10)].hasChildRecords) {\n                        this.traverSelection(childRecords[parseInt(count.toString(), 10)], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[parseInt(count.toString(), 10)], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[parseInt(i.toString(), 10)].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && (!record.hasFilteredChildRecords || isNullOrUndefined(record.hasFilteredChildRecords)) && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check') {\n                record.checkboxState = 'check';\n            }\n            else if ((checkChildRecords === 0 && indeter === 0) || (checkChildRecords === 0 && record.hasFilteredChildRecords && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check')) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        //This property used to maintain the check state of the currentview data after clear filtering\n        var multiFilterCheckState = false;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length === 0) {\n                this.filteredList = filterResult;\n            }\n            if (this.parent.grid.searchSettings.key.length) {\n                this.searchingRecords = filterResult;\n            }\n            else {\n                if (this.filteredList !== filterResult) {\n                    this.filteredList = filterResult;\n                    multiFilterCheckState = true;\n                }\n                else {\n                    multiFilterCheckState = false;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length && !this.parent.grid.searchSettings.key.length) {\n                this.filteredList = [];\n            }\n            if (this.searchingRecords.length && !isNullOrUndefined(checkAll)) {\n                this.filteredList = this.searchingRecords;\n            }\n        }\n        var data;\n        if (!(isNullOrUndefined(this.parent.filterModule)) &&\n            this.parent.filterModule.filteredResult.length === 0 && this.parent.getCurrentViewRecords().length === 0 &&\n            this.parent.filterSettings.columns.length > 0) {\n            data = this.filteredList;\n        }\n        else {\n            data = (!isNullOrUndefined(this.parent.filterModule) &&\n                (this.filteredList.length > 0)) ? this.filteredList : this.parent.flatData;\n        }\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[parseInt(i.toString(), 10)].checkboxState === 'check') {\n                        continue;\n                    }\n                    if (multiFilterCheckState) {\n                        continue;\n                    }\n                    data[parseInt(i.toString(), 10)].checkboxState = 'check';\n                    this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[parseInt(i.toString(), 10)]);\n                    if (index > -1) {\n                        data[parseInt(i.toString(), 10)].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.grid.currentViewData.filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.grid.currentViewData.indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var tr = this.parent.getRows()[parseInt(recordIndex.toString(), 10)];\n        var checkbox;\n        if (recordIndex > -1) {\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getDataRows()[parseInt(recordIndex.toString(), 10)];\n            }\n            checkbox = tr.querySelectorAll('.e-hierarchycheckbox .e-frame')[0] ? tr.querySelectorAll('.e-hierarchycheckbox .e-frame')[0]\n                : movableTr.querySelectorAll('.e-hierarchycheckbox .e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (this.parent.enableVirtualization || this.parent.allowPaging) && ((!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n                var chkstate = checkState === 'check' ? 'checked' : checkState === 'uncheck' ? 'unchecked' : 'mixed';\n                tr.querySelector('.e-treecheckselect').setAttribute('aria-checked', checkState === 'check' ? 'true' : checkState === 'uncheck' ? 'false' : 'mixed');\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[parseInt(i.toString(), 10)], childData[parseInt(i.toString(), 10)].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[parseInt(i.toString(), 10)]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[parseInt(i.toString(), 10)], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[parseInt(i.toString(), 10)].parentItem)) {\n                            this.updateParentSelection(updatedData[parseInt(i.toString(), 10)].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.filterModule.filteredResult : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (_this.parent.enableVirtualization) {\n                            if (record.hasChildRecords && record.childRecords.length > 0) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                            var child = findChildrenRecords(record);\n                            child = _this.getFilteredChildRecords(child);\n                            for (var i = 0; i < child.length; i++) {\n                                if (child[parseInt(i.toString(), 10)].hasChildRecords) {\n                                    _this.updateParentSelection(child[parseInt(i.toString(), 10)]);\n                                }\n                                else if (!(child[parseInt(i.toString(), 10)].hasChildRecords) &&\n                                    !isNullOrUndefined(child[parseInt(i.toString(), 10)])) {\n                                    _this.updateSelectedItems(child[parseInt(i.toString(), 10)], child[parseInt(i.toString(), 10)].checkboxState);\n                                }\n                            }\n                        }\n                        else {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend, CellRenderer } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed && !isNullOrUndefined(args.row)) {\n                args.row.style.display = 'none';\n                var rowsObj = this.parent.grid.getRowsObject();\n                if (!this.parent.grid.isFrozenGrid() && !isNullOrUndefined(args.row.getAttribute('data-uid'))) {\n                    rowsObj.filter(function (e) { return e.uid === args.row.getAttribute('data-uid'); })[0].visible = false;\n                }\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0 && !parentrec[0].isSummaryRow && !isNullOrUndefined(args.row)) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (!isNullOrUndefined(args.row)) {\n            if (args.row.querySelector('.e-treegridexpand')) {\n                args.row.setAttribute('aria-expanded', 'true');\n            }\n            else if (args.row.querySelector('.e-treegridcollapse')) {\n                args.row.setAttribute('aria-expanded', 'false');\n            }\n            if (this.parent.enableCollapseAll && this.parent.initialRender) {\n                if (!isNullOrUndefined(data.parentItem)) {\n                    args.row.style.display = 'none';\n                }\n            }\n        }\n        var dragStartData = 'dragStartData';\n        var draggedRecord = 'draggedRecord';\n        if (this.parent.rowDragAndDropModule && this.parent.grid.rowDragAndDropModule && (this.parent.grid.rowDragAndDropModule[\"\" + dragStartData] ||\n            this.parent.rowDragAndDropModule[\"\" + draggedRecord]) && this.parent.getContentTable().scrollHeight <= this.parent.getContent().clientHeight) {\n            var lastRowBorder = 'lastRowBorder';\n            var lastVisualData = this.parent.getVisibleRecords()[this.parent.getVisibleRecords().length - 1];\n            if (lastVisualData.uniqueID === args.data.uniqueID && !isNullOrUndefined(args.row) && !args.row.cells[0].classList.contains('e-lastrowcell')) {\n                this.parent[\"\" + lastRowBorder](args.row, true);\n            }\n        }\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var thisRef_1 = this;\n            // tslint:disable-next-line:typedef\n            thisRef_1.parent[\"\" + renderReactTemplates](function () {\n                thisRef_1.parent.trigger(events.rowDataBound, args);\n            });\n        }\n        else {\n            this.parent.trigger(events.rowDataBound, args);\n        }\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        var columnIndex;\n        var getVirtualColIndexByUid = 'getVirtualColIndexByUid';\n        if (this.parent.enableColumnVirtualization && !this.parent.initialRender) {\n            columnIndex = this.parent[\"\" + getVirtualColIndexByUid](args.column.uid);\n        }\n        else {\n            columnIndex = grid.getColumnIndexByUid(args.column.uid);\n        }\n        if (columnIndex === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                if (this.parent['isFromGantt'] && !this.parent.loadChildOnDemand) {\n                    iconRequired = data.hasChildRecords;\n                }\n                else {\n                    iconRequired = !(data.childRecords.length === 0);\n                }\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                args.cell.setAttribute('aria-expanded', data.expanded ? 'true' : 'false');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '4px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        var freeze = (grid.getFrozenLeftColumnsCount() > 0 || grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (!freeze) {\n            if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n                (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                    || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        else {\n            var freezerightColumns = grid.getFrozenRightColumns();\n            var freezeLeftColumns = grid.getFrozenLeftColumns();\n            var movableColumns = grid.getMovableColumns();\n            if ((freezerightColumns.length > 0) && freezerightColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((freezeLeftColumns.length > 0) && freezeLeftColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((movableColumns.length > 0) && movableColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            summaryData = isNullOrUndefined(summaryData) ? null : summaryData;\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                if (args.column.template) {\n                    args.cell.innerHTML = null;\n                }\n                else {\n                    args.cell.innerHTML = summaryData;\n                }\n            }\n        }\n        this.parent['args'] = args;\n        if ((isNullOrUndefined(this.parent.rowTemplate) && !(this.parent.isReact))\n            || ((this.parent.isReact) &&\n                !args.column['template'])) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('data-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n            args.column.template = treeColumn.template;\n            args.column[\"\" + templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[\"\" + templateFn](args.data, this.parent, 'columnTemplate', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[\"\" + portals])) {\n                        this.parent.grid[\"\" + portals] = this.parent[\"\" + portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n                    // eslint-disable-next-line @typescript-eslint/no-this-alias\n                    var thisRef_2 = this;\n                    // tslint:disable-next-line:typedef\n                    thisRef_2.parent[\"\" + renderReactTemplates](function () {\n                        thisRef_2.parent.trigger(events.queryCellInfo, args);\n                    });\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[\"\" + templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[\"\" + str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[\"\" + templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n        var _this = this;\n        if (this.parent.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.parent.clearTemplate(['columnTemplate'], undefined, function () {\n                var cells = 'cells';\n                var rowIdx = 'index';\n                var rowsObj = _this.parent.grid.getRowsObject();\n                var indent = _this.parent.grid.getIndentCount();\n                var cellIndex = _this.parent.grid.getNormalizedColumnIndex(columnUid);\n                for (var j = 0; j < rowsObj.length; j++) {\n                    if (rowsObj[parseInt(j.toString(), 10)].isDataRow && !isNullOrUndefined(rowsObj[parseInt(j.toString(), 10)].index)) {\n                        var cell = rowsObj[parseInt(j.toString(), 10)][\"\" + cells][parseInt(cellIndex.toString(), 10)];\n                        var cellRenderer = new CellRenderer(_this.parent.grid, _this.parent.grid.serviceLocator);\n                        var td = _this.parent.getCellFromIndex(rowsObj[parseInt(j.toString(), 10)].index, cellIndex - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj[parseInt(j.toString(), 10)].data, { index: rowsObj[parseInt(j.toString(), 10)][\"\" + rowIdx] });\n                        var treecell = _this.parent.getRows()[parseInt(j.toString(), 10)]\n                            .cells[parseInt(cellIndex.toString(), 10)];\n                        _this.cellRender({ data: rowsObj[parseInt(j.toString(), 10)].data, cell: treecell, column: cell.column });\n                    }\n                }\n            });\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    // eslint-disable-next-line\n    Render.prototype.reactTemplateRender = function (args, callBack) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[\"\" + portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n        this.parent[\"\" + renderReactTemplates](callBack);\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req;\n                        if (e.result) {\n                            req = 0;\n                        }\n                        else {\n                            req = 1;\n                        }\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            var keys = Object.keys(data);\n            for (var i = 0; i < keys.length; i++) {\n                var tempData = data[parseInt(i.toString(), 10)];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[parseInt(i.toString(), 10)];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[parseInt(index.toString(), 10)][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[\"\" + isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var actionArgs = 'actionArgs';\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && args[\"\" + actionArgs].requestType === 'virtualscroll') {\n            this.parent.hideSpinner();\n        }\n        var records = args.result;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && (args[\"\" + actionArgs].requestType === 'virtualscroll' || args[\"\" + actionArgs].action === 'clearFilter' || args[\"\" + actionArgs].searchString === '')) {\n            this.parent.query.expands = [];\n        }\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                var _loop_1 = function (rec) {\n                    if (isCountRequired(this_1.parent) && records[parseInt(rec.toString(), 10)].hasChildRecords &&\n                        this_1.parent.initialRender) {\n                        records[parseInt(rec.toString(), 10)].expanded = false;\n                    }\n                    if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization) {\n                        var childRecords_1 = [];\n                        var parent_1 = this_1.parent;\n                        records.filter(function (e) {\n                            if (e[\"\" + parent_1.parentIdMapping] === records[parseInt(rec.toString(), 10)][\"\" + parent_1.idMapping]) {\n                                childRecords_1.push(e);\n                            }\n                        });\n                        if (childRecords_1.length) {\n                            records[parseInt(rec.toString(), 10)].expanded = true;\n                        }\n                        else if (records[parseInt(rec.toString(), 10)].hasChildRecords) {\n                            records[parseInt(rec.toString(), 10)].expanded = false;\n                        }\n                    }\n                    if (isNullOrUndefined(records[parseInt(rec.toString(), 10)].index)) {\n                        records[parseInt(rec.toString(), 10)].taskData = extend({}, records[parseInt(rec.toString(), 10)]);\n                        records[parseInt(rec.toString(), 10)].uniqueID = getUid(this_1.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[parseInt(rec.toString(), 10)].uniqueID, records[parseInt(rec.toString(), 10)], this_1.parent);\n                        records[parseInt(rec.toString(), 10)].level = 0;\n                        if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization && records[parseInt(rec.toString(), 10)][\"\" + this_1.parent.parentIdMapping] && records[parseInt(rec.toString(), 10)].level === 0) {\n                            records[parseInt(rec.toString(), 10)].level = records[parseInt(rec.toString(), 10)].level + 1;\n                        }\n                        records[parseInt(rec.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        if ((records[parseInt(rec.toString(), 10)][this_1.parent.hasChildMapping] ||\n                            this_1.parentItems.indexOf(records[parseInt(rec.toString(), 10)][this_1.parent.idMapping]) !== -1)) {\n                            records[parseInt(rec.toString(), 10)].hasChildRecords = true;\n                        }\n                        records[parseInt(rec.toString(), 10)].checkboxState = 'uncheck';\n                    }\n                };\n                var this_1 = this;\n                for (var rec = 0; rec < records.length; rec++) {\n                    _loop_1(rec);\n                }\n            }\n            else {\n                var dataResults = 'dataResults';\n                var expandRecord = 'expandRecord';\n                if (!isNullOrUndefined(records) && !((this.parent.loadChildOnDemand) && isCountRequired(this.parent) && !isNullOrUndefined(this.parent[\"\" + dataResults][\"\" + expandRecord])) &&\n                    !(isRemoteData(this.parent) && this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        if (isRemoteData(this.parent) && this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization) {\n            args.result = records;\n        }\n        else if (isRemoteData(this.parent) && this.parent.enableVirtualization && !this.parent.loadChildOnDemand) {\n            args.result = records;\n        }\n        else {\n            args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        }\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && this.parent.loadChildOnDemand\n            && this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var query = 'query';\n            var summaryQuery = args[\"\" + query].queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            args.result = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        var name = 'name';\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[parseInt(i.toString(), 10)].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[parseInt(i.toString(), 10)].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ?\n                        this.parent.grid.getCurrentViewRecords()[rowDetails.rows[parseInt(i.toString(), 10)].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ action: rowDetails[\"\" + name], record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        if (this.parent.enableVirtualization && rowDetails.action === 'remoteExpand') {\n            qry.take(this.parent.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('ExpandingAction', parseInt(rowDetails.record[this.parent.idMapping], 10).toString());\n            qry.expand(expandDetail);\n        }\n        else if (this.parent.enableVirtualization && rowDetails.action === 'collapse') {\n            qry.take(this.parent.grid.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('CollapsingAction', parseInt(rowDetails.record[this.parent.idMapping], 10).toString());\n            qry.expand(expandDetail);\n        }\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        if (rowDetails.action === 'remoteExpand' && this.parent.grid.filterModule && this.parent.grid.filterModule['value']) {\n            var filterqry = this.parent.grid.getDataModule().generateQuery().queries.filter(function (e) { return e.fn !== 'onPage' && typeof e.e.predicates !== 'undefined'; });\n            qry.queries.push(filterqry[0]);\n        }\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var remoteExpandedData = 'remoteExpandedData';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            var level = 'level';\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx;\n            var idMapping = _this.parent.idMapping;\n            if (_this.parent['isGantt'] && !_this.parent.loadChildOnDemand && _this.parent.hasChildMapping) {\n                for (var i = 0; i < _this.parent.grid.currentViewData.length; i++) {\n                    if (rowDetails.record[idMapping] === _this.parent.grid.currentViewData[i][idMapping]) {\n                        inx = i;\n                        break;\n                    }\n                }\n            }\n            else {\n                inx = datas.indexOf(rowDetails.record);\n            }\n            if (_this.parent.enableVirtualization && (rowDetails.action === 'collapse' || rowDetails.action === 'remoteExpand')) {\n                datas = [];\n                for (var i = 0; i < inx; i++) {\n                    datas.push(_this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                }\n            }\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            var resultChildData = [];\n            if (rowDetails.action === 'remoteExpand' && _this.parent.grid.filterModule && _this.parent.grid.filterModule['value']) {\n                for (var i = 0; i < datas.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(datas[parseInt(i.toString(), 10)], _this.parent.parentIdMapping) && datas[parseInt(i.toString(), 10)]['' + _this.parent.parentIdMapping] !== null && datas[parseInt(i.toString(), 10)].level === 0) {\n                        datas.splice(i, 1);\n                        i--;\n                    }\n                }\n                for (var i = 0; i < result.length; i++) {\n                    if (rowDetails.record['' + _this.parent.idMapping] !== result[parseInt(i.toString(), 10)]['' + _this.parent.idMapping] &&\n                        rowDetails.record['' + _this.parent.idMapping] === result[parseInt(i.toString(), 10)]['' + _this.parent.parentIdMapping]) {\n                        if (Object.prototype.hasOwnProperty.call(result, i)) {\n                            resultChildData.push(result[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n                result = resultChildData;\n            }\n            if (_this.parent.enableVirtualization && rowDetails.action === 'remoteExpand') {\n                rowDetails.record.childRecords = [];\n                for (var i = 0; i < result.length; i++) {\n                    if (rowDetails.record['' + _this.parent.idMapping] !== result[parseInt(i.toString(), 10)]['' + _this.parent.idMapping] &&\n                        rowDetails.record['' + _this.parent.idMapping] === result[parseInt(i.toString(), 10)]['' + _this.parent.parentIdMapping] && Object.prototype.hasOwnProperty.call(result, i)) {\n                        rowDetails.record.childRecords.push(result[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n            else {\n                rowDetails.record.childRecords = result;\n            }\n            for (var r = 0; r < result.length; r++) {\n                if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'remoteExpand') {\n                    _this.parent[\"\" + remoteExpandedData].push(rowDetails.record);\n                }\n                else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'collapse') {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            _this.parent[\"\" + remoteExpandedData].splice(i, 1);\n                        }\n                    }\n                }\n                result[parseInt(r.toString(), 10)].taskData = extend({}, result[parseInt(r.toString(), 10)]);\n                if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] && _this.parent.enableVirtualization && _this.parent[\"\" + remoteExpandedData].length) {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + level] + 1;\n                            var parentData = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)];\n                            delete parentData.childRecords;\n                            result[parseInt(r.toString(), 10)].parentItem = parentData;\n                            result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                        }\n                    }\n                }\n                else if (_this.parent.enableVirtualization) {\n                    if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                        _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                        if (isNullOrUndefined(result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping])) {\n                            result[parseInt(r.toString(), 10)].level = 0;\n                            if (rowDetails.action === 'remoteExpand') {\n                                result[parseInt(r.toString(), 10)].childRecords = [];\n                                result[parseInt(r.toString(), 10)].childRecords = rowDetails.record.childRecords;\n                            }\n                        }\n                        else {\n                            result[parseInt(r.toString(), 10)].level = rowDetails.record.level;\n                        }\n                    }\n                    else {\n                        var parentData = extend({}, rowDetails.record);\n                        delete parentData.childRecords;\n                        result[parseInt(r.toString(), 10)].parentItem = parentData;\n                        result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                    }\n                }\n                else {\n                    result[parseInt(r.toString(), 10)].level = rowDetails.record.level + 1;\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[parseInt(r.toString(), 10)].parentItem = parentData;\n                    result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                }\n                result[parseInt(r.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                result[parseInt(r.toString(), 10)].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[parseInt(r.toString(), 10)].checkboxState = 'uncheck';\n                if (_this.parent.enableVirtualization && isNullOrUndefined(result[parseInt(r.toString(), 10)].level)) {\n                    for (var p = 0; p < _this.parent.grid.currentViewData.length; p++) {\n                        if (_this.parent.grid.currentViewData[parseInt(p.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent.grid.currentViewData[parseInt(p.toString(), 10)]['level'] + 1;\n                        }\n                    }\n                }\n                setValue('uniqueIDCollection.' + result[parseInt(r.toString(), 10)].uniqueID, result[parseInt(r.toString(), 10)], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                    _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                    result[parseInt(r.toString(), 10)].hasChildRecords = true;\n                    if (_this.parent.enableVirtualization && _this.parent.loadChildOnDemand) {\n                        for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                            if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                result[parseInt(r.toString(), 10)].expanded = _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)]['expanded'];\n                            }\n                        }\n                        if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] !== rowDetails.record[\"\" + _this.parent.idMapping] && result[parseInt(r.toString(), 10)].expanded !== false) {\n                            result[parseInt(r.toString(), 10)].expanded = true;\n                        }\n                        else if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].expanded = false;\n                            _this.parent[\"\" + remoteCollapsedData].push(rowDetails.record);\n                        }\n                        else if (rowDetails.action === 'remoteExpand') {\n                            for (var i = 0; i < _this.parent.grid.currentViewData.length; i++) {\n                                if (_this.parent.grid.currentViewData[parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                    result.splice(r, 1, _this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)][_this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                                for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                                    if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                        _this.parent[\"\" + remoteCollapsedData].splice(i, 1);\n                                    }\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)].expanded !== false) {\n                                result[parseInt(r.toString(), 10)].expanded = true;\n                            }\n                        }\n                    }\n                    else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action !== 'collapse') {\n                        result[parseInt(r.toString(), 10)].expanded = true;\n                    }\n                    else if (!(_this.parent.enableVirtualization && _this.parent.loadChildOnDemand)) {\n                        result[parseInt(r.toString(), 10)].expanded = false;\n                    }\n                }\n                datas.splice(inx + r + 1, 0, result[parseInt(r.toString(), 10)]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[\"\" + result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[\"\" + result_1], true);\n                }\n            }\n            if (_this.parent.enableVirtualization) {\n                _this.parent.grid.pageSettings.totalRecordsCount = e.count;\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization) {\n            var index = this.parent.query.queries.indexOf(this.parent.query.queries.filter(function (q) { return q.fn === 'onSortBy'; })[0]);\n            if (index !== -1) {\n                this.parent.query.queries.splice(index, 1);\n            }\n            if (this.parent.grid.sortSettings.columns.length === 0) {\n                this.parent.query.sortBy(null, null);\n            }\n        }\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        var keys = Object.keys(data);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            var currentData = extend({}, data[parseInt(i.toString(), 10)]);\n            currentData.taskData = data[parseInt(i.toString(), 10)];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if ((!isNullOrUndefined(currentData[this.parent.childMapping]) && !isCountRequired(this.parent)) ||\n                ((currentData[this.parent.hasChildMapping]) && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            if (this.parent.enableVirtualization && this.parent.loadChildOnDemand && isRemoteData(this.parent)\n                && !this.parent.initialRender) {\n                if (!currentData.hasChildRecords && isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping])) {\n                    currentData.hasChildRecords = true;\n                    for (var c = 0; c < this.parent[\"\" + remoteCollapsedData].length; c++) {\n                        if (this.parent[\"\" + remoteCollapsedData][parseInt(c.toString(), 10)][\"\" + this.parent.idMapping] === currentData[\"\" + this.parent.idMapping]) {\n                            currentData.expanded = false;\n                        }\n                    }\n                }\n                else if (currentData.level === 0 && isNullOrUndefined(parentRecords) && !currentData.hasChildRecords) {\n                    currentData.level = currentData.level + 1;\n                }\n                if (currentData[\"\" + this.parent.hasChildMapping] && !isNullOrUndefined(currentData[\"\" + this.parent.expandStateMapping])) {\n                    currentData.expanded = currentData[\"\" + this.parent.expandStateMapping];\n                    currentData.hasChildRecords = true;\n                }\n                this.parent.flatData.push(currentData);\n            }\n            else if (isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n                this.parent['infiniteScrollData'].push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[\"\" + primaryKeyColumnName])) {\n            actionAddArgs.data[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n            dataValue.taskData[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var getColumnByField = 'getColumnByField';\n                var col = this.parent.grid.renderModule.data[\"\" + getColumnByField](this.parent.grid.\n                    sortSettings.columns[parseInt(srt.toString(), 10)].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            if (this.parent.allowRowDragAndDrop && !isNullOrUndefined(this.parent.rowDragAndDropModule['draggedRecord']) &&\n                this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                var dragdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                modifiedData.splice(dragdIndex, 1);\n                var dropdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                if (this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                    modifiedData.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n                else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                    modifiedData.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n            }\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: args });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[\"\" + isPdfExport] && (isNullOrUndefined(args[\"\" + isCollapsedStatePersist])\n            || args[\"\" + isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[parseInt(i.toString(), 10)], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[parseInt(i.toString(), 10)]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n    ContextMenuItems[ContextMenuItems[\"RowIndent\"] = 16] = \"RowIndent\";\n    ContextMenuItems[ContextMenuItems[\"RowOutdent\"] = 17] = \"RowOutdent\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend, merge, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { getNumberFormat } from '@syncfusion/ej2-grids';\nimport { RowDropSettings, getUid, parentsUntil } from '@syncfusion/ej2-grids';\nimport { LoadingIndicator } from '../models/loading-indicator';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, Query, JsonAdaptor, Deferred, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden, getExpandStatus } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\nimport * as literals from '../base/constant';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.indentOutdentAction = 'indentOutdentAction';\n        _this.modifiedRecords = [];\n        _this.stackedHeader = false;\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'index'];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[parseInt(i.toString(), 10)]] !== current[keys[parseInt(i.toString(), 10)]] &&\n                        excludeKeys.indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                        var isDate = old[keys[parseInt(i.toString(), 10)]] instanceof Date &&\n                            current[keys[parseInt(i.toString(), 10)]] instanceof Date;\n                        if (!isDate || (old[keys[parseInt(i.toString(), 10)]].getTime() !==\n                            current[keys[parseInt(i.toString(), 10)]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[\"\" + logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * Sends a post request to export tree grid to excel file in server side.\n     *\n     * @param  {string} url - Pass URL for server side excel export action.\n     * @returns {void}\n     */\n    TreeGrid.prototype.serverExcelExport = function (url) {\n        this.isExcel = true;\n        this.exportTreeGrid(url);\n    };\n    /**\n     * Sends a post request to export tree grid to pdf file in server side.\n     *\n     * @param  {string} url - Pass URL for server-side pdf export action.\n     * @returns {void}\n     */\n    TreeGrid.prototype.serverPdfExport = function (url) {\n        this.isExcel = false;\n        this.exportTreeGrid(url);\n    };\n    /**\n     * Sends a Post request to export Tree Grid to CSV file in server side.\n     *\n     * @param  {string} url - Pass URL for server-side csv export action.\n     * @returns {void}\n     */\n    TreeGrid.prototype.serverCsvExport = function (url) {\n        this.isExcel = true;\n        this.exportTreeGrid(url);\n    };\n    /**\n     * Exports the TreeGrid data to the specified URL using a POST request.\n     * @param {string} url - Defines exporting url\n     * @returns {void}\n     */\n    TreeGrid.prototype.exportTreeGrid = function (url) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treegrid = this;\n        var query = treegrid.grid.getDataModule().generateQuery(true);\n        var state = new UrlAdaptor().processQuery(new DataManager({ url: '' }), query);\n        var queries = JSON.parse(state.data);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var treeGridModel = JSON.parse(this.addOnPersist(['allowPaging', 'pageSettings', 'sortSettings', 'allowPdfExport', 'allowExcelExport', 'aggregates',\n            'filterSettings', 'columns', 'locale', 'searchSettings', 'idMapping', 'parentIdMapping', 'childMapping', 'treeColumnIndex']));\n        var include = ['field', 'headerText', 'type', 'format', 'visible',\n            'template', 'index', 'width', 'textAlign', 'headerTextAlign', 'columns'];\n        treeGridModel.filterSettings.columns = queries.where;\n        treeGridModel.searchSettings.fields = queries.search && queries.search[0]['fields'] || [];\n        treeGridModel.sortSettings.columns = queries.sorted;\n        treeGridModel.columns = this.setHeaderText(treeGridModel.columns, include);\n        var form = this.createElement('form', { id: 'ExportForm', styles: 'display:none;' });\n        var treeGridInput = this.createElement('input', { id: 'treeGridInput', attrs: { name: 'treeGridModel' } });\n        treeGridInput.value = JSON.stringify(treeGridModel);\n        form.method = 'POST';\n        form.action = url;\n        form.appendChild(treeGridInput);\n        document.body.appendChild(form);\n        form.submit();\n        form.remove();\n    };\n    /**\n     * Sets the header text and other properties for an array of columns based on specified criteria.\n     * @param {Column[]} columns - Defines array of columns\n     * @param {string[]} include - Defines array of sting\n     * @returns {Column[]} returns array of columns\n     */\n    TreeGrid.prototype.setHeaderText = function (columns, include) {\n        for (var i = 0; i < columns.length; i++) {\n            var column = this.getColumnByUid(columns[parseInt(i.toString(), 10)].uid);\n            if (this.stackedHeader && isNullOrUndefined(column)) {\n                column = !isNullOrUndefined(columns[parseInt(i.toString(), 10)].field) ?\n                    this.getColumnByField(columns[parseInt(i.toString(), 10)].field) : columns[parseInt(i.toString(), 10)];\n            }\n            columns[parseInt(i.toString(), 10)].headerText = column.headerText;\n            if (!isNullOrUndefined(column.template)) {\n                columns[parseInt(i.toString(), 10)].template = 'true';\n            }\n            if (columns[parseInt(i.toString(), 10)].format) {\n                columns[parseInt(i.toString(), 10)].format = getNumberFormat(this.getFormat(column.format), column.type, false, this.currencyCode);\n                if (!this.isExcel && (column.type === 'datetime' || column.type === 'date')) {\n                    columns[parseInt(i.toString(), 10)].format = columns[parseInt(i.toString(), 10)].format.toString().replace('AM/PM', 'tt');\n                }\n                columns[parseInt(i.toString(), 10)].type = column.type;\n            }\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.setHeaderText(columns[parseInt(i.toString(), 10)].columns, include);\n            }\n            var keys = Object.keys(columns[parseInt(i.toString(), 10)]);\n            for (var j = 0; j < keys.length; j++) {\n                if (include.indexOf(keys[parseInt(j.toString(), 10)]) < 0) {\n                    delete columns[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                }\n            }\n        }\n        return columns;\n    };\n    /**\n     * Retrieves the appropriate format string from the given format options.\n     *\n     * @param {string | NumberFormatOptions | DateFormatOptions} format - The format options to retrieve the format string from.\n     * @returns {string} The format string extracted from the provided format options.\n     */\n    TreeGrid.prototype.getFormat = function (format) {\n        return typeof (format) === 'object' ? !isNullOrUndefined(format.format) ?\n            format.format : format.skeleton : format;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridexpand')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                        }\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridcollapse')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                        }\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        target = e.target;\n                        parentTarget = target.parentElement;\n                        var cellIndex = parentTarget.cellIndex;\n                        if (this.grid.getColumnByIndex(cellIndex).editType === 'dropdownedit' && isNullOrUndefined(this.grid.getColumnByIndex(cellIndex).edit['obj'])) {\n                            parentTarget = target;\n                        }\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var cellIndex_1 = e.target.cellIndex;\n                            var row_1 = summaryElement.children[parseInt(cellIndex_1.toString(), 10)];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        target = e.target;\n                        parentTarget = target.parentElement;\n                        var cellIndex = parentTarget.cellIndex;\n                        if (this.grid.getColumnByIndex(cellIndex).editType === 'dropdownedit' && isNullOrUndefined(this.grid.getColumnByIndex(cellIndex).edit['obj'])) {\n                            parentTarget = target;\n                        }\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[parseInt(cIndex.toString(), 10)];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.infiniteScrollData = [];\n        this.remoteCollapsedData = [];\n        this.remoteExpandedData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'mousemove', this.mouseMoveHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        var splitFrozenCount = 'splitFrozenCount';\n        this.grid[\"\" + splitFrozenCount](this.getColumns());\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        var freezePresent = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'freeze';\n        });\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns() ||\n            this.grid.getFrozenLeftColumnsCount() || this.grid.getFrozenRightColumnsCount() || freezePresent.length) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        var IsRowDDInjected = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'rowDragAndDrop';\n        });\n        if (this.allowRowDragAndDrop || IsRowDDInjected.length) {\n            if ((!isNullOrUndefined(this.toolbar) && (this.toolbar['includes']('Indent') ||\n                this.toolbar['includes']('Outdent')))) {\n                this.isIndentEnabled = true;\n            }\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        if (this.isVue) {\n            this.grid.isVue = true;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.grid.vueInstance = this.vueInstance;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[parseInt(i.toString(), 10)].member === 'virtualscroll') {\n                    modules[parseInt(i.toString(), 10)].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        var root = 'root';\n        this.grid[\"\" + root] = this[\"\" + root] ? this[\"\" + root] : this;\n        this.grid.appendTo(gridContainer);\n        var gridContent = this.element.getElementsByClassName('e-gridcontent')[0].childNodes[0];\n        gridContent.setAttribute('tabindex', '0');\n        var contentTable = this.element.getElementsByClassName('e-content')[0].querySelector('.e-table');\n        contentTable.setAttribute('role', 'treegrid');\n        if (this.isIndentEnabled) {\n            this.refreshToolbarItems();\n        }\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[\"\" + destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[\"\" + destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[\"\" + portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.refreshToolbarItems = function () {\n        var toolbarElement = this.toolbarModule.getToolbar();\n        var indentID = this.element.id + '_gridcontrol_indent';\n        var outdentID = this.element.id + '_gridcontrol_outdent';\n        var indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n        var outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n        indentElement.classList.add('e-hidden');\n        outdentElement.classList.add('e-hidden');\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this, this.grid.serviceLocator);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.enableVirtualMaskRow = this.enableVirtualMaskRow;\n        this.grid.loadingIndicator = this.loadingIndicator;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[\"\" + templateInstance] = this[\"\" + templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[\"\" + isJsComponent] = true;\n        var enableHtmlSanitizer = 'enableHtmlSanitizer';\n        this.grid[\"\" + enableHtmlSanitizer] = this.enableHtmlSanitizer;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.IsExpandCollapseClicked = function (args) {\n        if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n            || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))\n            && !this.selectionSettings.checkboxOnly) {\n            if ((!isNullOrUndefined(args.data) && args.data['hasChildRecords']) || (args.rowIndex !== -1 && isNullOrUndefined(args.data))) {\n                args.cancel = true;\n                return;\n            }\n        }\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowDeselecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowDeselecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (_this.enableVirtualization && args.isHeaderCheckboxClicked &&\n                _this.grid.currentViewData.length !== _this.grid.selectionModule.selectedRowIndexes.length) {\n                var updateRowSelection = 'updateRowSelection';\n                for (var i = 0; i < _this.getRows().length; i++) {\n                    if (_this.getRows()[parseInt(i.toString(), 10)].getElementsByClassName('e-frame e-icons e-uncheck').length) {\n                        _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(i.toString(), 10)], _this.getCurrentViewRecords()[parseInt(i.toString(), 10)].index);\n                    }\n                }\n            }\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (!isNullOrUndefined(args.data)) {\n                _this.notify(events.rowDeselected, args);\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[\"\" + rowIndex]].classList.contains('e-summaryrow')) {\n                args[\"\" + rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[\"\" + loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = void 0;\n                if (_this.dataResults.result) {\n                    req = 0;\n                }\n                else {\n                    req = 1;\n                }\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        if (totalRows[parseInt(i.toString(), 10)].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            var action = 'action';\n            if (_this.enableVirtualization && _this.selectionSettings.persistSelection && (_this.dataResults[\"\" + action] === 'expand' || _this.dataResults[\"\" + action] === 'collapse')) {\n                var refreshPersistSelection = 'refreshPersistSelection';\n                _this.grid.selectionModule[\"\" + refreshPersistSelection]();\n                if (_this.grid.selectionSettings.type === 'Single') {\n                    var updateRowSelection = 'updateRowSelection';\n                    var index = _this.getCurrentViewRecords().indexOf(_this.grid.selectionModule['data']);\n                    _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(index.toString(), 10)], index);\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[\"\" + dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var actualTarget = 'actualTarget';\n            var target = _this.grid.selectionModule[\"\" + actualTarget];\n            if (!isNullOrUndefined(target) && (target.classList.contains('e-treegridexpand') || target.classList.contains('e-treegridcollapse'))) {\n                args.cancel = true;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                if (args.action.requestType !== 'infiniteScroll') {\n                    _this.infiniteScrollData = [];\n                }\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[\"\" + prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        var _this = this;\n        if (this.rowTemplate) {\n            if (this.isReact && this.getContentTable().rows.length === 0) {\n                setTimeout(function () {\n                    _this.treeColumnRowTemplate();\n                    if (_this.enableCollapseAll) {\n                        var currentData = _this.getCurrentViewRecords();\n                        var rows = _this.getContentTable().rows;\n                        for (var i = 0; i < rows.length; i++) {\n                            var args = { data: currentData[parseInt(i.toString(), 10)],\n                                row: rows[parseInt(i.toString(), 10)] };\n                            _this.renderModule.RowModifier(args);\n                        }\n                    }\n                }, 0);\n            }\n            else {\n                this.treeColumnRowTemplate();\n            }\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[\"\" + dataSource].json = extendArray(this.dataSource[\"\" + dataSource].json);\n            this.grid.dataSource[\"\" + ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[\"\" + ready])) {\n                this.grid.dataSource[\"\" + ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[\"\" + dataSource].offline = true;\n                    dm[\"\" + isDataAvailable] = true;\n                    dm[\"\" + dataSource].json = e.result;\n                    dm[\"\" + adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (isRemoteData(_this) && _this.enableVirtualization) {\n                if (args.requestType === 'virtualscroll') {\n                    _this.query.expand('VirtualScrollingAction');\n                    _this.showSpinner();\n                }\n                else if (args.requestType === 'searching' && args.searchString === '') {\n                    _this.query.expand('ClearSearchingAction');\n                }\n                else if (args.action === 'clearFilter') {\n                    _this.query.expand('ClearFilteringAction');\n                }\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 && _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n                if (isNullOrUndefined(_this.grid['changedProperties'].dataSource)) {\n                    _this.grid.renderModule.data.dataManager = _this.grid.dataSource instanceof DataManager ?\n                        _this.grid.dataSource :\n                        (isNullOrUndefined(_this.grid.dataSource) ? new DataManager() : new DataManager(_this.grid.dataSource));\n                    _this.grid.renderModule.data.isQueryInvokedFromData = true;\n                    _this.grid.query = _this.grid.query instanceof Query ? _this.grid.query : new Query();\n                }\n            }\n            if (_this.action !== 'indenting' && _this.action !== 'outdenting') {\n                var callBackPromise_2 = new Deferred();\n                _this.trigger(events.actionBegin, args, function (actionArgs) {\n                    if (!actionArgs.cancel) {\n                        _this.notify(events.beginEdit, actionArgs);\n                    }\n                    callBackPromise_2.resolve(actionArgs);\n                });\n                return callBackPromise_2;\n            }\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                _this.grid.refresh();\n            }\n            if (args.action === 'filter') {\n                if (_this.filterModule['currentFilterObject'] !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.requestType === 'searching') {\n                if (_this.searchSettings.key !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.action === 'clearFilter' && _this.enableCollapseAll) {\n                _this.collapseAll();\n            }\n            if (_this.action === 'indenting' || _this.action === 'outdenting') {\n                _this.action = _this.action === 'indenting' ? 'indented' : 'outdented';\n                var selectedItem_1 = [_this.selectedRecords];\n                var actionArgs = {\n                    data: selectedItem_1,\n                    dropIndex: _this.dropIndex,\n                    dropPosition: _this.dropPosition,\n                    modifiedRecords: _this.modifiedRecords,\n                    requestType: _this.action,\n                    row: _this.selectedRows\n                };\n                _this.trigger(events.actionComplete, actionArgs);\n                var currentPageItem = _this.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === selectedItem_1[0].uniqueID;\n                });\n                if (!currentPageItem.length) {\n                    _this.refreshToolbarItems();\n                }\n                _this.action = '';\n                _this.selectedRecords = _this.selectedRows = _this.modifiedRecords = [];\n            }\n            else {\n                if (_this.grid.isFrozenGrid() && _this.enableVirtualization && args['tableName'] === 'movable') {\n                    var movableContent = _this.grid.element.querySelector('.' + literals.movableContent);\n                    var frozenContent = _this.grid.element.querySelector('.' + literals.frozenContent);\n                    movableContent.style.height = frozenContent.style.height = 'auto';\n                }\n                _this.trigger(events.actionComplete, args);\n            }\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[\"\" + ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                    this.columns.push(keys[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[\"\" + guid] = this.editSettings[\"\" + guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[parseInt(i.toString(), 10)]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    case 'Indent':\n                    case ContextMenuItems.RowIndent:\n                        items.push({ text: this.l10n.getConstant('RowIndent'),\n                            target: '.e-content', iconCss: 'e-indent e-icons', id: this.element.id + '_gridcontrol_cmenu_Indent' });\n                        break;\n                    case 'Outdent':\n                    case ContextMenuItems.RowOutdent:\n                        items.push({ text: this.l10n.getConstant('RowOutdent'),\n                            target: '.e-content', iconCss: 'e-outdent e-icons', id: this.element.id + '_gridcontrol_cmenu_Outdent' });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[parseInt(i.toString(), 10)]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        if (this.columnModel.length === 0) {\n            index = index === 0 ? -1 : index;\n        }\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[parseInt(i.toString(), 10)].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[parseInt(i.toString(), 10)] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[parseInt(i.toString(), 10)];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[parseInt(i.toString(), 10)][\"\" + prop])) {\n                        gridColumn[\"\" + prop] = this.getGridColumns(column[parseInt(i.toString(), 10)][\"\" + prop], false, this.columnModel.length - 1);\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (this.initialRender && !isNullOrUndefined(treeColumn) && this.enablePersistence && prop === 'edit') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = treeColumn[\"\" + prop];\n                    }\n                    else if (!(treeColumn) || prop !== 'sortComparer') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[\"\" + stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n            if (!isNullOrUndefined(this.columnModel[this.treeColumnIndex]) && this.enableRtl) {\n                if (gridColumn.field === this.columnModel[this.treeColumnIndex].field) {\n                    if (isNullOrUndefined(this.treeColumnTextAlign)) {\n                        this.treeColumnTextAlign = this.columnModel[this.treeColumnIndex].textAlign;\n                        this.treeColumnField = this.columnModel[this.treeColumnIndex].field;\n                    }\n                    gridColumn.textAlign = 'Right';\n                }\n            }\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'enableColumnVirtualization':\n                    this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[\"\" + prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    this.TreeGridLocale();\n                    this.grid.toolbar = this.getGridToolbar();\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableAdaptiveUI':\n                    this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    if (!isNullOrUndefined(this.treeColumnField)) {\n                        this.updateTreeColumnTextAlign();\n                    }\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[\"\" + prop].mode &&\n                        (newProp[\"\" + prop].mode === 'Cell' || newProp[\"\" + prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    TreeGrid.prototype.updateTreeColumnTextAlign = function () {\n        var gridColumn = this.grid.getColumnByField(this.treeColumnField);\n        gridColumn.textAlign = this.enableRtl ? 'Right' : this.treeColumnTextAlign;\n        this.grid.refreshColumns();\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[parseInt(i.toString(), 10)]]) {\n                this[modules[parseInt(i.toString(), 10)]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        if (!isNullOrUndefined(this.rowDropSettings.targetID) &&\n            isNullOrUndefined(document.getElementById(this.grid.rowDropSettings.targetID))) {\n            document.getElementById(this.rowDropSettings.targetID).id = this.grid.rowDropSettings.targetID;\n            this.rowDropSettings.targetID = this.grid.rowDropSettings.targetID;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'treeColumnIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[parseInt(i.toString(), 10)]];\n            for (var k = 0, val = ignoreOnPersist[keyEntity[parseInt(i.toString(), 10)]]; (!isNullOrUndefined(val) && k < val.length); k++) {\n                var objVal = val[parseInt(k.toString(), 10)];\n                delete currentObject[\"\" + objVal];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n                this.ignoreInArrays(ignoreOnColumn, columns[parseInt(i.toString(), 10)].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        if (isNullOrUndefined(column.template)) {\n            for (var i = 0; i < ignoreOnColumn.length; i++) {\n                delete column[ignoreOnColumn[parseInt(i.toString(), 10)]];\n                column.filter = {};\n            }\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n        if (this.grid.isCheckBoxSelection && !this.grid.isPersistSelection) {\n            if (this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                var checkedTarget = this.grid.getHeaderContent().querySelector('.e-checkselectall');\n                var checkedLen = this.grid.getSelectedRowIndexes().length;\n                var totalRecords = this.getCurrentViewRecords().length;\n                if (checkedLen === totalRecords) {\n                    var spanEle = checkedTarget.nextElementSibling;\n                    removeClass([spanEle], ['e-stop', 'e-uncheck']);\n                    addClass([spanEle], ['e-check']);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.mouseMoveHandler = function (e) {\n        var showTooltip = false;\n        var cols = this.getColumns();\n        if (this.clipMode === 'EllipsisWithTooltip') {\n            showTooltip = true;\n        }\n        var element = parentsUntil(e.target, 'e-ellipsistooltip');\n        if ((showTooltip || (this.treeColumnIndex !== -1 && cols[this.treeColumnIndex].clipMode === 'EllipsisWithTooltip')) && element !== null && parseInt(element.getAttribute('data-colindex'), 10) === this.treeColumnIndex && element.children[0].scrollWidth > element.children[0].clientWidth) {\n            var tooltip = new Tooltip({\n                content: element.textContent\n            });\n            tooltip.appendTo(element);\n        }\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[\"\" + isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[\"\" + primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n        var visibleRecords = this.getVisibleRecords();\n        if (visibleRecords.length > 0 && key === (visibleRecords[visibleRecords.length - 1])[\"\" + primaryKey]) {\n            var table = this.getContentTable();\n            var sHeight = table.scrollHeight;\n            var clientHeight = this.getContent().clientHeight;\n            this.lastRowBorder(this.getRows()[currentRecords.indexOf(record)], sHeight <= clientHeight);\n        }\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        var columnModel = 'columnModel';\n        if (this.grid.columns.length !== this.columnModel.length) {\n            Columns = this.grid[\"\" + columnModel];\n        }\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    TreeGrid.prototype.getVirtualColIndexByUid = function (uid) {\n        var columnModel = 'columnModel';\n        var index = iterateArrayOrObject(this.grid[\"\" + columnModel], function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        var gridColumn;\n        if (!this.enableColumnVirtualization || (this.enableColumnVirtualization && this.columnModel.length === gridColumns.length)) {\n            this.columnModel = [];\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[\"\" + prop] = gridColumns[parseInt(i.toString(), 10)][\"\" + prop];\n                }\n                this.columnModel.push(new Column(gridColumn));\n                if (field === this.columnModel[parseInt(i.toString(), 10)].field && this.columnModel[parseInt(i.toString(), 10)].type !== 'checkbox' && (!isNullOrUndefined(temp) && temp !== '')) {\n                    this.columnModel[parseInt(i.toString(), 10)].template = temp;\n                }\n            }\n        }\n        var deepMerge = 'deepMerge';\n        this[\"\" + deepMerge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            this.stackedHeader = true;\n        }\n        if (this.stackedHeader && this.allowResizing) {\n            this.updateColumnsWidth(this.columns);\n        }\n        if (!this.stackedHeader) {\n            merge(this.columns, this.columnModel);\n        }\n        this[\"\" + deepMerge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnsWidth = function (columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.updateColumnsWidth(column.columns);\n            }\n            else if (column.field) {\n                var currentColumn = _this.grid.getColumnByField(column.field);\n                if (!isNullOrUndefined(currentColumn)) {\n                    column.width = currentColumn.width;\n                }\n            }\n        });\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[\"\" + persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[\"\" + persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                dRows.push(rows[parseInt(i.toString(), 10)]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        var isSummaryRow = 'isSummaryRow';\n        return this.grid.currentViewData.filter(function (e) { return isNullOrUndefined(e[\"\" + isSummaryRow]); });\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            if (!(this.dataSource instanceof DataManager)) {\n                this.grid.dataSource = this.flatData;\n            }\n            else {\n                this.grid.setProperties({\n                    dataSource: new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor)\n                }, true);\n            }\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[parseInt(i.toString(), 10)]);\n                if (!currentViewRecords[parseInt(i.toString(), 10)].expanded) {\n                    i += findChildrenRecords(currentViewRecords[parseInt(i.toString(), 10)]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if ((this.getBatchChanges()[this.changedRecords].length || this.getBatchChanges()[this.deletedRecords].length ||\n                this.getBatchChanges()[this.addedRecords].length) && this.editSettings.showConfirmDialog) {\n                var dialogObj = this.grid.editModule[\"\" + obj];\n                this.grid.editModule[\"\" + showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo_1 = this.grid.getRowInfo(target);\n            var record = rowInfo_1.rowData;\n            if (this.grid.isFrozenGrid() && this.enableVirtualization && !Object.keys(record).length) {\n                var freezeRows = 'freezeRows';\n                record = this.grid.contentModule[\"\" + freezeRows].filter(function (e) { return e.uid === rowInfo_1.row.getAttribute('data-uid'); })[0].data;\n            }\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo_1.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo_1.row, record);\n            }\n            else {\n                this.expandRow(rowInfo_1.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @param {Object} key - Primary key value\n     * @param {number} level - Specifies the hierarchical level of the record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record, key, level) {\n        var _this = this;\n        var parentRec = this.parentData;\n        if (!this.enableVirtualization) {\n            parentRec = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        if (this.isExpandAll && !isRemoteData(this)) {\n            var args = { data: parentRec, row: row, cancel: false };\n            var pagerValuePresent = false;\n            if (this.grid.pagerModule && !isNullOrUndefined(this.grid.pagerModule.pagerObj.pagerdropdownModule)) {\n                pagerValuePresent = this.grid.pagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value ? true : false;\n            }\n            if (!this.isExpandingEventTriggered) {\n                this.trigger(events.expanding, args, function (expandingArgs) {\n                    _this.expandAllPrevent = expandingArgs.cancel;\n                    if (!expandingArgs.cancel) {\n                        if (expandingArgs.expandAll) {\n                            _this.expandCollapseAllChildren(record, 'expand', key, level);\n                        }\n                        _this.expandRows(row, record, parentRec, key, level);\n                    }\n                });\n            }\n            else if ((!this.allowPaging || (pagerValuePresent && this.grid.pagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value === 'All')) &&\n                !this.expandAllPrevent && this.isExpandingEventTriggered) {\n                this.expandRows(row, record, parentRec, key, level);\n            }\n            this.isExpandingEventTriggered = true;\n        }\n        else if (!this.isExpandAll || (this.isExpandAll && isRemoteData(this))) {\n            var args = { data: record, row: row, cancel: false };\n            this.trigger(events.expanding, args, function (expandingArgs) {\n                if (!expandingArgs.cancel) {\n                    if (expandingArgs.expandAll) {\n                        _this.expandCollapseAllChildren(record, 'expand', key, level);\n                    }\n                    _this.expandRows(row, record, parentRec, key, level);\n                }\n            });\n        }\n    };\n    // Internal method to handle the rows expand\n    TreeGrid.prototype.expandRows = function (row, record, parentRec, key, level) {\n        this.expandCollapse('expand', row, record);\n        var children = 'Children';\n        if (!(isRemoteData(this) && !isOffline(this)) && (!isCountRequired(this) || !isNullOrUndefined(record[\"\" + children]))) {\n            var expandArgs = { data: record, row: row };\n            if (!isNullOrUndefined(this.expandStateMapping)) {\n                this.updateExpandStateMapping(expandArgs.data, true);\n            }\n            if (this.isExpandAll && !this.isExpandedEventTriggered) {\n                this.isExpandedEventTriggered = true;\n                expandArgs = { data: parentRec, row: row };\n                this.trigger(events.expanded, expandArgs);\n            }\n            else if (!this.isExpandAll) {\n                this.trigger(events.expanded, expandArgs);\n            }\n        }\n    };\n    TreeGrid.prototype.expandCollapseAllChildren = function (record, action, key, level) {\n        if ((!isNullOrUndefined(key) && record[this.getPrimaryKeyFieldNames()[0]] !== key) ||\n            (!isNullOrUndefined(level) && level !== record.level)) {\n            return;\n        }\n        var records = findChildrenRecords(record).filter(function (e) {\n            return e.hasChildRecords;\n        });\n        records.unshift(record);\n        for (var i = 0; i < records.length; i++) {\n            this.expandCollapse(action, null, records[parseInt(i.toString(), 10)]);\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            if (this.detailTemplate) {\n                record = this.grid.getCurrentViewRecords()[row.getAttribute('data-rowindex')];\n            }\n            else {\n                if (this.enableVirtualization && this.isCollapseAll) {\n                    if (this.isExpandAll && row.rowIndex === -1) {\n                        record = this.grid.getCurrentViewRecords()[parseInt(row.getAttribute('data-rowindex'), 10)];\n                    }\n                    else {\n                        record = this.grid.getCurrentViewRecords()[row.rowIndex];\n                    }\n                }\n                else {\n                    record = this.grid.getCurrentViewRecords()[parseInt(row.getAttribute('data-rowindex'), 10)];\n                }\n            }\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @param {Object} key - Primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record, key) {\n        var _this = this;\n        var parentRec = this.parentData;\n        if (!this.enableVirtualization) {\n            parentRec = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        record = this.getCollapseExpandRecords(row, record);\n        if (this.isCollapseAll && !isRemoteData(this)) {\n            var args = { data: parentRec, row: row, cancel: false };\n            if (!this.isCollapsingEventTriggered) {\n                this.trigger(events.collapsing, args, function (collapsingArgs) {\n                    _this.collapseAllPrevent = collapsingArgs.cancel;\n                    if (!collapsingArgs.cancel) {\n                        if (collapsingArgs.collapseAll) {\n                            _this.expandCollapseAllChildren(record, 'collapse', key);\n                        }\n                        _this.collapseRows(row, record, parentRec, key);\n                    }\n                });\n            }\n            else if (!this.allowPaging && !this.collapseAllPrevent && this.isCollapsingEventTriggered) {\n                this.collapseRows(row, record, parentRec, key);\n            }\n            this.isCollapsingEventTriggered = true;\n        }\n        else if (!this.isCollapseAll || (this.isCollapseAll && isRemoteData(this))) {\n            var args = { data: record, row: row, cancel: false };\n            this.trigger(events.collapsing, args, function (collapsingArgs) {\n                if (!collapsingArgs.cancel) {\n                    _this.collapseRows(row, record, parentRec, key);\n                }\n            });\n        }\n    };\n    // Internal method for handling the rows collapse\n    TreeGrid.prototype.collapseRows = function (row, record, parentRec, key) {\n        this.expandCollapse('collapse', row, record);\n        var collapseArgs = { data: record, row: row };\n        if (!isRemoteData(this)) {\n            if (!isNullOrUndefined(this.expandStateMapping)) {\n                this.updateExpandStateMapping(collapseArgs.data, false);\n            }\n            if (this.isCollapseAll && !this.isCollapsedEventTriggered) {\n                this.isCollapsedEventTriggered = true;\n                collapseArgs = { data: parentRec, row: row };\n                this.trigger(events.collapsed, collapseArgs);\n            }\n            else if (!this.isCollapseAll) {\n                this.trigger(events.collapsed, collapseArgs);\n            }\n            if (this.enableInfiniteScrolling) {\n                var scrollHeight = this.grid.getContent().firstElementChild.scrollHeight;\n                var scrollTop = this.grid.getContent().firstElementChild.scrollTop;\n                if ((scrollHeight - scrollTop) < this.grid.getRowHeight() + +this.height) {\n                    this.grid.getContent().firstElementChild.scrollBy(0, this.grid.getRowHeight());\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateExpandStateMapping = function (record, state) {\n        var totalRecords = record;\n        if (totalRecords.length) {\n            for (var i = 0; i < totalRecords.length; i++) {\n                totalRecords[parseInt(i.toString(), 10)][this.expandStateMapping] = state;\n                editAction({ value: totalRecords[parseInt(i.toString(), 10)], action: 'edit' }, this, this.isSelfReference, totalRecords[parseInt(i.toString(), 10)].index, this.grid.selectedRowIndex, this.expandStateMapping);\n            }\n        }\n        else {\n            record[\"\" + this.expandStateMapping] = state;\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, this.expandStateMapping);\n        }\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandAction(rec, null, level, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var record = getObject('records', rec);\n            this.expandAction(record, null, level);\n        }\n    };\n    /**\n     * Expands the records by given primary key value\n     *\n     * @param {Object} key - Expands the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Expand');\n    };\n    TreeGrid.prototype.expandAction = function (record, key, level, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        var _loop_1 = function (i) {\n            if (!isNullOrUndefined(record[parseInt(i.toString(), 10)].parentItem)) {\n                var puniqueID_1 = record[parseInt(i.toString(), 10)].parentItem.uniqueID;\n                var parentItem = this_1.flatData.filter(function (e) {\n                    return e.uniqueID === puniqueID_1;\n                });\n                if (isRemoteData(this_1)) {\n                    parentItem = this_1.getCurrentViewRecords().filter(function (e) {\n                        return e.uniqueID === puniqueID_1;\n                    });\n                }\n                if (parentItem[0].expanded === false) {\n                    record.push(parentItem[0]);\n                    parentItem[0].expanded = true;\n                }\n                else {\n                    if (!getExpandStatus(this_1, parentItem[0], this_1.parentData)) {\n                        if (parentItem[0].expanded && parentItem[0].parentItem !== undefined) {\n                            record.push(parentItem[0]);\n                        }\n                    }\n                }\n            }\n            if (!isPaging) {\n                this_1.expandRow(null, record[parseInt(i.toString(), 10)], key, level);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < record.length; i++) {\n            _loop_1(i);\n        }\n        if (isPaging) {\n            this.expandRow(null, record, key, level);\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseAction(record, null, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var records = getObject('records', rec);\n            this.collapseAction(records);\n        }\n    };\n    /**\n     * Collapses the records by given primary key value\n     *\n     * @param {Object} key - Collapses the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Collapse');\n    };\n    TreeGrid.prototype.expandCollapseActionByKey = function (key, action) {\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var dataSource = isRemoteData(this) ? this.getCurrentViewRecords() : this.grid.dataSource;\n        if (!isNullOrUndefined(primaryKeyField)) {\n            var rec = dataSource.filter(function (e) {\n                return e[\"\" + primaryKeyField].toString() === key.toString();\n            });\n            if (action === 'Expand') {\n                this.expandAction(rec, key, null);\n            }\n            else {\n                this.collapseAction(rec, key);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseAction = function (record, key, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        if (isPaging) {\n            this.collapseRow(null, record);\n        }\n        else {\n            for (var i = 0; i < record.length; i++) {\n                this.collapseRow(null, record[parseInt(i.toString(), 10)], key);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[\"\" + endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.isExpandedEventTriggered = false;\n        this.isExpandingEventTriggered = false;\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.isCollapsedEventTriggered = false;\n        this.isCollapsingEventTriggered = false;\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                for (var i = 0; i < rows.length; i++) {\n                    if (action === 'collapse') {\n                        if (!isNullOrUndefined(this.getCurrentViewRecords()[rows[parseInt(i.toString(), 10)].rowIndex])) {\n                            this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                    else {\n                        if (!this.enableVirtualization) {\n                            this.expandRow(rows[parseInt(i.toString(), 10)]);\n                        }\n                        else if (rows[0].getAttribute('aria-expanded') !== 'true') {\n                            this.expandRow(rows[0]);\n                        }\n                    }\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    this.expandRow(rows[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var _this = this;\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.grid.currentViewData.filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if ((!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) || (action === 'collapse' || (this.isExpandAll && this.loadChildOnDemand) && !isRemoteData(this) && this.isSelfReference && isCountRequired(this))) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.grid.currentViewData.indexOf(record);\n            row = gridRows[parseInt(rowIndex.toString(), 10)];\n        }\n        else {\n            rowIndex = +row.getAttribute('data-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            row.querySelectorAll('.e-treerowcell')[0].setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n                var lastrowIdx = this.getVisibleRecords()[this.getVisibleRecords().length - 1]['index'];\n                var lastRow = this.getRowByIndex(lastrowIdx);\n                if (this.grid.getContentTable().clientHeight <= this.grid.getContent().clientHeight && !isNullOrUndefined(lastRow) && !lastRow.cells[0].classList.contains('e-lastrowcell')) {\n                    this.lastRowBorder(lastRow, true);\n                }\n            }\n            if (isCountRequired(this) && action === 'expand') {\n                var currentData = this.getCurrentViewRecords();\n                var visibleRecords = currentData.filter(function (e) {\n                    return getExpandStatus(_this, e, _this.parentData);\n                });\n                this.dataResults.result = visibleRecords;\n            }\n            if (!isNullOrUndefined(targetEle) && targetEle.closest('.e-treerowcell').classList.contains('e-cellselectionbackground')) {\n                targetEle.closest('.e-treerowcell').classList.remove('e-cellselectionbackground');\n                targetEle.closest('.e-treerowcell').removeAttribute('aria-selected');\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i >= 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        if (expandingArgs.requestType === 'collapse' && isCountRequired(this)) {\n            var flatDataRecords = this.flatData.slice();\n            for (var i = 0; i < flatDataRecords.length; i++) {\n                if (flatDataRecords[parseInt(i.toString(), 10)]['parentUniqueID'] === expandingArgs.data['uniqueID']) {\n                    flatDataRecords.splice(i, 1);\n                    i = i - 1;\n                }\n            }\n            this.dataResults.result = flatDataRecords;\n            return;\n        }\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[\"\" + childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                if (isCountRequired(_this)) {\n                    _this.flatData = _this.dataResults.result;\n                }\n                if (_this.enableInfiniteScrolling && isCountRequired(_this)) {\n                    _this.flatData = _this.infiniteScrollData;\n                }\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[parseInt(i.toString(), 10)].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[parseInt(i.toString(), 10)]) {\n                        childData[parseInt(i.toString(), 10)].level = record.level + 1;\n                        childData[parseInt(i.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        childData[parseInt(i.toString(), 10)].parentItem = extend({}, record);\n                        childData[parseInt(i.toString(), 10)].taskData = extend({}, childData[parseInt(i.toString(), 10)]);\n                        delete childData[parseInt(i.toString(), 10)].parentItem.childRecords;\n                        delete childData[parseInt(i.toString(), 10)].taskData.parentItem;\n                        childData[parseInt(i.toString(), 10)].parentUniqueID = record.uniqueID;\n                        childData[parseInt(i.toString(), 10)].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[parseInt(i.toString(), 10)].uniqueID, childData[parseInt(i.toString(), 10)], _this);\n                        if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][_this.childMapping]) ||\n                            (childData[parseInt(i.toString(), 10)][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[parseInt(i.toString(), 10)].hasChildRecords = true;\n                        }\n                        if (isCountRequired(_this) && record[_this.childMapping] && record[_this.childMapping][parseInt(i.toString(), 10)]) {\n                            currentData.splice(index + 1 + i, 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                        else {\n                            currentData.splice(index + 1 + i, record[_this.childMapping] &&\n                                record[_this.childMapping][parseInt(i.toString(), 10)] ? 1 : 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[parseInt(index.toString(), 10)][\"\" + _this.childMapping] = childData;\n                currentData[parseInt(index.toString(), 10)].childRecords = childData;\n                currentData[parseInt(index.toString(), 10)].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[parseInt(index.toString(), 10)].uniqueID, currentData[parseInt(index.toString(), 10)], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[parseInt(j.toString(), 10)]);\n                }\n            }\n            if (isCountRequired(_this) && _this.loadChildOnDemand && expandingArgs.requestType === 'expand') {\n                _this.dataResults['expandRecord'] = {};\n                _this.dataResults['expandRecord'] = expandingArgs.data;\n            }\n            _this.isExpandRefresh = true;\n            var scrollHeightBeforeRefresh = _this.getContentTable().parentElement.scrollTop;\n            _this.grid.refresh();\n            if (_this.enableInfiniteScrolling) {\n                _this.getContentTable().parentElement.scrollTop = scrollHeightBeforeRefresh;\n            }\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        var fetchRemoteChildData = 'fetchRemoteChildData';\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return ((r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1))) || (r.querySelector('.e-gridrowindex' + record.index + 'level0' + '.e-summarycell')));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else if (action === 'collapse' && this.enableVirtualization) {\n            this.dataModule[\"\" + fetchRemoteChildData]({ action: action, record: args.data, rows: null, parentRow: args.row });\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.grid.currentViewData.filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var freezeRightRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[parseInt(i.toString(), 10)][\"\" + primaryKeyField]);\n                rows.push(this.getRows()[parseInt(rowIndex.toString(), 10)]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns() || freeze) {\n            movableRows = this.getRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (freeze) {\n            freezeRightRows = this.getRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var gridRowsObject = this.grid.getRowsObject();\n        var currentViewData = this.grid.currentViewData;\n        var currentRecord = currentViewData.filter(function (e) {\n            return e.uniqueID === record.uniqueID;\n        });\n        var currentIndex = currentViewData.indexOf(currentRecord[0]);\n        if (!isNullOrUndefined(gridRowsObject[parseInt(currentIndex.toString(), 10)].visible) &&\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible !== false) {\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = true;\n        }\n        var detailrows = gridRows.filter(function (r) {\n            return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)])) {\n                rows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization\n                || this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[rows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'none' ? true : false;\n                var parentRecord = currentViewData.filter(function (e) {\n                    return e.uniqueID === currentRecord[0].parentUniqueID;\n                });\n                if (!isNullOrUndefined(parentRecord[0]) && gridRows[currentViewData.indexOf(parentRecord[0])].getElementsByClassName('e-treegridcollapse').length) {\n                    gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = false;\n                }\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(freezeRightRows)) {\n                freezeRightRows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[parseInt(i.toString(), 10)] });\n            if ((!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) && childRecords[parseInt(i.toString(), 10)].childRecords.length > 0) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].expanded) || childRecords[parseInt(i.toString(), 10)].expanded)) {\n                this.expandCollapse(action, rows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                }\n            }\n        }\n        for (var i = 0; i < detailrows.length; i++) {\n            if (!isNullOrUndefined(detailrows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization ||\n                this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[detailrows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'none' ? true : false;\n                detailrows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n        }\n        if (!this.allowPaging && !(this.enableVirtualization || this.enableInfiniteScrolling || isRemoteData(this)\n            || isCountRequired(this))) {\n            this.grid.notify('refresh-Expand-and-Collapse', { rows: this.grid.getRowsObject() });\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[parseInt(i.toString(), 10)];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        var rows = this.getContentTable().rows;\n        rows = [].slice.call(rows);\n        var rowsObject = this.grid.getRowsObject();\n        for (var i = 0; i < rows.length; i++) {\n            var rcell = this.grid.getContentTable().rows[parseInt(i.toString(), 10)]\n                .cells[this.treeColumnIndex];\n            var row = rows[parseInt(i.toString(), 10)];\n            var rowData = rowsObject.length !== 0 ? rowsObject[parseInt(i.toString(), 10)].data : new Object();\n            var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n            this.renderModule.cellRender(arg);\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var row;\n        var childRecord;\n        var movablerows = [];\n        var rightrows = [];\n        var freeze = (this.getFrozenLeftColumnsCount() > 0 || this.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            movablerows = this.getRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n            rightrows = this.getRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].style.display = 'none';\n            row = rows[parseInt(i.toString(), 10)];\n            var collapsingTd = rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (freeze) {\n                movablerows[parseInt(i.toString(), 10)].style.display = 'none';\n                rightrows[parseInt(i.toString(), 10)].style.display = 'none';\n                if (!rows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                    if (movablerows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = movablerows[parseInt(i.toString(), 10)];\n                    }\n                    else if (rightrows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = rightrows[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            if (row.querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = row.querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[parseInt(i.toString(), 10)].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, false);\n                }\n            }\n        }\n    };\n    /**\n     * Method to sanitize html element\n     *\n     * @param {any} value - Specifies the html value to sanitize\n     * @returns {any} Returns the sanitized html value\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeGrid.prototype.sanitize = function (value) {\n        if (this.enableHtmlSanitizer && typeof (value) === 'string') {\n            return SanitizeHtmlHelper.sanitize(value);\n        }\n        return value;\n    };\n    /**\n     * Updates the rows and cells\n     *\n     * @param {Object[]} records - Updates the given records\n     * @param {HTMLTableRowElement[]} rows - Updates the given rows\n     * @param {number} index -  Updates the given cell index\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRowAndCellElements = function (records, rows, index) {\n        for (var i = 0; i < records.length; i++) {\n            this.renderModule.cellRender({\n                data: records[parseInt(i.toString(), 10)], cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                column: this.grid.getColumns()[this.treeColumnIndex],\n                requestType: 'rowDragAndDrop'\n            });\n            if (this['action'] === 'indenting' || this['action'] === 'outdenting') {\n                this.renderModule.RowModifier({\n                    data: records[parseInt(i.toString(), 10)], row: rows[parseInt(i.toString(), 10)]\n                });\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     *\n     * @deprecated This method is deprecated. Use getCellFromIndex method instead.\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     *\n     * @deprecated This method is deprecated. Use getDataRows method instead.\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     *\n     * @deprecated This method is deprecated. Use getRowByIndex method instead.\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     * @deprecated This method is deprecated. Use getRows method instead.\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     *\n     * @deprecated This method is deprecated. Use getRowByIndex method instead.\n     */\n    TreeGrid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Gets the Tree Grid's frozen right content rows from frozen Tree Grid.\n     *\n     * @returns {Element[]} returns the element\n     *\n     * @deprecated This method is deprecated. Use getRows method instead.\n     */\n    TreeGrid.prototype.getFrozenRightRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets all the Tree Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     *\n     * @deprecated This method is deprecated. Use getDataRows method instead.\n     */\n    TreeGrid.prototype.getFrozenRightDataRows = function () {\n        return this.grid.getDataRows();\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     *\n     * @deprecated This method is deprecated. Use getCellFromIndex method instead.\n     */\n    TreeGrid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     *\n     * @deprecated This method is deprecated. Use getColumnHeaderByIndex method instead.\n     */\n    TreeGrid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     *\n     * @deprecated This method is deprecated. Use getColumnHeaderByIndex method instead.\n     */\n    TreeGrid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     *\n     * @deprecated This method is deprecated. Use getColumnHeaderByIndex method instead.\n     */\n    TreeGrid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    TreeGrid.prototype.getMovableColumnsCount = function () {\n        return this.grid.getMovableColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    TreeGrid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.grid.getFrozenLeftColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    TreeGrid.prototype.getFrozenRightColumnsCount = function () {\n        return this.grid.getFrozenRightColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenLeftColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenLeftColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenRightColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenRightColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    TreeGrid.prototype.getVisibleMovableCount = function () {\n        return this.grid.getVisibleMovableCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    TreeGrid.prototype.getVisibleFrozenRightCount = function () {\n        return this.grid.getVisibleFrozenRightCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    TreeGrid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.grid.getVisibleFrozenLeftCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getMovableColumns = function () {\n        this.updateColumnModel(this.grid.getMovableColumns());\n        return this.columnModel;\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[parseInt(j.toString(), 10)].columns) {\n                cnt = this.getFrozenCount(cols[parseInt(j.toString(), 10)].columns, cnt);\n            }\n            else {\n                if (cols[parseInt(j.toString(), 10)].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    /**\n     * Indents the record to one level of hierarchy. Moves the selected row as the last child of its previous row.\n     *\n     * @param {Object} record – specifies the record to do indented\n     * @returns {void}\n     */\n    TreeGrid.prototype.indent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'indent');\n        }\n    };\n    /**\n     * Outdent the record to one level of hierarchy. Moves the selected row as sibling to its parent row.\n     *\n     * @param {Object} record – specifies the record to do outdented\n     * @returns {void}\n     */\n    TreeGrid.prototype.outdent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'outdent');\n        }\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property('USD')\n    ], TreeGrid.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, LoadingIndicator)\n    ], TreeGrid.prototype, \"loadingIndicator\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableVirtualMaskRow\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[\"\" + columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[parseInt(f.toString(), 10)]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.modifiedRecords = 'modifiedRecords';\n        /** @hidden */\n        this.selectedRecords = 'selectedRecords';\n        /** @hidden */\n        this.selectedRows = 'selectedRows';\n        /** @hidden */\n        this.hasDropItem = true;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        var action = 'action';\n        var dropPosition = 'dropPosition';\n        var updateRowAndCellElements = 'updateRowAndCellElements';\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            this.parent[\"\" + dropPosition] = this.dropPosition;\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                var index = this.parent.getRowByIndex(fromIndexes[parseInt(i.toString(), 10)]).rowIndex;\n                data[parseInt(i.toString(), 10)] = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            if (this.parent[\"\" + action] === 'outdenting') {\n                if (!isNullOrUndefined(data[0].parentItem)) {\n                    data[0].level = data[0].parentItem.level + 1;\n                }\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'indenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                var parentrow = this.parent.getRows()[parseInt(toIndex.toString(), 10)];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n            if (this.parent.enableImmutableMode && this.parent[\"\" + action] === 'outdenting') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'outdenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var record = args.data[0];\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(record);\n                rows.push(row);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.indentOutdentAction = function (record, request) {\n        var tObj = this.parent;\n        var action = 'action';\n        var droppedIndex = 'dropIndex';\n        var selectedItemIndex = -1;\n        if (isNullOrUndefined(record) && this.parent.selectedRowIndex === -1) {\n            return;\n        }\n        else {\n            if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n            }\n            else if (this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.selectedRowIndex;\n            }\n            this.selectedItem = isNullOrUndefined(record) ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)] : record;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(this.selectedItem[\"\" + primaryKeyField]);\n            this.selectedRow = this.parent[this.selectedRows] = selectedItemIndex !== -1 ?\n                this.parent.getSelectedRows()[0]\n                : this.parent.grid.getRowByIndex(rowIndex);\n            this.selectedRecord = this.parent[this.selectedRecords] = selectedItemIndex !== -1 ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)]\n                : this.selectedItem;\n            if (request === 'indent') {\n                var record_1 = tObj.getCurrentViewRecords()[this.selectedRow.rowIndex - 1];\n                var dropIndex = void 0;\n                if (this.selectedRow.rowIndex === 0 || this.selectedRow.rowIndex === -1 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level - record_1.level === 1) {\n                    return;\n                }\n                if (record_1.level > this.selectedRecord.level) {\n                    for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                        if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].taskData ===\n                            record_1.parentItem.taskData) {\n                            dropIndex = i;\n                            if (tObj.enableVirtualization) {\n                                dropIndex = parseInt(tObj.getRows()[parseInt(i.toString(), 10)].getAttribute('data-rowindex'), 10);\n                            }\n                        }\n                    }\n                }\n                else {\n                    dropIndex = this.selectedRow.rowIndex - 1;\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord && !(record_1.level > this.selectedRecord.level)) {\n                    dropIndex = parseInt(this.selectedRow.getAttribute('data-rowindex'), 10) - 1;\n                }\n                tObj[\"\" + action] = 'indenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('indenting', dropIndex);\n            }\n            else if (request === 'outdent') {\n                if (this.selectedRow.rowIndex === -1 || this.selectedRow.rowIndex === 0 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level === 0) {\n                    return;\n                }\n                var dropIndex = void 0;\n                var parentItem = this.selectedRecord.parentItem;\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].uniqueID === parentItem.uniqueID) {\n                        dropIndex = i;\n                    }\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord) {\n                    dropIndex = parseInt(this.parent.getRows()[parseInt(dropIndex.toString(), 10)].getAttribute('data-rowindex'), 10);\n                }\n                tObj[\"\" + action] = 'outdenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('outdenting', dropIndex);\n            }\n        }\n    };\n    RowDD.prototype.eventTrigger = function (action, dropIndex) {\n        var _this = this;\n        var actionArgs = {\n            action: action,\n            cancel: false,\n            data: [this.parent[this.selectedRecords]],\n            row: this.parent[this.selectedRows]\n        };\n        this.parent.trigger(events.actionBegin, actionArgs, function (actionArgs) {\n            if (!actionArgs.cancel) {\n                if (actionArgs.action === 'indenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'child');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'child');\n                    }\n                }\n                else if (actionArgs.action === 'outdenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'below');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'below');\n                    }\n                }\n            }\n        });\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        for (var i = 0; i < currentData.length; i++) {\n            currentData[parseInt(i.toString(), 10)].index = i;\n            if (!isNullOrUndefined(currentData[parseInt(i.toString(), 10)].parentItem)) {\n                var updatedParent = getValue('uniqueIDCollection.' + currentData[parseInt(i.toString(), 10)].parentUniqueID, this.parent);\n                currentData[parseInt(i.toString(), 10)].parentItem.index = updatedParent.index;\n            }\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[parseInt(i.toString(), 10)];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[parseInt(i.toString(), 10)];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[parseInt(j.toString(), 10)]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[parseInt(j.toString(), 10)]);\n                            childData[parseInt(j.toString(), 10)].taskData = extend({}, childData[parseInt(j.toString(), 10)]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping)\n                    && draggedRecord_1[tObj.parentIdMapping] !== null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[parseInt(i.toString(), 10)].uniqueID, dragRecords[parseInt(i.toString(), 10)], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[parseInt(i.toString(), 10)];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            var keys = Object.keys(tempDataSource);\n            for (var i = 0; i < keys.length; i++) {\n                if (tempDataSource[parseInt(i.toString(), 10)][this.parent.childMapping] ===\n                    droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][parseInt(i.toString(), 10)]\n                        = childRecords[parseInt(i.toString(), 10)].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex;\n        if (this.parent.enableVirtualization) {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        else {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[parseInt(i.toString(), 10)].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (this.parent.enableVirtualization) {\n            rowTop = rowEle.getBoundingClientRect().top;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type === 'mousemove') ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) &&\n            !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        var sanitize = 'sanitize';\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = this.parent[\"\" + sanitize](errorVal.innerHTML);\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = this.parent[\"\" + sanitize](content);\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n            var dropItemSpan = document.querySelector('.e-dropitemscount');\n            if (this.hasDropItem && dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) + ele.offsetWidth + 16;\n                var spanLeft = !this.parent.enableRtl ? dropItemLeft : 0;\n                dropItemSpan.style.left = spanLeft + \"px\";\n                this.hasDropItem = false;\n            }\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        var errorValue = document.querySelector('.errorValue');\n        var dropItemSpan = document.querySelector('.e-dropitemscount');\n        if (errorelem) {\n            if (dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) - errorelem.offsetWidth - 16;\n                setStyleAttribute(errorValue, {\n                    paddingLeft: '0px'\n                });\n                if (!this.parent.enableRtl) {\n                    setStyleAttribute(dropItemSpan, {\n                        left: dropItemLeft + \"px\"\n                    });\n                }\n            }\n            errorelem.remove();\n        }\n        this.hasDropItem = true;\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[parseInt(i.toString(), 10)].classList.add(className);\n            }\n            else {\n                cells[parseInt(i.toString(), 10)].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[parseInt(rowIdx.toString(), 10)];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (isNullOrUndefined(tObj.rowDropSettings.targetID) && !this.canDrop) {\n            this.removetopOrBottomBorder();\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID || args.target && document.getElementById(tObj.rowDropSettings.targetID)) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][\"\" + parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField]);\n            var row = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[\"\" + primaryKeyField]);\n                var parentrow = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[parseInt(i.toString(), 10)],\n                        cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[parseInt(index.toString(), 10)],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[parseInt(i.toString(), 10)] = records[parseInt(i.toString(), 10)].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping !== null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[parseInt(i.toString(), 10)].hasChildRecords) {\n                        actualData.push(records[parseInt(i.toString(), 10)]);\n                        var child = findChildrenRecords(records[parseInt(i.toString(), 10)]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[parseInt(i_1.toString(), 10)]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[parseInt(i.toString(), 10)].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[parseInt(i.toString(), 10)].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[parseInt(i.toString(), 10)].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[parseInt(i.toString(), 10)].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('data-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record, data) {\n        var parentItem = record.parentItem;\n        var selectedItemIndex = -1;\n        if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n        }\n        else if (this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.selectedRowIndex;\n        }\n        if (this.dropPosition === 'bottomSegment') {\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = selectedItemIndex === -1 ?\n                (this.parent.grid.getRowIndexByPrimaryKey(data[0][\"\" + primaryKeyField]))\n                : this.parent.getSelectedRowIndexes()[0];\n            var selectedRecord = this.parent.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord_2;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n                var rowIndex = tObj.selectedRowIndex === -1 ?\n                    (this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField])) - 1\n                    : tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n                this.getParentData(record, args.data);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                if (this.parent.enableVirtualization) {\n                    var index = this.parent.getRowByIndex(args.dropIndex).rowIndex;\n                    this.droppedRecord = tObj.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                }\n                else {\n                    this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n                }\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            this.parent[this.modifiedRecords].push(args.data[0], droppedRecord);\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            var _loop_1 = function (i) {\n                draggedRecord_2 = dragRecords[parseInt(i.toString(), 10)];\n                this_1.draggedRecord = draggedRecord_2;\n                if (this_1.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this_1.deleteDragRow();\n                    }\n                    if (this_1.draggedRecord === this_1.droppedRecord) {\n                        var correctIndex = this_1.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this_1.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this_1.droppedRecord = this_1.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    if (droppedRecord.parentItem || this_1.dropPosition === 'middleSegment') {\n                        var parentRecords = tObj.parentData;\n                        var newParentIndex = parentRecords.indexOf(this_1.draggedRecord);\n                        if (newParentIndex !== -1) {\n                            parentRecords.splice(newParentIndex, 1);\n                        }\n                    }\n                    var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n                    this_1.dropAtTop(recordIndex1);\n                    if (this_1.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                        }\n                        else {\n                            count = this_1.getChildCount(droppedRecord, 0);\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord_2.parentItem;\n                            delete draggedRecord_2.parentUniqueID;\n                            draggedRecord_2.level = 0;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this_1.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord_2);\n                            draggedRecord_2.parentItem = droppedRecord.parentItem;\n                            draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            draggedRecord_2.level = droppedRecord.level;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = droppedRecord[this_1.parent.parentIdMapping];\n                                draggedRecord_2.parentItem = droppedRecord.parentItem;\n                                draggedRecord_2.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord_2.hasChildRecords) {\n                            var level = 1;\n                            this_1.updateChildRecordLevel(draggedRecord_2, level);\n                            this_1.updateChildRecord(draggedRecord_2, recordIndex1 + count + 1);\n                        }\n                    }\n                    this_1.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord_2.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this_1.droppedRecord);\n                    var nonRepeat_1 = 0;\n                    parentRecords.filter(function (e) {\n                        if (draggedRecord_2.uniqueID === e.uniqueID) {\n                            nonRepeat_1++;\n                        }\n                    });\n                    if (this_1.dropPosition === 'bottomSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord_2);\n                    }\n                    else if (this_1.dropPosition === 'topSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord_2);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            };\n            var this_1 = this;\n            for (var i = 0; i < dragLength; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[parseInt(recordIndex1.toString(), 10)].level;\n            this.treeGridData.splice(parseInt(recordIndex1.toString(), 10), 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                    droppedRecord.taskData[\"\" + childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            var isSelfReference = 'isSelfReference';\n            if (tObj[\"\" + isSelfReference]) {\n                droppedRecord[tObj.childMapping] = [];\n                droppedRecord[tObj.childMapping].splice(droppedRecord[tObj.childMapping].length, 0, draggedRecord);\n            }\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, tObj);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, this.parent);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping || tObj.enableImmutableMode) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping]\n                        === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[parseInt(j.toString(), 10)][\"\" + primaryKeyField] === deletedRow[\"\" + primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n            if (this.parent[this.modifiedRecords].indexOf(flatParentData) === -1 && !isNullOrUndefined(flatParentData)) {\n                this.parent[this.modifiedRecords].push(flatParentData);\n            }\n            if (!isNullOrUndefined(flatParentData)) {\n                this.updateModifiedRecords(flatParentData);\n            }\n        }\n    };\n    RowDD.prototype.updateModifiedRecords = function (record) {\n        var parentData = getParentData(this.parent, record.parentUniqueID);\n        if (!isNullOrUndefined(parentData)) {\n            this.parent[this.modifiedRecords].push(parentData);\n            this.updateModifiedRecords(parentData);\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[parseInt(i_2.toString(), 10)][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[parseInt(i_3.toString(), 10)][this.parent.idMapping]\n                    === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.getDataInfo = function () {\n        return _super.prototype.getData.call(this);\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.virtualInfo) && notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.nextInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.nextInfo.page } }, true);\n        }\n        else if (!isNullOrUndefined(notifyArgs.virtualInfo) && !notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.page } }, true);\n        }\n        var info = this.getDataInfo();\n        if (!isNullOrUndefined(notifyArgs.virtualInfo)) {\n            if (notifyArgs.virtualInfo.direction !== 'right' && notifyArgs.virtualInfo.direction !== 'left') {\n                if (!((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                    && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent))\n                    || notifyArgs.virtualInfo.blockIndexes.length === 1) {\n                    notifyArgs.virtualInfo.blockIndexes = info.blockIndexes;\n                }\n            }\n            else {\n                notifyArgs.virtualInfo.blockIndexes = this.getBlockIndexes(notifyArgs.virtualInfo.page);\n            }\n        }\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[parseInt(r.toString(), 10)].index = (this.visualData).indexOf(rows[parseInt(r.toString(), 10)].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[\"\" + model].currentPage;\n            if (clear) {\n                this.cache = {};\n                /*this.movableCache = {};\n                this.frozenRightCache = {};*/\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[parseInt(currentPage.toString(), 10)] &&\n                this.cache[parseInt(currentPage.toString(), 10)].length >\n                    (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[parseInt(currentPage.toString(), 10)];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n                /*this.movableCache = {};\n                this.frozenRightCache = {};*/\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[parseInt(f.toString(), 10)];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[parseInt(count.toString(), 10)].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[parseInt(count.toString(), 10)].uniqueID)) {\n                    this.filteredResult.push(childRec[parseInt(count.toString(), 10)]);\n                    setValue('uniqueIDFilterCollection.' + childRec[parseInt(count.toString(), 10)].uniqueID, childRec[parseInt(count.toString(), 10)], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[parseInt(count.toString(), 10)]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[parseInt(count.toString(), 10)]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID, true);\n                record[parseInt(c.toString(), 10)].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[parseInt(c.toString(), 10)].filterLevel = 0;\n                this.filteredParentRecs.push(record[parseInt(c.toString(), 10)]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[parseInt(count.toString(), 10)];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        property.query = args['query'];\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            var rowlength = excelRow.excelRows.length;\n            var rowlevel = excelrowobj.level;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n            else if (excelrowobj.hasChildRecords && isNullOrUndefined(excelrowobj.parentItem)) {\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[parseInt(i.toString(), 10)].rows) {\n                workbook.worksheets[parseInt(i.toString(), 10)].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        prop.query = args['query'];\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        this.parent.flatData.map(function (e) { return e.expanded = e.uniqueID === rowDetails.record.uniqueID &&\n            e.expanded !== rowDetails.record.expanded ? rowDetails.record.expanded : e.expanded; });\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[\"\" + primaryKeyField_1] === rowDetails.record[\"\" + primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[\"\" + action] === 'collapse') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[\"\" + action] === 'expand') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[parseInt(t.toString(), 10)]);\n            var res = [];\n            if (temp[parseInt(t.toString(), 10)].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[parseInt(t.toString(), 10)].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.updatePageSize = function (pageingDetails) {\n        var updateSize = pageingDetails.result.length;\n        var gridPagerModule = this.parent.grid.pagerModule;\n        if (this.parent.pageSettings.pageSizes === true) {\n            if (gridPagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value === gridPagerModule.pagerObj.getLocalizedLabel('All')) {\n                gridPagerModule['pagerObj'].totalRecordsCount = updateSize;\n                this.parent.grid.pageSettings.pageSize = updateSize;\n            }\n        }\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && (pageingDetails.actionArgs.action !== 'collapse' &&\n                pageingDetails.actionArgs.action !== 'expand')) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            this.updatePageSize(pageingDetails);\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.rowDeselected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.rowDeselected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var toolbarElement = this.parent.grid.toolbarModule.getToolbar();\n        if (!isNullOrUndefined(toolbarElement)) {\n            var tObj = this.parent;\n            var indentElement = void 0;\n            var outdentElement = void 0;\n            var indentID = tObj.element.id + '_gridcontrol_indent';\n            var outdentID = tObj.element.id + '_gridcontrol_outdent';\n            var indentEle = toolbarElement.querySelector('#' + indentID);\n            var outdentEle = toolbarElement.querySelector('#' + outdentID);\n            var row = args.row;\n            var selectedrow = tObj.getSelectedRows()[0];\n            if (!isNullOrUndefined(row[0])) {\n                row = row[0];\n            }\n            row = (!isNullOrUndefined(selectedrow) && selectedrow.rowIndex !== row.rowIndex) ? selectedrow : row;\n            if (indentEle !== null && outdentEle !== null) {\n                indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n                outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n                if (row.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indentElement.classList.add('e-hidden');\n                    outdentElement.classList.add('e-hidden');\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[row.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[row.rowIndex - 1].level)) {\n                            indentElement.classList.add('e-hidden');\n                        }\n                        else {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === tObj.getCurrentViewRecords()[row.rowIndex - 1].level) {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === 0) {\n                            outdentElement.classList.add('e-hidden');\n                        }\n                        if (selectedItem.level !== 0) {\n                            outdentElement.classList.remove('e-hidden');\n                        }\n                    }\n                }\n                if (args['name'] === 'rowDeselected' && isNullOrUndefined(selectedrow) && !tObj.grid.isCheckBoxSelection) {\n                    if (this.parent.toolbar['includes']('Indent')) {\n                        indentElement.classList.add('e-hidden');\n                    }\n                    if (this.parent.toolbar['includes']('Outdent')) {\n                        outdentElement.classList.add('e-hidden');\n                    }\n                }\n            }\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        var indentOutdentAction = 'indentOutdentAction';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'indent');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'outdent');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[parseInt(p.toString(), 10)]);\n            if (!summaryRow) {\n                parentData.push(filteredData[parseInt(p.toString(), 10)]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[parseInt(i.toString(), 10)];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[parseInt(i_1.toString(), 10)]))) ?\n                                columns[parseInt(i_1.toString(), 10)] : getObject('field', (columns[parseInt(i_1.toString(), 10)]));\n                            item[\"\" + field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[parseInt(columnIndex.toString(), 10)])) ?\n                    columns[parseInt(columnIndex.toString(), 10)] : getObject('field', columns[parseInt(columnIndex.toString(), 10)]);\n                items[\"\" + fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[parseInt(i.toString(), 10)];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[parseInt(i.toString(), 10)].columnName) ?\n                summary.columns[parseInt(i.toString(), 10)].field : summary.columns[parseInt(i.toString(), 10)].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[parseInt(i.toString(), 10)];\n            var key = summaryColumn.field + ' - ' + types[parseInt(i.toString(), 10)].toLowerCase();\n            var val = types[parseInt(i.toString(), 10)] !== 'Custom' ? getObject('aggregates', sumData) :\n                /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                calculateAggregate(types[parseInt(i.toString(), 10)], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[parseInt(i.toString(), 10)] !== 'Custom' ? val[\"\" + key] : val;\n            single[\"\" + disp] = single[\"\" + disp] || {};\n            single[\"\" + disp][\"\" + key] = value_1;\n            single[\"\" + disp][types[parseInt(i.toString(), 10)]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var thisRef_1 = this;\n            // tslint:disable-next-line:typedef\n            thisRef_1.parent[\"\" + renderReactTemplates](function () {\n                thisRef_1.parent.trigger(events.queryCellInfo, thisRef_1.parent['args']);\n            });\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[\"\" + summaryColumn.columnName][\"\" + summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[parseInt(d.toString(), 10)].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n            }\n            if (data[parseInt(d.toString(), 10)].hasChildRecords) {\n                var childSort = (new DataManager(data[parseInt(d.toString(), 10)].childRecords)\n                    .executeLocal(srtQry));\n                if (this.parent.allowRowDragAndDrop && data[parseInt(d.toString(), 10)].childRecords.indexOf(this.parent.rowDragAndDropModule['draggedRecord']) !== -1 && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                    var dragdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                    childSort.splice(dragdIndex, 1);\n                    var dropdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                    if (this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                        childSort.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                    else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                        childSort.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                }\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        var indent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Indent', args.element);\n        var outdent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Outdent', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false || this.parent.grid.isEdit) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n        var tObj = this.parent;\n        var selectedrow = tObj.getSelectedRows()[0];\n        if ((indent || outdent) && !isNullOrUndefined(selectedrow)) {\n            var targetElement = args.event.target.closest('td');\n            if (isNullOrUndefined(targetElement) || (!isNullOrUndefined(targetElement) && (!targetElement.classList.contains('e-rowcell') ||\n                targetElement.querySelectorAll('.e-gridform').length !== 0))) {\n                for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n                    var items = _a[_i];\n                    if (items.text === 'Outdent' || items.text === 'Indent') {\n                        tObj.grid.contextMenuModule['hiddenItems'].push(items.text);\n                    }\n                }\n                tObj.grid.contextMenuModule.contextMenu.hideItems(tObj.grid.contextMenuModule['hiddenItems']);\n                indent.style.display = outdent.style.display = 'none';\n            }\n            else {\n                if (selectedrow.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indent.style.display = outdent.style.display = 'none';\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[selectedrow.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level)) {\n                            indent.style.display = 'none';\n                        }\n                        else {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level)) {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === 0)) {\n                            outdent.style.display = 'none';\n                        }\n                        else {\n                            outdent.style.display = 'block';\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (((indent || outdent) || tObj.grid.isEdit) && isNullOrUndefined(selectedrow)) {\n                for (var _b = 0, _c = args.items; _b < _c.length; _b++) {\n                    var items = _c[_b];\n                    if (items.text === 'Outdent' || items.text === 'Indent') {\n                        tObj.grid.contextMenuModule['hiddenItems'].push(items.text);\n                    }\n                }\n                tObj.grid.contextMenuModule.contextMenu.hideItems(tObj.grid.contextMenuModule['hiddenItems']);\n                indent.style.display = outdent.style.display = 'none';\n            }\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.editModule['isAddedRowByContextMenu'] = true;\n            this.parent.addRecord();\n        }\n        if (args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' || args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Outdent') {\n            if (!isNullOrUndefined(this.parent.rowDragAndDropModule)) {\n                var indentOutdentAction = 'indentOutdentAction';\n                var action = args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' ? 'indent' : 'outdent';\n                this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, action);\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\nimport { classList } from '@syncfusion/ej2-base';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.column.index;\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.column.index)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem]) {\n                        parentUniqueID = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].data = added;\n                this.newBatchRowAdded = false;\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[\"\" + isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[\"\" + isTabLastRow] = false;\n            return;\n        }\n        if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) &&\n            !this.parent.editModule['isAddedRowByContextMenu'] && (this.parent.grid.selectedRowIndex === -1 || this.parent.editModule['batchEditModule'].isAdd)) {\n            this.selectedIndex = this.parent.editModule['selectedIndex'];\n            this.addRowIndex = this.parent.editModule['addRowIndex'];\n            this.addRowRecord = this.batchRecords.length ? this.batchRecords[this.selectedIndex]\n                : this.parent.getCurrentViewRecords()[this.selectedIndex];\n        }\n        else {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.parent.editModule['addRowIndex'] = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex'])) {\n                classList(this.parent.grid.getDataRows()[0], ['e-batchrow'], []);\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                var newlyAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n                var index = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[newlyAddedRecords.length - 1].getAttribute('data-rowindex'), 10);\n                this.batchRecords.splice(index, 0, newlyAddedRecords[newlyAddedRecords.length - 1]);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (args) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data;\n        var childs;\n        var uid;\n        if (!isNullOrUndefined(args.row) && this.parent.getSelectedRows().indexOf(args.row) === -1) {\n            data = args.rowData;\n            childs = findChildrenRecords(data);\n            uid = args.row.getAttribute('data-uid');\n        }\n        else {\n            data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n            childs = findChildrenRecords(data);\n            uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        }\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('data-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[parseInt(i.toString(), 10)]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getHeaderContent()[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[\"\" + primarykey]; }).indexOf(records[parseInt(i.toString(), 10)][\"\" + primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[parseInt(i.toString(), 10)])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[\"\" + addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                if (this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey] === records[parseInt(this.addRowIndex.toString(), 10)][\"\" + primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[\"\" + changeRecords];\n        if (e.batchChanges[\"\" + changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[parseInt(i.toString(), 10)], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[\"\" + deleterecords].length) {\n            var deletedRecords = e.batchChanges[\"\" + deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(record[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                e.batchChanges[\"\" + deleterecords] = e.batchChanges[\"\" + deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                if (index !== -1) {\n                    data.splice(index, 1);\n                }\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem] ? this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]\n                        : this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        var children = currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[parseInt(j.toString(), 10)][\"\" + primaryKey] === this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]) {\n                                currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.parent[\"\" + targetElement])) {\n            var row = this.parent[\"\" + targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[\"\" + targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] === 0 ? this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] :\n                        this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(positionIndex, 0, this.batchDeletedRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[\"\" + addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (this.parent.editModule['isAddedRowByMethod'] && addRecords.length && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                    addRecords.reverse();\n                    for (var i_1 = 0; i_1 < addRecords.length; i_1++) {\n                        var index_1 = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[parseInt(i_1.toString(), 10)].getAttribute('data-rowindex'), 10);\n                        data.splice(index_1, 0, addRecords[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                            .indexOf(currentViewRecords[0][\"\" + primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            if (this.parent.editModule['isAddedRowByContextMenu']) {\n                addRecords.reverse();\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[parseInt(i.toString(), 10)]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                if (addRecords.length > 1 && this.parent.editModule['isAddedRowByContextMenu']) {\n                    var rowPosition = this.parent.editSettings.newRowPosition;\n                    this.parent.editSettings.newRowPosition = this.parent.editModule['previousNewRowPosition'];\n                    this.parent.editModule['previousNewRowPosition'] = rowPosition;\n                }\n                addRecords[parseInt(i.toString(), 10)].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[parseInt(i.toString(), 10)];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[parseInt(i.toString(), 10)].parentItem, 'add', this.parent, this.isSelfReference, addRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[parseInt(i.toString(), 10)], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem]) &&\n                    (isNullOrUndefined(this.parent.editModule['addRowIndex']) || this.isSelfReference)) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                        .indexOf(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primarykey_1]);\n                    var children = currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[parseInt(j.toString(), 10)][\"\" + primarykey_1] === addRecords[parseInt(i.toString(), 10)][\"\" + primarykey_1]) {\n                            currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[\"\" + deletedRecords].length) {\n                for (i = 0; i < batchChanges[\"\" + deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[\"\" + deletedRecords][parseInt(i.toString(), 10)], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_2 = 0; i_2 < data.length; i_2++) {\n                data[parseInt(i_2.toString(), 10)][\"\" + index] = i_2;\n                setValue('uniqueIDCollection.' + data[parseInt(i_2.toString(), 10)][\"\" + uniqueID] + '.index', i_2, this.parent);\n                if (!data[parseInt(i_2.toString(), 10)][\"\" + level]) {\n                    this.parent.parentData.push(data[parseInt(i_2.toString(), 10)]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n        if (this.parent.editModule['isAddedRowByContextMenu']) {\n            this.parent.editModule['isAddedRowByContextMenu'] = false;\n        }\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[parseInt(i.toString(), 10)][\"\" + index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        if (this.parent.getSelectedRows().length) {\n            args[\"\" + index] = this.parent.getSelectedRows()[0][\"\" + rowIndex];\n        }\n        else {\n            args[\"\" + index] = this.batchIndex;\n        }\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        this.isAddedRowByContextMenu = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n        if (e.target.classList.contains('e-frame') && this.parent.getCurrentViewRecords().length === 0) {\n            this.doubleClickTarget = null;\n        }\n        if (e.target.classList.contains('e-treegridcollapse') || e.target.classList.contains('e-treegridexpand')) {\n            var tr = parentsUntil(e.target, 'e-row');\n            var rowIndex = tr && parseInt(tr.getAttribute('data-rowindex'), 10);\n            if (!isNullOrUndefined(rowIndex) && rowIndex >= 0 && this.parent.allowPaging) {\n                /* eslint-disable-next-line */\n                this.parent.grid.getDataRows()[rowIndex].dataset.uid = this.parent.grid.contentModule.getRows()[rowIndex].uid;\n            }\n        }\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.dataRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionBegin, args);\n        }\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[parseInt(i.toString(), 10)].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getRows();\n            var movableRowsObject = this.parent.grid.getRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[\"\" + updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('data-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('data-rowindex');\n                tr.setAttribute('data-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n        else if (this.parent.editSettings.mode === 'Cell' && (!column.allowEditing || column.isPrimaryKey)) {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action === 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[\"\" + promise];\n        delete args[\"\" + promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex) && this.prevAriaRowIndex !== '-1') {\n            args.row.setAttribute('data-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['editedRowIndex'] = this.parent.grid.editModule.editModule['index'];\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[\"\" + editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[\"\" + eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        setValue('isEdit', false, this.parent.grid);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    if (this.parent['isGantt'] && !this.parent.loadChildOnDemand) {\n                        this.updateCell(args, rowIndex_1);\n                        setValue('isEdit', false, this.parent.grid);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                    else {\n                        var crud = null;\n                        crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                        crud.then(function (e) {\n                            if (!isNullOrUndefined(e)) {\n                                args.rowData[args.columnName] = e[args.columnName];\n                            }\n                            _this.updateCell(args, rowIndex_1);\n                            setValue('isEdit', false, _this.parent.grid);\n                            _this.afterCellSave(args, row_1, rowIndex_1);\n                        });\n                    }\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['virtualData'] = {};\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[parseInt(rowIndex.toString(), 10)].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[parseInt(i.toString(), 10)].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[\"\" + key] === data[parseInt(i.toString(), 10)][\"\" + key]) {\n                if (details.action === 'add') {\n                    data[parseInt(i.toString(), 10)].level = this.internalProperties.level;\n                    data[parseInt(i.toString(), 10)].taskData = this.internalProperties.taskData;\n                    data[parseInt(i.toString(), 10)].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[parseInt(i.toString(), 10)].parentItem = this.internalProperties.parentItem;\n                        data[parseInt(i.toString(), 10)].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[parseInt(i.toString(), 10)].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID + '.index', i, this.parent);\n            var adaptor = this.parent.dataSource.adaptor;\n            if ((isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor)) {\n                setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID, data[parseInt(i.toString(), 10)], this.parent);\n            }\n            if (!data[parseInt(i.toString(), 10)].level) {\n                this.parent.parentData.push(data[parseInt(i.toString(), 10)]);\n            }\n        }\n        if (!this.parent.enableInfiniteScrolling) {\n            if (details.action === 'add' && this.previousNewRowPosition != null) {\n                this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n                this.previousNewRowPosition = null;\n            }\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[parseInt(j.toString(), 10)];\n            if (!isNullOrUndefined(data1)) {\n                var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n                data1.index = index;\n                if (!isNullOrUndefined(data1.parentItem)) {\n                    var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                    data1.parentItem.index = parentIndex;\n                }\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[parseInt(l.toString(), 10)].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[parseInt(count.toString(), 10)];\n            if (!isNullOrUndefined(data2)) {\n                var index = data2.index;\n                var level = data2.level;\n                var row = rows[parseInt(k.toString(), 10)];\n                if (!isNullOrUndefined(data2.parentItem)) {\n                    index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n                }\n                var treecell = row.cells[parseInt(treeColIndex.toString(), 10)];\n                if (!isNullOrUndefined(treecell)) {\n                    for (var l = 0; l < treecell.classList.length; l++) {\n                        var value = treecell.classList[parseInt(l.toString(), 10)];\n                        var remove = /e-gridrowindex/i;\n                        var removed = /e-griddetailrowindex/i;\n                        var result = value.match(remove);\n                        var results = value.match(removed);\n                        if (result != null) {\n                            removeClass([treecell], value);\n                        }\n                        if (results != null) {\n                            removeClass([treecell], value);\n                        }\n                    }\n                    if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                        addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                    }\n                    else {\n                        addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[parseInt(index.toString(), 10)]) &&\n                    records[parseInt(index.toString(), 10)].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else if (!this.parent.enableVirtualization) {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[\"\" + r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][\"\" + position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[\"\" + r].splice(0, 1);\n                    this.parent.grid.contentModule[\"\" + r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[parseInt(i.toString(), 10)].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                if (!this.parent.enableVirtualization || this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    focussedElement.focus();\n                }\n                if (this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    this.parent.grid.contentModule['createEmptyRowdata']();\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && !isNullOrUndefined(this.addRowIndex) && this.addRowIndex !== -1 && this['isAddedRowByMethod'] && !this.isAddedRowByContextMenu) {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            var batchAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n            var newlyAddedRecord = void 0;\n            if (batchAddedRecords.length) {\n                for (var i = 0; i < batchAddedRecords.length; i++) {\n                    if (isNullOrUndefined(batchAddedRecords[parseInt(i.toString(), 10)].uniqueID)) {\n                        newlyAddedRecord = batchAddedRecords[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            var args = {\n                action: 'add',\n                data: newlyAddedRecord,\n                index: index,\n                seletedRow: 0\n            };\n            this.beginAddEdit(args);\n            this.batchEditModule['batchAddRowRecord'].push(this.batchEditModule['addRowRecord']);\n            this.batchEditModule['batchAddedRecords'].push(args['data']);\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data_1 = args.data;\n            if (isNullOrUndefined(args.data[0].uniqueID)) {\n                var primaryKeys_2 = this.parent.getPrimaryKeyFieldNames();\n                var _loop_1 = function (i) {\n                    this_1.parent.flatData.filter(function (e) {\n                        if (e[\"\" + primaryKeys_2[0]] === args.data[parseInt(i.toString(), 10)][primaryKeys_2[0]]) {\n                            data_1[parseInt(i.toString(), 10)] = e;\n                        }\n                    });\n                };\n                var this_1 = this;\n                for (var i = 0; i < data_1.length; i++) {\n                    _loop_1(i);\n                }\n            }\n            for (var i = 0; i < data_1.length; i++) {\n                this.deleteUniqueID(data_1[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(data_1[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                args.data = args.data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[data-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[data-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    if (args.index !== 0) {\n                        this.addRowIndex = args.index;\n                    }\n                    else {\n                        this.addRowIndex = this.parent.grid.selectedRowIndex;\n                    }\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if ((this.isAddedRowByMethod || (this.isAddedRowByContextMenu && this.parent.grid.selectedRowIndex !== -1)) &&\n                (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[this.parent.grid.selectedRowIndex];\n                if (this.parent.enableVirtualization && this.isAddedRowByContextMenu) {\n                    this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n                }\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n            this.addRowIndex = args.index;\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' &&\n            !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        if (isNullOrUndefined(this.addRowRecord) && this.parent.getCurrentViewRecords().length > this.addRowIndex &&\n            args.requestType === 'save' && this.parent.getSelectedRecords().length !== 0) {\n            this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = void 0;\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                currentData = this.parent.flatData;\n            }\n            else if (this.parent.editSettings.mode === 'Batch' && this['isAddedRowByMethod'] && !isNullOrUndefined(this.addRowIndex)) {\n                currentData = this.batchEditModule['batchRecords'];\n            }\n            else {\n                currentData = this.parent.grid.getCurrentViewRecords();\n            }\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                this.addRowIndex = this.parent.flatData.indexOf(this.addRowRecord);\n                this.selectedIndex = this.addRowIndex;\n            }\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? currentData.indexOf(currentData[0]) : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n            var withinRange = this.parent.enableVirtualization && args.index !== 0 ? true :\n                this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        if (!this.parent.isLocalData && this.parent.editModule.selectedIndex === -1) {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = null;\n                        }\n                        else {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        }\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[parseInt(i.toString(), 10)].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[parseInt(i.toString(), 10)].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[parseInt(i.toString(), 10)]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[\"\" + visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[parseInt(i.toString(), 10)].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[parseInt(i.toString(), 10)].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[parseInt(i.toString(), 10)]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[parseInt(i.toString(), 10)].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[parseInt(i.toString(), 10)].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[\"\" + matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser, debounce } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        if (this.parent.enableVirtualization && this.parent.isFrozenGrid()) {\n            return this.getRowCollection(index, true);\n        }\n        else {\n            return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('data-rowindex'), 10) === index; })[0];\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getFrozenRightVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, false, false, true);\n    };\n    VirtualTreeContentRenderer.prototype.getRowCollection = function (index, isMovable, isRowObject, isFrozenRight) {\n        var startIdx = parseInt(this.parent.getRows()[0].getAttribute(literals.dataRowIndex), 10);\n        var rowCollection = this.parent.getDataRows();\n        var collection = isRowObject ? this.parent.getCurrentViewRecords() : rowCollection;\n        var selectedRow = collection[index - startIdx];\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n            if (!isRowObject) {\n                selectedRow = index <= this.parent.frozenRows ? rowCollection[parseInt(index.toString(), 10)]\n                    : rowCollection[(index - startIdx) + this.parent.frozenRows];\n            }\n            else {\n                selectedRow = index <= this.parent.frozenRows ?\n                    this.parent.getRowsObject()[parseInt(index.toString(), 10)].data : selectedRow;\n            }\n        }\n        return selectedRow;\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if ((this.recordAdded || args.requestType === 'delete' && this.endIndex > args.count - this.parent.pageSettings.pageSize) && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else if (this.parent.root.editSettings.newRowPosition !== 'Top' && this.parent.root.editModule.selectedIndex !== -1 || this.parent.root.editModule.selectedIndex !== -1) {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        if ((this.endIndex - this.startIndex !== this.parent.pageSettings.pageSize) &&\n            (this.totalRecords > this.parent.pageSettings.pageSize)\n            && (this.endIndex === this.totalRecords)) {\n            args.startIndex = this.endIndex - this.parent.pageSettings.pageSize;\n            args.endIndex = this.endIndex;\n        }\n        else {\n            args.startIndex = this.startIndex;\n            args.endIndex = this.endIndex;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[\"\" + action]('data-ready', this.onDataReady, this);\n            this.parent[\"\" + action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); }, _this.onEnteredAction(), _this.parent);\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[\"\" + action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[\"\" + action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[\"\" + action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[\"\" + action]('edit-reset', this.resetIseditValue, this);\n            this.parent[\"\" + action]('get-virtual-data', this.getData, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[\"\" + action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[\"\" + action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[\"\" + action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[\"\" + virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                // To overcome the white space issue in last page when records collapsed\n                if (this.parent.isFrozenGrid() && e.count < Object.keys(this.parent.dataSource).length) {\n                    var width = this.parent.enableColumnVirtualization ?\n                        this.getColumnOffset(this.parent.columns.length - 1) + 'px' : '100%';\n                    var height = (this.parent.getRowHeight() * e.count) -\n                        (this.parent.getRowHeight() * this.parent.pageSettings.pageSize);\n                    getValue('virtualEle', this).setVirtualHeight(height, width);\n                }\n                if (!this.parent.enableColumnVirtualization && !this.parent.isFrozenGrid()) {\n                    getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                }\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || (this.isDataSourceChanged && (this.startIndex === -1 || this.startIndex === 0 && this['preStartIndex'] === 0))) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (!isNullOrUndefined(this.parent.getRowByIndex(0)) && this.parent.getRows().length && !this[\"\" + initialRowTop]) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[\"\" + initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[\"\" + initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[\"\" + dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[\"\" + rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        var containerRect = 'containerRect';\n        if (isNullOrUndefined(this.observer[\"\" + containerRect])) {\n            this.observer[\"\" + containerRect] = this.observers[\"\" + containerRect];\n        }\n        if (isNullOrUndefined(this.parent.clipboardModule['treeGridParent'].editModule) || args.selectedIndex !== 0 ||\n            isNullOrUndefined(this.parent.clipboardModule['treeGridParent'].editModule['addRowIndex'])) {\n            _super.prototype[\"\" + selectVirtualRow].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[parseInt(i.toString(), 10)]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (col, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': col.visible,\n            'isDataCell': !isNullOrUndefined(col.field || col.template),\n            'isTemplate': !isNullOrUndefined(col.template),\n            'rowID': rowId,\n            'column': col,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': col.commands,\n            'isForeignKey': col.isForeignColumn && col.isForeignColumn(),\n            'foreignKeyData': col.isForeignColumn && col.isForeignColumn() && getValue(col.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        this['editedRowIndex'] = e.index;\n        var selector = '.e-row[data-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.dataRowIndex = addArgs.dataRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[\"\" + isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[\"\" + addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[\"\" + restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[\"\" + isAdd]) {\n            _super.prototype[\"\" + resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[\"\" + editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[\"\" + selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.editModule.addRecord(null, this.parent.root.editModule.selectedIndex);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[\"\" + getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.dataRowIndex = this.parent.root.editModule.selectedIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[\"\" + actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.onEnteredAction = function () {\n        var _this = this;\n        return function (element, current, direction, e, isWheel, check) {\n            var directVirtualRender = 'directVirtualRender';\n            if (!_this.parent[\"\" + directVirtualRender]) { // with this property, columns are rendered without debouncing on horizontal scroll.\n                var preventEvent = 'preventEvent';\n                if (Browser.isIE && !isWheel && check && !_this[\"\" + preventEvent] && !_this.parent.enableVirtualMaskRow) {\n                    _this.parent.showSpinner();\n                }\n                if (_this.parent.enableVirtualMaskRow && !_this[\"\" + preventEvent]) {\n                    setTimeout(function () {\n                        _this.parent.showMaskRow(current.axis);\n                        _this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n                    }, 0);\n                }\n                var height = _this.content.getBoundingClientRect().height;\n                var top_1 = _this.prevInfo.offsets ? _this.prevInfo.offsets.top : null;\n                var xAxis = current.axis === 'X';\n                var x = _this.getColumnOffset(xAxis ? _this.vgenerator.getColumnIndexes()[0] - 1 : _this.prevInfo.columnIndexes[0]\n                    - 1);\n                if (xAxis) {\n                    var idx = Object.keys(_this.vgenerator.cOffsets).length - _this.prevInfo.columnIndexes.length;\n                    var maxLeft = _this.vgenerator.cOffsets[idx - 1];\n                    x = x > maxLeft ? maxLeft : x; //TODO: This fix horizontal scrollbar jumping issue in column virtualization.\n                }\n                var y = _this.getTranslateY(e.top, height, xAxis && top_1 === e.top ? _this.prevInfo : undefined, true);\n                if (!_this.parent.isFrozenGrid() || _this.parent.enableVirtualMaskRow) {\n                    if (_this.parent.enableVirtualMaskRow) {\n                        var upScroll = (e.top - _this.translateY) < 0;\n                        y = (Math.round(_this.translateY) > y && !upScroll) ? Math.round(_this.translateY) : y;\n                        _this.virtualEle.adjustTable(x, y);\n                    }\n                    else {\n                        _this.virtualEle.adjustTable(x, _this.translateY);\n                    }\n                    if (_this.parent.enableColumnVirtualization) {\n                        _this.header.virtualEle.adjustTable(x, 0);\n                    }\n                }\n            }\n        };\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        this['scrollAfterEdit']();\n        var info = scrollArgs.sentinel;\n        var rowHeight = this.parent.getRowHeight();\n        var outBuffer = this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 2);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * rowHeight;\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) + rowHeight >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        var currentViewData = this.parent.currentViewData;\n        var indexValue = 'index';\n        if (upScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? parseInt(this.parent.height.toString(), 10) :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / rowHeight)\n                + Math.ceil(vHeight / rowHeight))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 && index !== this[\"\" + selectedRowIndex]) {\n                index = this[\"\" + selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            if (currentViewData.length && (currentViewData[0][\"\" + indexValue] >= this.parent.pageSettings.pageSize / 2) &&\n                ((currentViewData[0][\"\" + indexValue] - this.startIndex) < (this.parent.pageSettings.pageSize / 2)) && this.parent.selectionModule.isRowSelected) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] - (this.parent.pageSettings.pageSize / 2);\n                this.endIndex = this.startIndex + this.parent.pageSettings.pageSize;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / rowHeight);\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[parseInt(rowPt.toString(), 10)]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('data-rowindex');\n            }\n            if (firsttdinx === 0) {\n                scrollArgs.offset.top = content.scrollTop;\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - rowHeight * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n            else {\n                this.translateY = (scrollArgs.offset.top - (outBuffer * rowHeight) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * rowHeight) + 10 : 0;\n            }\n        }\n        else if (downScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var nextSetResIndex = ~~(content.scrollTop / rowHeight);\n            var isLastBlock = (this[\"\" + selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 &&\n                nextSetResIndex !== this[\"\" + selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[\"\" + selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock || isNullOrUndefined(this['' + selectedRowIndex]) ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if ((nextSetResIndex + this.parent.pageSettings.pageSize) > this.totalRecords && (this.endIndex - this.startIndex) <\n                (this.parent.pageSettings.pageSize / 2) && (this.endIndex - nextSetResIndex) < (this.parent.pageSettings.pageSize / 2)) {\n                this.startIndex = lastIndex - (this.parent.pageSettings.pageSize / 2);\n            }\n            if (currentViewData.length && this.startIndex > currentViewData[0][\"\" + indexValue] &&\n                ((this.startIndex - currentViewData[0][\"\" + indexValue]) < (this.parent.pageSettings.pageSize / 2)) && this.parent.selectionModule.isRowSelected) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] + (this.parent.pageSettings.pageSize / 2);\n            }\n            if (scrollArgs.offset.top > (rowHeight * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                if (this.totalRecords === this.endIndex) {\n                    this.translateY = (this.totalRecords * rowHeight) - ((this.endIndex - this.startIndex) * rowHeight);\n                }\n                else {\n                    if (this.parent.allowRowDragAndDrop) {\n                        this.translateY = scrollArgs.offset.top - rowHeight * 2;\n                    }\n                    else {\n                        this.translateY = scrollArgs.offset.top;\n                    }\n                }\n            }\n        }\n        if (((downScroll && (scrollArgs.offset.top < (rowHeight * this.totalRecords)))\n            || (upScroll)) || (scrollArgs.direction === 'right' || scrollArgs.direction === 'left') ||\n            ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') && (downScroll || upScroll) || isCountRequired(this.parent))) {\n            var viewInfo = this.currentInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            this.parent.setColumnIndexesInView(this.parent.enableColumnVirtualization ? viewInfo.columnIndexes : []);\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            this.requestType = 'virtualscroll';\n            if (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left') {\n                viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            }\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.showMaskRow(info.axis);\n                this.parent.addShimmerEffect();\n                this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n            }\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', virtualInfo: viewInfo, focusElement: scrollArgs.focusElement });\n        }\n        else {\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.removeMaskRow();\n                this.parent.notify('removeGanttShimmer', { requestType: 'hideShimmer' });\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent) || this.parent.isFrozenGrid()) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n            if (getValue('requestTypes', this).indexOf('isFrozen') !== -1) {\n                getValue('requestTypes', this).splice(getValue('requestTypes', this).indexOf('isFrozen'), 1);\n                this.requestType = this.requestType === 'isFrozen' ? undefined : this.requestType;\n            }\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            var width = void 0;\n            if (this.parent.enableColumnVirtualization) {\n                this.header.virtualEle.adjustTable(cOffset, 0);\n                var cIndex = info.columnIndexes;\n                width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';\n                this.header.virtualEle.setWrapperWidth(width);\n            }\n            this.virtualEle.setWrapperWidth(width, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[\"\" + replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            if (e.requestType === 'virtualscroll' && e.virtualInfo.sentinelInfo.axis === 'X') {\n                this.parent.notify(events.autoCol, {});\n            }\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            var ensureSelectedRowPosition = 'ensureSelectedRowPosition';\n            _super.prototype[\"\" + focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[\"\" + isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.dataRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[\"\" + isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[\"\" + restoreAdd].call(this);\n            _super.prototype[\"\" + ensureSelectedRowPosition].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback, onEnterCallback, instance) {\n        var containerRect = 'containerRect';\n        _super.prototype[\"\" + containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        if (getValue('options', this).movableContainer) {\n            var movableContainerRect = 'movableContainerRect';\n            _super.prototype[\"\" + movableContainerRect] = getValue('options', this).movableContainer.getBoundingClientRect();\n            EventHandler.add(getValue('options', this).movableContainer, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        }\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback, onEnterCallback, instance) {\n        var _this = this;\n        var delay = Browser.info.name === 'chrome' ? 200 : 100;\n        var options = 'options';\n        var movableEle = 'movableEle';\n        var element = 'element';\n        var fromWheel = 'fromWheel';\n        var debounced100 = debounce(callback, delay);\n        var debounced50 = debounce(callback, 50);\n        this[\"\" + options].prevTop = this[\"\" + options].prevLeft = 0;\n        return function (e) {\n            var top = _this[\"\" + options].movableContainer ? _this[\"\" + options].container.scrollTop : e.target.scrollTop;\n            var left = _this[\"\" + options].movableContainer ? _this[\"\" + options].scrollbar.scrollLeft : e.target.scrollLeft;\n            var direction = _this[\"\" + options].prevTop < top ? 'down' : 'up';\n            direction = _this[\"\" + options].prevLeft === left ? direction : _this[\"\" + options].prevLeft < left ? 'right' : 'left';\n            _this[\"\" + options].prevTop = top;\n            _this[\"\" + options].prevLeft = left;\n            var current = _this.sentinelInfo[\"\" + direction];\n            var delta = 0;\n            _this.newPos = top;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            if (_this[\"\" + options].axes.indexOf(current.axis) === -1) {\n                return;\n            }\n            var containerRect = 'containerRect';\n            _this[\"\" + containerRect] = _this[\"\" + options].container.getBoundingClientRect();\n            var check = _this.check(direction);\n            if (current.entered && (current.axis === 'X' || instance.enableVirtualMaskRow)) {\n                if (_this[\"\" + movableEle] && (direction === 'right' || direction === 'left')) {\n                    onEnterCallback(_this[\"\" + movableEle], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n                else {\n                    onEnterCallback(_this[\"\" + element], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n            }\n            if (check) {\n                var fn = debounced50;\n                if (current.axis === 'X') {\n                    fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n                else {\n                    if ((instance.dataSource instanceof DataManager && instance.dataSource.dataSource.url !== undefined\n                        && !instance.dataSource.dataSource.offline && instance.dataSource.dataSource.url !== '') || isCountRequired(instance)\n                        || instance.enableVirtualMaskRow) {\n                        fn = instance.enableVirtualMaskRow ? debounced100 : fn;\n                        fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                    else {\n                        callback({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                }\n            }\n            _this[\"\" + fromWheel] = false;\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\nimport { VirtualHeaderRenderer, getTransformValues } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        if (this.parent.enableVirtualization && this.parent.selectionSettings.mode === 'Cell' ||\n            this.parent.selectionSettings.mode === 'Row' && !this.parent.selectionSettings.persistSelection) {\n            this.parent.grid.clearSelection();\n        }\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count, requestType: pageingDetails.actionArgs.requestType };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' || requestType === 'searching' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length && isNullOrUndefined(this.expandCollapseRec))) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            if ((requestType === 'save' && pageingDetails.actionArgs.index >= (counts.count - this.parent.grid.pageSettings.pageSize)) || (requestType === 'refresh' && this.parent['isGantt'] && this.parent['isAddedFromGantt']\n                && this.parent.grid.pageSettings.currentPage === this.parent.grid.contentModule['maxPage'])) {\n                startIndex = counts.startIndex + (counts.count - counts.endIndex);\n                endIndex = counts.count;\n                this.parent['isAddedFromGantt'] = false;\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            var virtualWrapperElement = this.parent.grid.contentModule.virtualEle.wrapper;\n            var translateY = getTransformValues(virtualWrapperElement).height;\n            if (!isNullOrUndefined(this.expandCollapseRec) && (pageingDetails.actionArgs.requestType === 'virtualscroll' ||\n                (pageingDetails.actionArgs.requestType === 'refresh' && startIndex !== this.prevstartIndex)) &&\n                (startIndex < this.parent.getRows().length && endIndex <= startIndex + this.parent.getRows().length) && translateY === 0) {\n                startIndex = 0;\n            }\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0 && startIndex !== 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n            }\n            //}\n            if ((this.parent.enableCollapseAll || this.parent.expandStateMapping) && !isNullOrUndefined(this.expandCollapseRec)) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = 0;\n                }\n                else if (!this.parent['isExpandAll']) {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            this.expandCollapseRec = null;\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            if (endIndex === 0 && visualData.length > 0) {\n                pageingDetails.result = visualData;\n            }\n            else {\n                pageingDetails.result = visualData.slice(startIndex, endIndex);\n            }\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        var parentGrid = getValue('parent', this);\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        if (parentGrid.enableColumnVirtualization) {\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Header, new VirtualHeaderRenderer(getValue('parent', this), getValue('locator', this))]);\n        }\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parseInt(parentGrid.height.toString(), 10) :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        var frozenRightRows;\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            frozenRightRows = this.parent.getRows().filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[parseInt(i.toString(), 10)];\n            var rData = this.parent.grid.getRowObjectFromUID(row.getAttribute('data-Uid')).data;\n            if (!isNullOrUndefined(movableRows) && row.parentElement.firstElementChild.clientHeight > 0) {\n                row.style.height = row.parentElement.firstElementChild.clientHeight + 'px';\n            }\n            row.style.display = args.action;\n            if (freeze && frozenRightRows.length) {\n                frozenRightRows[parseInt(i.toString(), 10)].style.display = args.action;\n            }\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[row.rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length) {\n                    var data = this.parent.getCurrentViewRecords()[cRow[0].rowIndex];\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action, record: data });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell' && (!e.target['classList'].contains('e-treegridcollapse') && !e.target['classList'].contains('e-treegridexpand'))) {\n            this.parent.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[\"\" + generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[parseInt(i.toString(), 10)], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            else {\n                rows[args.index + i + 1][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[parseInt(i.toString(), 10)]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var visualData = dm.executeLocal(new Query().where(expanded));\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        if (this.parent.grid.infiniteScrollModule['isInitialRender'] && !this.parent.initialRender) {\n            this.parent.grid.pageSettings.currentPage = 1;\n        }\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.grid.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getRowsObject();\n                var mRowElms = this.parent.grid.getRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[\"\" + keyField] === data[parseInt(i.toString(), 10)][\"\" + keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[\"\" + resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[parseInt(index.toString(), 10)]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getContent().querySelector('tbody')\n                : this.parent.grid.getContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getHeaderContent().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getHeaderContent().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[\"\" + addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[parseInt(i.toString(), 10)], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[parseInt(newRowIndex.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[parseInt(newRowIndex.toString(), 10)][\"\" + position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[\"\" + addRowIndex]][\"\" + position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser, index.Logger, index.InfiniteScroll);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","parseInt","toString","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","filter","item","isSummaryRow","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","e","p","enableImmutableMode","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","updatedParent","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","index_2","treeColumnIndex","allowRowDragAndDrop","renderModule","cellRender","cell","cells","column","getColumns","requestType","RowModifier","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Column","options","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","setProperties","clipboardModule","uid","TreeGridColumn","_super","apply","Property","StackedColumn","LoadingIndicator","ChildProperty","Predicate","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","TreeClipboard","serviceLocator","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","searchingRecords","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","aria-label","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","indeter","checkChildRecords","checkBoxRecord","hasFilteredChildRecords","checkAll","multiFilterCheckState","filterResult","rec","currentRecord","checkedRecord","currentViewData","recordIndex","checkboxRecord","tr","movableTr","getDataRows","allowPaging","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","pageSettings","pageSizeMode","enableCollapseAll","rowsObj","getRowsObject","isFrozenGrid","visible","proxy_1","parentrec","rowDragAndDropModule","getContentTable","scrollHeight","getContent","clientHeight","getVisibleRecords","isReact","thisRef_1","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","enableColumnVirtualization","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","loadChildOnDemand","expandIcon","expand","updateTreeCell","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","freezerightColumns","getFrozenRightColumns","freezeLeftColumns","getFrozenLeftColumns","movableColumns","getMovableColumns","field","notify","checkboxElement","summaryData","template","rowTemplate","treeColumn","colindex","templateCompiler","textContent","appendChildren","children","tempID","element","id","thisRef_2","result","refreshReactColumnTemplateByUid","columnUid","clearTemplate","undefined","indent","getIndentCount","cellIndex","getNormalizedColumnIndex","isDataRow","cellRenderer","CellRenderer","td","getCellFromIndex","refreshTD","treecell","callBack","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","searchString","expands","isExpandCollapse","this_1","childRecords_1","parent_1","getUid","Math","ceil","random","aggregates","summaryQuery","q","fn","summaryModule","calculateSummaryValue","rowDetails","isChild","gridRows","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","take","pageSize","expandDetail","filterqry","predicates","showSpinner","inx","haveChild","resultChildData","gridQuery","aggregateQuery","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","sortBy","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","compFun","sortComparer","bind","direction","dragdIndex","dropdIndex","sortArgs","temp","paging","printMode","actArgs","actualResults","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","indentOutdentAction","modifiedRecords","stackedHeader","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","serverExcelExport","url","isExcel","exportTreeGrid","serverPdfExport","serverCsvExport","state","processQuery","JSON","parse","treeGridModel","addOnPersist","include","fields","search","sorted","setHeaderText","form","treeGridInput","name","stringify","method","document","body","submit","remove","getColumnByField","getFormat","currencyCode","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","getColumnByIndex","editType","findnextRowElement","cellIndex_1","row_1","clearSelection","findPreviousRowElement","cIndex","summaryRowElement","previousElementSibling","infiniteScrollData","remoteCollapsedData","remoteExpandedData","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","mouseMoveHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","freezePresent","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","IsRowDDInjected","isIndentEnabled","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","loggerModule","render","portals","isVue","vueInstance","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","childNodes","refreshToolbarItems","renderComplete","destroyTemplateFn","toolbarElement","toolbarModule","getToolbar","indentID","outdentID","indentElement","outdentElement","afterGridRender","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableVirtualMaskRow","loadingIndicator","enableAltRow","enableHover","enableAutoFill","enableAdaptiveUI","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","enableHtmlSanitizer","triggerEvents","IsExpandCollapseClicked","checkboxOnly","bindGridEvents","rowSelecting","rowDeselecting","rowSelected","isHeaderCheckboxClicked","selectionModule","selectedRowIndexes","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","persistSelection","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","beginEdit","begineditArgs","isExpandRefresh","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","cellSaved","cellEdit","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","actionBegin","dataManager","isQueryInvokedFromData","callBackPromise_2","actionComplete","updateTreeGridModel","ag","showChildSummary","refresh","selectedItem_1","selectedRecords","dropIndex","dropPosition","selectedRows","movableContent","frozenContent","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","iconCss","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","enablePersistence","treeColumnTextAlign","textAlign","treeColumnField","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","updateTreeColumnTextAlign","closeEdit","treeGridElement","hasTreeGridChild","removeListener","dataBind","getElementById","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","val","ignoreInArrays","ignoreInColumn","touches","isEditCollapse","isCheckBoxSelection","isPersistSelection","checkedTarget","showTooltip","cols","scrollWidth","clientWidth","Tooltip","content","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","visibleRecords","sHeight","goToPage","pageNo","pagerModule","updateExternalMessage","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getVirtualColIndexByUid","isRefresh","gridColumns","updateColumnsWidth","currentColumn","mergeColumns","storedColumn","dRows","getHeaderTable","getRowInfo","getUidByColumnField","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","rowInfo_1","parentRec","getCollapseExpandRecords","pagerValuePresent","pagerObj","pagerdropdownModule","isExpandingEventTriggered","expandAllPrevent","expandRows","expandingArgs","expandCollapseAllChildren","expandCollapse","expandArgs","updateExpandStateMapping","isExpandedEventTriggered","isCollapsingEventTriggered","collapseAllPrevent","collapseRows","collapsingArgs","collapseArgs","isCollapsedEventTriggered","firstElementChild","scrollTop","getRowHeight","scrollBy","totalRecords","expandAtLevel","expandAction","getRecordDetails","expandByKey","expandCollapseActionByKey","isPaging","puniqueID_1","collapseAtLevel","collapseAction","collapseByKey","primaryKeyField","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","lastrowIdx","lastRow","removeAttribute","flatDataRecords","deff","data_1","length_1","scrollHeightBeforeRefresh","rows_1","args_1","collapseRemoteChild","movableRows","freezeRightRows","rows_2","freeze","gridRowsObject","currentIndex","visibleRowCount","gridRow","rowsObject","rcell","arg","movablerows","rightrows","collapsingTd","collapse","expandElement","cRow","eRows","i_1","sanitize","SanitizeHtmlHelper","updateRowAndCellElements","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","selectRow","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getMovableDataRows","getMovableRowByIndex","getMovableRows","getFrozenRightRowByIndex","getFrozenRightRows","getFrozenRightDataRows","getFrozenRightCellFromIndex","getFrozenLeftColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableColumnsCount","getVisibleMovableCount","getVisibleFrozenRightCount","getVisibleFrozenLeftCount","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","outdent","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","hasDropItem","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropRows","orderToIndex","dropData","totalRecord","parentrow","request","selectedItemIndex","selectedItem","selectedRow","selectedRecord","record_1","eventTrigger","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","islastRowIndex","isEmptyRow","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","getBoundingClientRect","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","pageY","changedTouches","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","Scroll","getScrollBarWidth","dragelem","ele","errorVal","parentNode","removeChild","spanContent","paddingLeft","dropItemSpan","dropItemLeft","left","spanLeft","errorelem","errorValue","setStyleAttribute","border","box","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","srcControl","targetIndex","isNaN","getTargetIdx","actualData","srcControlFlatData","actualIndex","isByMethod","draggedRecord_2","fromIndex","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","newParentIndex","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","nonRepeat_1","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","updateModifiedRecords","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","getDatas","visualData","getDataInfo","getData","generateRows","virtualInfo","info","blockIndexes","getBlockIndexes","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","isCollapsedStatePersist","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","excelRow","excelrowobj","rowObj","filtercolumnlength","rowlength","excelRows","rowlevel","Boolean","expandedStatus","sublevelState","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","t","res","updatePageSize","pageingDetails","updateSize","gridPagerModule","pageSizes","getLocalizedLabel","propname","skip","size","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","indentEle","outdentEle","selectedrow","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","_b","_c","hideItems","event","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","newlyAddedRecords","childs","primarykey","parentRowIndex","getRowElementByUID","totalCount","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","endIndex","rowPosition","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","isAddedRowByContextMenu","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","dataset","addArgs","dataRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","columnObject","toolbarID","cellDetails","treeCell","afterCellSave","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","errors","focus","newlyAddedRecord","seletedRow","beginAddEdit","primaryKeys_2","selector","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","getRowCollection","getFrozenRightVirtualRowByIndex","isMovable","isRowObject","isFrozenRight","startIdx","rowCollection","virtualOtherAction","indexModifier","setTop","nextSetResIndex","lastIndex","root","onDataReady","refreshContentRows","observers","observes","scrollArgs","scrollListeners","onEnteredAction","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","getColumnOffset","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","isOnenter","gridTop","observer","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","withInRange","restoreEditState","restoreNewRow","isWheel","isIE","showMaskRow","axis","top_1","offsets","xAxis","vgenerator","getColumnIndexes","columnIndexes","cOffsets","maxLeft","upScroll","virtualEle","adjustTable","header","sentinel","outBuffer","offset","downScroll","vHeight","lastInx","remains","isRowSelected","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","setColumnIndexesInView","loadSelf","addShimmerEffect","removeMaskRow","appendContent","newChild","sentinelInfo","cBlock","cOffset","setWrapperWidth","getTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","onEnterCallback","instance","virtualScrollHandlers","movableContainer","delay","debounced100","debounce","debounced50","prevTop","prevLeft","scrollbar","delta","clearTimeout","preventDefault","returnValue","axes","entered","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","virtualWrapperElement","wrapper","getTransformValues","resourceCount","sIndex","instantiateRenderers","parentGrid","renderer","getService","RenderType","Header","VirtualHeaderRenderer","Content","ensurePageSize","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenRightRows","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","rowRenderer","RowRenderer","childRowObjects","childRowElements","actions","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRows","mRowElms","tbody","currentRows","isFrozenRows","newRow","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser","index.Logger","index.InfiniteScroll"],"mappings":"uEAQA,SAAgBA,GAAaC,GACzB,GAAIA,EAAOC,qBAAsBC,eAAa,CAC1C,GAAIC,GAAUH,EAAOC,WAAWE,OAChC,OAAQA,aAAmBC,iBACtBD,YAAmBE,kBAAmBF,YAAmBG,qBACzDH,YAAmBI,iBAAiBJ,YAAmBK,cAEhE,OAAO,EAMX,QAAgBC,GAAgBT,GAC5B,SAAIA,EAAOC,YAAc,UAAYD,GAAOC,YAShD,QAAgBS,GAAiBV,GAC7B,IAAK,GAAIW,GAAI,EAAGA,EAAIX,EAAOY,QAAQC,OAAQF,IACvC,GAAIX,EAAOY,QAAQE,SAASH,EAAEI,WAAY,KAAKC,aAC3C,OAAO,CAGf,QAAO,EAMX,QAAgBC,GAAuBjB,GACnC,SAAMkB,oBAAkBlB,EAAOmB,KAAKC,eAAeC,MAA2C,KAAnCrB,EAAOmB,KAAKC,eAAeC,KACzC,UAAxCrB,EAAOoB,eAAeE,eAAqE,SAAxCtB,EAAOoB,eAAeE,kBACzEtB,EAAOuB,iBAAkBvB,EAAOmB,KAAKK,eAAeZ,QAAQC,QAChB,UAAxCb,EAAOwB,eAAeF,eAAqE,SAAxCtB,EAAOwB,eAAeF,gBAUtF,QAAgBG,GAAkBC,GAG9B,IAAK,GAFDC,MAEKhB,EAAI,EAAGiB,EADIC,OAAOC,KAAKJ,GAASb,OACJF,EAAIiB,EAAKjB,IAC3BoB,YAAU,kBAAmBL,EAAQZ,SAASH,EAAEI,WAAY,OAEvEY,EAAMK,KAAKN,EAAQZ,SAASH,EAAEI,WAAY,KAGlD,OAAOY,GASX,QAAgBM,GAAgBjC,EAAQkC,EAAQC,GAC5C,GAEIC,GAFAC,EAAenB,oBAAkBgB,EAAOI,YAAc,KACtDC,EAAcvC,EAAQkC,EAAOI,WAAWE,SAE5C,OAAoB,OAAhBH,KACIrC,EAAOyC,eAAkBvB,oBAAkBmB,EAAarC,EAAO0C,sBAC3DL,EAAarC,EAAO0C,qBAIO,IAA1BL,EAAaM,YAGbN,EAAaC,aAClBF,EAAcG,EAAcvC,EAAQqC,EAAaC,WAAWE,UACxDJ,GAAepC,EAAOyC,gBAAkBvB,oBAAkBkB,EAAYpC,EAAO0C,uBACzEN,EAAYpC,EAAO0C,qBACvBN,EAAYO,UAAW,GAChB,KAEPP,IAAwC,IAAzBA,EAAYO,aAGtBP,GACEH,EAAgBjC,EAAQoC,EAAaD,OAjBhDE,EAAaM,UAAW,GACjB,IAiCnB,QAAgBC,GAAoBlB,GAChC,GAAIC,KACJ,IAAIT,oBAAkBQ,KAAcA,EAAQmB,kBAAoB3B,oBAAkBQ,EAAQoB,gBAClFpB,EAAQoB,aAAajC,OACzB,QAEJ,KAAKK,oBAAkBQ,EAAQoB,cAG3B,IAAK,GAFDA,GAAepB,EAAQoB,aAAaC,OAAO,SAAUC,GAAQ,OAAQA,EAAKC,eAErEtC,EAAI,EAAGiB,EADLC,OAAOC,KAAKgB,GACIjC,OAAQF,EAAIiB,EAAKjB,IACxCgB,EAAMK,KAAKc,EAAahC,SAASH,EAAEI,WAAY,OAC3C+B,EAAahC,SAASH,EAAEI,WAAY,KAAK8B,kBACvC3B,oBAAkB4B,EAAahC,SAASH,EAAEI,WAAY,KAAK+B,eACzDA,EAAahC,SAASH,EAAEI,WAAY,KAAK+B,aAAajC,UAC1Dc,EAAQA,EAAMuB,OAAON,EAAoBE,EAAahC,SAASH,EAAEI,WAAY,OAIzF,OAAOY,GAMX,QAAgBwB,GAAUnD,GACtB,GAAID,EAAaC,GAAS,CACtB,GAAIoD,GAAKpD,EAAOC,UAChB,QAAQiB,oBAAkBkC,EAAGC,OAEjC,OAAO,EAMX,QAAgBC,GAAYC,GAIxB,IAAK,GAFDC,GACA1B,EAFA2B,KAGK9C,EAAI,EAAG4C,GAAS5C,EAAI4C,EAAM1C,OAAQF,IAAK,CAC5CmB,EAAOD,OAAOC,KAAKyB,EAAMzC,SAASH,EAAEI,WAAY,MAChDyC,IACA,KAAK,GAAIE,GAAI,EAAGA,EAAI5B,EAAKjB,OAAQ6C,IAC7BF,EAAI1B,EAAKhB,SAAS4C,EAAE3C,WAAY,MAAQwC,EAAMzC,SAASH,EAAEI,WAAY,KAAKe,EAAKhB,SAAS4C,EAAE3C,WAAY,KAE1G0C,GAAOzB,KAAKwB,GAEhB,MAAOC,GAMX,QAAgBE,GAAaC,GAQzB,aAPOA,GAAMf,sBACNe,GAAMd,mBACNc,GAAMC,YACND,GAAMtB,iBACNsB,GAAME,YACNF,GAAMG,eACNH,GAAMpB,SACNoB,EAQX,QAAgBrB,GAAcvC,EAAQ4D,EAAOI,GACzC,GAAIA,EAAe,CAEf,MAAOhE,GAAoB,yBAAE,GAAK4D,GAIlC,MAAO5D,GAAc,mBAAE,GAAK4D,GAOpC,QAAgBK,GAASC,GACrB,GAAIC,GAAQC,OAAOC,iBAAiBH,EACpC,OAA2B,SAAlBC,EAAMG,SAA6C,WAArBH,EAAMI,WCxLjD,QAAgBC,GAAWC,EAASC,EAASC,EAAiBC,EAAaC,EAAeC,EAAYC,GAClG,GAGIpE,GACA+C,EAEAsB,EANApB,EAAQa,EAAQb,MAChBqB,EAASR,EAAQQ,OAMjB5D,EAAMqD,EAAQvD,KAAK+D,0BAA0B,GAC7CC,EAAWT,EAAQzE,qBAAsBC,eACzCwE,EAAQzE,WAAWA,WAAWmF,KAAOV,EAAQzE,WAC7CoF,KACAC,EAAe1B,EACf2B,GAAS,CAIb,IAHkC,UAA9Bb,EAAQc,aAAaC,OACrBT,EAAeN,EAAQvD,KAAKuE,WAAWC,mBAE5B,QAAXV,GAAgC,cAAXA,GAAyD,UAA9BP,EAAQc,aAAaC,MAClET,EAA8B,aAAEnE,OAAU,CAC7C,GAAI+E,GAASC,EAAUpB,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,EAChGnB,GAAQgC,EAAOhC,MACf2B,EAASK,EAAOL,OAQpB,GANI3B,YAAiBkC,OACjBT,EAAe/B,EAAYM,GAG3ByB,EAAarD,KAAK+D,YAAWnC,KAE5B2B,IAAsB,QAAXN,GAC6B,QAAxCP,EAAQc,aAAaQ,gBAAoE,WAAxCtB,EAAQc,aAAaQ,gBACvE,IAAK,GAAIC,GAAI,EAAGA,EAAIZ,EAAaxE,OAAQoF,IAAK,CAC0B,gBAAxDZ,GAAavE,SAASmF,EAAElF,WAAY,KAAK,GAAKM,KACtDgE,EAAavE,SAASmF,EAAElF,WAAY,KAAOsE,EAAavE,SAASmF,EAAElF,WAAY,KAAK,GAAKM,GAE7F,IAAIS,GAAOuD,EAAavE,SAASmF,EAAElF,WAAY,KAAKgD,SAChDlC,OAAOC,KAAKuD,EAAavE,SAASmF,EAAElF,WAAY,KAAKgD,UACrDlC,OAAOC,KAAKuD,EAAavE,SAASmF,EAAElF,WAAY,KACpDJ,GAAIwE,EAAStE,MAsFb,MAAOF,KAAOA,GAAK,GAEC,UAvFN,WACV,GAAIwE,EAASrE,SAASH,EAAEI,WAAY,KAAK,GAAKM,KAASgE,EAAavE,SAASmF,EAAElF,WAAY,KAAK,GAAKM,GAAM,CACvG,GAAe,WAAX4D,EA0BC,CACD,GAAe,SAAXA,GACA,IAAKvB,EAAI,EAAGA,EAAI5B,EAAKjB,OAAQ6C,IACzB,GAAI7B,OAAOqE,UAAUC,eAAeC,KAAKjB,EAASrE,SAASH,EAAEI,WAAY,KAAMe,EAAKhB,SAAS4C,EAAE3C,WAAY,QAAyC,SAA9B2D,EAAQc,aAAaC,OAClIvE,oBAAkB8D,IAA8D,IAA7CA,EAAgC,eAAEnE,QACvEiB,EAAKhB,SAAS4C,EAAE3C,WAAY,OAAS+D,GAAa,CACrD,GAAIuB,GAAa9D,EAAcmC,EAASW,EAAavE,SAASmF,EAAElF,WAAY,KAAKyB,SACjF2C,GAASrE,SAASH,EAAEI,WAAY,KAAKe,EAAKhB,SAAS4C,EAAE3C,WAAY,MAC7DsE,EAAavE,SAASmF,EAAElF,WAAY,KAAKe,EAAKhB,SAAS4C,EAAE3C,WAAY,MACrEsF,GAAcA,EAAWtC,WACzBsC,EAAWtC,SAASjC,EAAKhB,SAAS4C,EAAE3C,WAAY,MAAQsF,EAAWvE,EAAKhB,SAAS4C,EAAE3C,WAAY,MACzFoE,EAASrE,SAASH,EAAEI,WAAY,KAAKe,EAAKhB,SAAS4C,EAAE3C,WAAY,YAKlF,IAAe,QAAXkE,GAA+B,cAAXA,EAAwB,CACjD,GAAIpB,OAAQ,EACgC,WAAxCa,EAAQc,aAAaQ,eACjBrB,GACAW,EAAavB,SAAS,GAAKW,EAAQ4B,iBAAmBnB,EAASrE,SAASH,EAAEI,WAAY,KAAK,GAAK2D,EAAQ6B,WACxGpB,EAASqB,OAAO7F,EAAI,EAAG,EAAG2E,EAAavB,YAGlClC,OAAOqE,UAAUC,eAAeC,KAAKjB,EAASrE,SAASH,EAAEI,WAAY,KAAM2D,EAAQ+B,gBACpFtB,EAASrE,SAASH,EAAEI,WAAY,KAAK,GAAK2D,EAAQ+B,kBAEtDtB,EAASrE,SAASH,EAAEI,WAAY,KAAK,GAAK2D,EAAQ+B,cAAczE,KAAKsD,EAAavB,UAClF2C,EAAgBrF,EAAK8D,EAASrE,SAASH,EAAEI,WAAY,KAAMkE,EAAQP,EAASC,EAAiBW,IAGpD,UAAxCZ,EAAQc,aAAaQ,gBAC1Bb,EAASqB,OAAO7F,EAAI,EAAG,EAAG2E,EAAavB,UAClC7C,oBAAkBoE,EAAahD,aAChCoE,EAAgBrF,EAAK8D,EAASxE,EAAI,GAAIsE,EAAQP,EAASC,EAAiBW,IAGtEV,EAIuC,UAAxCF,EAAQc,aAAaQ,iBAC1Bb,EAASqB,OAAO7F,EAAG,EAAG2E,EAAavB,UAC9B7C,oBAAkBoE,EAAahD,aAChCoE,EAAgBrF,EAAK8D,EAASrE,SAASH,EAAEI,WAAY,KAAMkE,EAAQP,EAASC,EAAiBW,KANjGzB,EAAQ,EACRsB,EAASqB,OAAO3C,EAAO,EAAGyB,EAAavB,WAS/C,MAAO,QAzEP,GAAI4C,GAAgBxB,EAASrE,SAASH,EAAEI,WAAY,IAEpD,IADAoE,EAASqB,OAAO7F,EAAG,GACfgE,EAAiB,CACjB,IAAKzD,oBAAkByF,EAAc,GAAKjC,EAAQ4B,kBAK9C,IAAK,GAJDM,GAAalC,EAAQmC,SAAS9D,OAAO,SAAU+D,GAC/C,MAAOA,GAAE,GAAKpC,EAAQ6B,aAAeI,EAAc,GAAKjC,EAAQ4B,mBACjE,GACCxD,EAAe8D,EAAaA,EAAW,GAAKlC,EAAQ+B,iBAC/CM,EAAIjE,EAAajC,OAAS,EAAGkG,GAAK,EAAGA,IAC1C,GAAIjE,EAAahC,SAASiG,EAAEhG,WAAY,KAAK,GAAK2D,EAAQ6B,aAAeI,EAAc,GAAKjC,EAAQ6B,WAAY,CACvG7B,EAAQsC,qBAAuBJ,EAAW9D,aAAajC,SAAW+F,EAAqB,SAAE/F,QAC1F+F,EAAyB,aAAEJ,OAAOO,EAAG,GAEzCjE,EAAa0D,OAAOO,EAAG,GAClBjE,EAAajC,SACd+F,EAAW/D,iBAAkB,EAC7B6D,EAAgBrF,EAAKuF,EAAY3B,EAAQP,EAASC,GAEtD,OAIZ,MAAO,aAsDTzD,qBAAkBiE,EAASrE,SAASH,EAAEI,WAAY,KAAK,GAAK2D,EAAQ+B,gBACtEQ,EAAmB9B,EAASrE,SAASH,EAAEI,WAAY,KAAK,GAAK2D,EAAQ+B,cAAepB,EAAavE,SAASmF,EAAElF,WAAY,KAAMkE,EAAQ5D,EAAKqD,EAASC,EAAiBW,EAAcR,IACnL4B,EAAgBrF,EAAK8D,EAASrE,SAASH,EAAEI,WAAY,KAAMkE,EAAQP,EAASC,UA0BpG,QAAgBkB,GAAUpB,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,GAC/F,GAAInB,GACA2B,GAAS,EACT2B,EAAqBxC,EAAQvD,KAAKgG,uBAGtC,QAFAvD,EAAQmC,YAAWtB,EAAQb,OAC3BA,EAAQD,EAAaC,GACbc,EAAQc,aAAaQ,gBACzB,IAAK,MACDb,EAASiC,QAAQxD,GACjB2B,GAAS,CACT,MACJ,KAAK,SACDJ,EAASnD,KAAK4B,GACd2B,GAAS,CACT,MACJ,KAAK,QAOG3B,EAAQD,EANPzC,oBAAkB6D,GAKnBnB,EAAQmC,YAAWmB,EAAmBtC,EAAc,IAJpDhB,EAAQmC,YAAWhB,GAOvB,MACJ,KAAK,QACL,IAAK,QACD,GAAK7D,oBAAkB6D,GAIlB,CACD,GAAIsC,GAAc3C,EAAQvD,KAAK+D,0BAA0B,GACrDoC,EAAcJ,EAAmBpG,SAAS8D,EAAY7D,WAAY,IAOtE6C,GAAQD,EALJC,GADC1C,oBAAkBoG,IAAgBA,EAAY,GAAKD,KAAiB5C,EAAQb,MAAM,GAAKyD,KAAmC,IAAnBxC,EAChGkB,YAAWuB,GAGXvB,YAAWtB,EAAQb,OAI/Bc,GAAQgB,WAAgC,mBAAE3B,SAAWH,MAbrDA,GAAQD,EADRC,EAAQmC,YAAWhB,KAgBA,IAAnBF,IACAM,EAASiC,QAAQxD,GACjB2B,GAAS,GAGrB,OAAS3B,MAAOA,EAAO2B,OAAQA,GAanC,QAAgB0B,GAAmBnE,EAAcuC,EAAcJ,EAAQ5D,EAAKqD,EAASC,EAAiBW,EAAcR,GAGhH,IAFA,GAAIyC,IAAa,EACb7D,EAAIZ,EAAajC,OACd6C,KAAOA,GAAK,GACf,GAAIZ,EAAahC,SAAS4C,EAAE3C,WAAY,KAAK,GAAKM,KAASgE,EAAa,GAAKhE,IACxEsD,GAAmB7B,EAAahC,SAAS4C,EAAE3C,WAAY,KAAK2D,EAAQ4B,mBAAqBjB,EAAaX,EAAQ6B,WAAa,CAC5H,GAAe,SAAXtB,EAAmB,CAGnB,IAAK,GAFDnD,GAAOD,OAAOC,KAAKuD,GACnBgB,EAAa9D,EAAcmC,EAASW,EAAa7C,UAC5C7B,EAAI,EAAGA,EAAImB,EAAKjB,OAAQF,IAC7B,GAAIkB,OAAOqE,UAAUC,eAAeC,KAAKtD,EAAahC,SAAS4C,EAAE3C,WAAY,KAAMe,EAAKhB,SAASH,EAAEI,WAAY,QAC5E,SAA9B2D,EAAQc,aAAaC,MAAmB3D,EAAKhB,SAASH,EAAEI,WAAY,OAAS+D,KAC9EuB,EAAWvE,EAAKhB,SAASH,EAAEI,WAAY,MACnCsF,EAAWtC,SAASjC,EAAKhB,SAASH,EAAEI,WAAY,MAC5C+B,EAAahC,SAAS4C,EAAE3C,WAAY,KAAKe,EAAKhB,SAASH,EAAEI,WAAY,MACjEsE,EAAavD,EAAKhB,SAASH,EAAEI,WAAY,MACd,WAAnC2D,EAAQvD,KAAKqE,aAAaC,MAAmD,SAA9Bf,EAAQc,aAAaC,MAAiB,CAErFf,EAAQvD,KAAKuE,WAA0B,WAAE8B,aAAenC,EAAaxB,MACrEa,EAAQvD,KAAKuE,WAA0B,WAAE+B,sBAAsBpC,GAI3E,MAEgB,QAAXJ,GAA+B,cAAXA,EACmB,UAAxCP,EAAQc,aAAaQ,eACjBrB,GACAW,EAAa,GAAKZ,EAAQ4B,iBAAmBxD,EAAahC,SAAS4C,EAAE3C,WAAY,KAAK2D,EAAQ6B,WAC9FzD,EAAa0D,OAAO9C,EAAI,EAAG,EAAG4B,GAC9BoB,EAAgBrF,EAAKyB,EAAahC,SAAS4C,EAAE3C,WAAY,KAAMkE,EAAQP,EAASC,EAAiBW,KAG5FzD,OAAOqE,UAAUC,eAAeC,KAAKtD,EAAahC,SAAS4C,EAAE3C,WAAY,KAAM2D,EAAQ+B,gBACxF3D,EAAahC,SAAS4C,EAAE3C,WAAY,KAAK2D,EAAQ+B,kBAErD3D,EAAahC,SAAS4C,EAAE3C,WAAY,KAAK2D,EAAQ+B,cAAczE,KAAKsD,EAAavB,UACjF2C,EAAgBrF,EAAKyB,EAAahC,SAAS4C,EAAE3C,WAAY,KAAMkE,EAAQP,EAASC,EAAiBW,IAGxD,UAAxCZ,EAAQc,aAAaQ,gBAC1BlD,EAAa0D,OAAO9C,EAAG,EAAG4B,EAAavB,UAClC7C,oBAAkBoE,EAAahD,aAChCoE,EAAgBrF,EAAKyB,EAAahC,SAAS4C,EAAE3C,WAAY,KAAMkE,EAAQP,EAASC,EAAiBW,IAGxD,UAAxCZ,EAAQc,aAAaQ,iBAC1BlD,EAAa0D,OAAO9C,EAAI,EAAG,EAAG4B,EAAavB,UACtC7C,oBAAkBoE,EAAahD,aAChCoE,EAAgBrF,EAAKyB,EAAahC,SAAS4C,EAAE3C,WAAY,KAAMkE,EAAQP,EAASC,EAAiBW,KAKzGxC,EAAa0D,OAAO9C,EAAG,GAClBZ,EAAajC,SACd0G,GAAa,QAIfrG,qBAAkB4B,EAAahC,SAAS4C,EAAE3C,WAAY,KAAK2D,EAAQ+B,gBACrEQ,EAAmBnE,EAAahC,SAAS4C,EAAE3C,WAAY,KAAK2D,EAAQ+B,cAAepB,EAAcJ,EAAQ5D,EAAKqD,EAASC,EAAiBW,EAAcR,IACtJ4B,EAAgBrF,EAAKyB,EAAahC,SAAS4C,EAAE3C,WAAY,KAAMkE,EAAQP,EAASC,EAI5F,OAAO4C,GAWX,QAAgBb,GAAgBrF,EAAKa,EAAQ+C,EAAQP,EAASC,EAAiB+C,GAC3E,GAA6C,UAAxChD,EAAQc,aAAaQ,gBAAsE,UAAxCtB,EAAQc,aAAaQ,gBACzD,QAAXf,GAA+B,cAAXA,GAA6B/D,oBAAkBwG,EAAMpF,YAI7E,CACD,GACIqF,GADAC,EAAiBlD,EAAQvD,KAAKgG,uBAMlC,IAJAS,EAAeC,IAAI,SAAUf,EAAGnG,GAAK,GAAImG,EAAE,GAAKzF,KAASa,EAAO,GAAKb,GAEjE,YADAsG,EAAUhH,KAGV+D,EAAQoD,sBAAwB5G,oBAAkByG,GAAU,CAC5D,GAAII,GAAgBC,WAAS,sBAAwBN,EAAMO,eAAgBvD,EAC3ExC,GAAS6F,EAcb,GAZK7G,oBAAkByG,KACnBzF,EAAS0F,EAAe9G,SAAS6G,EAAQ5G,WAAY,MAErD2D,EAAQoD,sBAAwB5G,oBAAkBgB,KAAYhB,oBAAkBwG,KAChFxF,EAAS8F,WAAS,sBAAwBN,EAAMO,eAAgBvD,IAE/DC,GAAoBzD,oBAAkBgB,EAAOY,gBAAiBZ,EAAOY,aAAajC,OAInFqB,EAAOW,iBAAkB,EAHzBX,EAAOW,iBAAkB,EAKd,QAAXoC,GAA+B,cAAXA,EAAwB,CAC5C/C,EAAOS,UAAW,EAClBT,EAAOW,iBAAkB,EACrB6B,EAAQwD,aAAatH,QAAQC,QAAUK,oBAAkBwG,KACzDA,EAAQE,EAAe7E,OAAO,SAAU+D,GACpC,MAAIA,GAAEmB,iBAAmB/F,EAAOM,SACrBsE,EAGA,OAInB,IAAIhE,GAAe4E,EAAQA,YAAiB5B,OAAQ4B,EAAM,GAAKA,EAAQE,EAAeD,EAAU,EACpD,WAAxCjD,EAAQc,aAAaQ,iBAChBnE,OAAOqE,UAAUC,eAAeC,KAAKlE,EAAQ,gBAIzChB,oBAAkBwG,IAAUxF,EAAO,GAAKb,KAASqG,EAAM,GAAKrG,IAC7Da,EAAOY,aAAad,KAAK0F,GAJ7BxF,EAAOY,iBAOwC,IAA/CZ,EAAOY,aAAaqF,QAAQrF,IAAwBZ,EAAO,GAAKb,KAASqG,EAAM,GAAKrG,IACpFa,EAAOY,aAAasE,QAAQtE,GAE5B6B,IACK9C,OAAOqE,UAAUC,eAAeC,KAAKlE,EAAQwC,EAAQ+B,gBACtDvE,EAAOwC,EAAQ+B,mBAE8C,IAA7DvE,EAAO,GAAKwC,EAAQ+B,cAAc0B,QAAQrF,IAAwBZ,EAAO,GAAKb,KAASqG,EAAM,GAAKrG,IAClGa,EAAOwC,EAAQ+B,cAAcW,QAAQtE,KAQrD,IAAK,GAHDuE,GAAc3C,EAAQvD,KAAK+D,0BAA0B,GACrDkD,EAAO1D,EAAQvD,KAAKlB,qBAAsBC,eAC1CwE,EAAQvD,KAAKlB,WAAWA,WAAWmF,KAAOV,EAAQvD,KAAKlB,WAClDU,EAAI,EAAGA,EAAIyH,EAAKvH,OAAQF,IAC7B,GAAIyH,EAAKtH,SAASH,EAAEI,WAAY,KAAK,GAAKsG,KAAiBnF,EAAO,GAAKmF,GAAc,CACjFe,EAAKtH,SAASH,EAAEI,WAAY,KAAOmB,CACnC,OAGRwC,EAAQvD,KAAKkH,WAAWhH,EAAKa,EAC7B,IAAIoG,GAAM5D,EAAQ6D,cAAcZ,EACE,WAA9BjD,EAAQc,aAAaC,OAEjB6C,EADW,QAAXrD,EACMP,EAAQ8D,UAAU9D,EAAQvD,KAAKgG,wBAAwBgB,QAAQjG,IAG/DwC,EAAQ8D,UAAU9D,EAAQvD,KAAKsH,wBAAwBvG,EAAO,GAAKb,KAGjF,IAAIqH,OAAa,EAIjB,KAHIhE,EAAQiE,YAAcjE,EAAQkE,sBAC9BF,EAAahE,EAAQ6D,cAAcZ,KAElCjD,EAAQoD,uBAAyB5G,oBAAkBoH,KAASpH,oBAAkBwH,GAAa,CAC5F,GAAIG,GAAUnE,EAAQoE,eAClBpE,GAAQqE,qBAAuBrE,EAAQsC,sBACvC6B,GAAoB,GAExBnE,EAAQsE,aAAaC,YACjBb,KAAMlG,EAAQgH,KAAMZ,EAAIa,MAAMrI,SAAS+H,EAAQ9H,WAAY,KAAOuH,EAAIa,MAAMrI,SAAS+H,EAAQ9H,WAAY,KACnG2H,EAAWS,MAAMN,EAAUnE,EAAQkE,oBACzCQ,OAAQ1E,EAAQvD,KAAKkI,aAAa3E,EAAQoE,iBAC1CQ,YAAarE,KAEbP,EAAQsC,qBAA6C,cAAtBtC,EAAgB,QAA2C,eAAtBA,EAAgB,SACpFA,EAAQsE,aAAaO,aACjBnB,KAAMlG,EAAQoG,IAAKA,SAlGd/F,GAAcmC,EAASgD,EAAMpF,WAAWE,UAC9CM,aAAad,KAAK0F,GClTrC,GAAI8B,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB5H,OAAO+H,iBAChBC,uBAA2B/D,QAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI5C,KAAK4C,GAAOA,EAAExD,eAAeY,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOC,KAAKC,YAAcN,EADnCD,EAAcC,EAAGC,GAEjBD,EAAExD,UAAkB,OAANyD,EAAa9H,OAAOoI,OAAON,IAAMG,EAAG5D,UAAYyD,EAAEzD,UAAW,GAAI4D,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQ/I,EAAKgJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU1J,OAAQ2J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOxI,OAAO4I,yBAAyBL,EAAQ/I,GAAOgJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ/I,EAAKgJ,OACpH,KAAK,GAAI1J,GAAIwJ,EAAWtJ,OAAS,EAAGF,GAAK,EAAGA,KAAS+I,EAAIS,EAAWxJ,MAAI6J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ/I,EAAKmJ,GAAKd,EAAEU,EAAQ/I,KAASmJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK3I,OAAO+I,eAAeR,EAAQ/I,EAAKmJ,GAAIA,GAM5DK,EAAwB,WACxB,QAASA,GAAOC,GAOZf,KAAKgB,cAAe,EAMpBhB,KAAKiB,QAMLjB,KAAKkB,mBAAoB,EAOzBlB,KAAKmB,iBAAkB,EAOvBnB,KAAKoB,gBAAiB,EAOtBpB,KAAKxI,gBAAiB,EAOtBwI,KAAKqB,cAAe,EAOpBrB,KAAKsB,eAAgB,EAWrBtB,KAAKhH,UACLuI,QAAMvB,KAAMe,GAqBhB,MAZAD,GAAO3E,UAAUqF,cAAgB,SAAUnC,GAGvC,IAAK,GADDtH,GAAOD,OAAOC,KAAKsH,GACdzI,EAAI,EAAGA,EAAImB,EAAKjB,OAAQF,IAG7B,GAFAoJ,KAAKjI,EAAKhB,SAASH,EAAEI,WAAY,MAAQqI,EAAOtH,EAAKhB,SAASH,EAAEI,WAAY,MAExEgJ,KAAK/J,QAAU+J,KAAK/J,OAAgB,SAA0C,aAArC8B,EAAKhB,SAASH,EAAEI,WAAY,KAAqB,CAE1FgJ,KAAK/J,OAAOwL,gBAAgC,eAAExC,aAAiD,gCAAEe,KAAK0B,OAI3GZ,KAMPa,EAAgC,SAAUC,GAE1C,QAASD,KACL,MAAkB,QAAXC,GAAmBA,EAAOC,MAAM7B,KAAMQ,YAAcR,KAK/D,MAPAP,GAAUkC,EAAgBC,GAI1BzB,GACI2B,WAAS,OACVH,EAAexF,UAAW,cAAW,IACjCwF,GACTb,GAKEiB,EAA+B,SAAUH,GAEzC,QAASG,KACL,MAAkB,QAAXH,GAAmBA,EAAOC,MAAM7B,KAAMQ,YAAcR,KAE/D,MAJAP,GAAUsC,EAAeH,GAIlBG,GACTJ,GCzIElC,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB5H,OAAO+H,iBAChBC,uBAA2B/D,QAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI5C,KAAK4C,GAAOA,EAAExD,eAAeY,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOC,KAAKC,YAAcN,EADnCD,EAAcC,EAAGC,GAEjBD,EAAExD,UAAkB,OAANyD,EAAa9H,OAAOoI,OAAON,IAAMG,EAAG5D,UAAYyD,EAAEzD,UAAW,GAAI4D,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQ/I,EAAKgJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU1J,OAAQ2J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOxI,OAAO4I,yBAAyBL,EAAQ/I,GAAOgJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ/I,EAAKgJ,OACpH,KAAK,GAAI1J,GAAIwJ,EAAWtJ,OAAS,EAAGF,GAAK,EAAGA,KAAS+I,EAAIS,EAAWxJ,MAAI6J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ/I,EAAKmJ,GAAKd,EAAEU,EAAQ/I,KAASmJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK3I,OAAO+I,eAAeR,EAAQ/I,EAAKmJ,GAAIA,GAM5DuB,EAAkC,SAAUJ,GAE5C,QAASI,KACL,MAAkB,QAAXJ,GAAmBA,EAAOC,MAAM7B,KAAMQ,YAAcR,KAK/D,MAPAP,GAAUuC,EAAkBJ,GAI5BzB,GACI2B,WAAS,YACVE,EAAiB7F,UAAW,oBAAiB,IACzC6F,GACTC,iBChCExC,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB5H,OAAO+H,iBAChBC,uBAA2B/D,QAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI5C,KAAK4C,GAAOA,EAAExD,eAAeY,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOC,KAAKC,YAAcN,EADnCD,EAAcC,EAAGC,GAEjBD,EAAExD,UAAkB,OAANyD,EAAa9H,OAAOoI,OAAON,IAAMG,EAAG5D,UAAYyD,EAAEzD,UAAW,GAAI4D,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQ/I,EAAKgJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU1J,OAAQ2J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOxI,OAAO4I,yBAAyBL,EAAQ/I,GAAOgJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ/I,EAAKgJ,OACpH,KAAK,GAAI1J,GAAIwJ,EAAWtJ,OAAS,EAAGF,GAAK,EAAGA,KAAS+I,EAAIS,EAAWxJ,MAAI6J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ/I,EAAKmJ,GAAKd,EAAEU,EAAQ/I,KAASmJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK3I,OAAO+I,eAAeR,EAAQ/I,EAAKmJ,GAAIA,GAM5DyB,EAA2B,SAAUN,GAErC,QAASM,KACL,MAAkB,QAAXN,GAAmBA,EAAOC,MAAM7B,KAAMQ,YAAcR,KAsC/D,MAxCAP,GAAUyC,EAAWN,GAIrBzB,GACI2B,cACDI,EAAU/F,UAAW,YAAS,IACjCgE,GACI2B,cACDI,EAAU/F,UAAW,eAAY,IACpCgE,GACI2B,cACDI,EAAU/F,UAAW,YAAS,IACjCgE,GACI2B,cACDI,EAAU/F,UAAW,gBAAa,IACrCgE,GACI2B,cACDI,EAAU/F,UAAW,mBAAgB,IACxCgE,GACI2B,cACDI,EAAU/F,UAAW,gBAAa,IACrCgE,GACI2B,gBACDI,EAAU/F,UAAW,wBAAqB,IAC7CgE,GACI2B,gBACDI,EAAU/F,UAAW,qBAAkB,IAC1CgE,GACI2B,cACDI,EAAU/F,UAAW,WAAQ,IAChCgE,GACI2B,cACDI,EAAU/F,UAAW,kBAAe,IACvCgE,GACI2B,cACDI,EAAU/F,UAAW,UAAO,IAC/BgE,GACI2B,cACDI,EAAU/F,UAAW,mBAAgB,IACjC+F,GACTD,iBAKEE,EAAgC,SAAUP,GAE1C,QAASO,KACL,MAAkB,QAAXP,GAAmBA,EAAOC,MAAM7B,KAAMQ,YAAcR,KA0B/D,MA5BAP,GAAU0C,EAAgBP,GAI1BzB,GACIiC,gBAAeF,IAChBC,EAAehG,UAAW,cAAW,IACxCgE,GACI2B,WAAS,cACVK,EAAehG,UAAW,WAAQ,IACrCgE,GACI2B,cACDK,EAAehG,UAAW,WAAQ,IACrCgE,GACI2B,YAAS,IACVK,EAAehG,UAAW,0BAAuB,IACpDgE,GACI2B,WAAS,OACVK,EAAehG,UAAW,yBAAsB,IACnDgE,GACI2B,cACDK,EAAehG,UAAW,gBAAa,IAC1CgE,GACI2B,YAAS,IACVK,EAAehG,UAAW,mBAAgB,IAC7CgE,GACI2B,WAAS,WACVK,EAAehG,UAAW,oBAAiB,IACvCgG,GACTF,iBCpGExC,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB5H,OAAO+H,iBAChBC,uBAA2B/D,QAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI5C,KAAK4C,GAAOA,EAAExD,eAAeY,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOC,KAAKC,YAAcN,EADnCD,EAAcC,EAAGC,GAEjBD,EAAExD,UAAkB,OAANyD,EAAa9H,OAAOoI,OAAON,IAAMG,EAAG5D,UAAYyD,EAAEzD,UAAW,GAAI4D,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQ/I,EAAKgJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU1J,OAAQ2J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOxI,OAAO4I,yBAAyBL,EAAQ/I,GAAOgJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ/I,EAAKgJ,OACpH,KAAK,GAAI1J,GAAIwJ,EAAWtJ,OAAS,EAAGF,GAAK,EAAGA,KAAS+I,EAAIS,EAAWxJ,MAAI6J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ/I,EAAKmJ,GAAKd,EAAEU,EAAQ/I,KAASmJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK3I,OAAO+I,eAAeR,EAAQ/I,EAAKmJ,GAAIA,GAM5D4B,EAAkC,SAAUT,GAE5C,QAASS,KACL,MAAkB,QAAXT,GAAmBA,EAAOC,MAAM7B,KAAMQ,YAAcR,KAK/D,MAPAP,GAAU4C,EAAkBT,GAI5BzB,GACI2B,WAAS,SACVO,EAAiBlG,UAAW,eAAY,IACpCkG,GACTJ,iBChCExC,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB5H,OAAO+H,iBAChBC,uBAA2B/D,QAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI5C,KAAK4C,GAAOA,EAAExD,eAAeY,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOC,KAAKC,YAAcN,EADnCD,EAAcC,EAAGC,GAEjBD,EAAExD,UAAkB,OAANyD,EAAa9H,OAAOoI,OAAON,IAAMG,EAAG5D,UAAYyD,EAAEzD,UAAW,GAAI4D,QAUnFuC,EAAU,oDACVC,EAAe,2CAMfC,GAAiB,EACjBC,EAAwB,SAAUb,GAElC,QAASa,GAAOxM,GAIZ,MAFAyM,QAAKC,OAAOC,UACJhB,EAAOvF,KAAK2D,KAAM/J,IAAW+J,KAgFzC,MApFAP,GAAUgD,EAAQb,GAalBa,EAAOtG,UAAU0G,cAAgB,WAC7B,MAAO,UAEXJ,EAAOtG,UAAU2G,IAAM,SAAUC,EAAOC,GAC9BD,YAAiBhH,SACnBgH,GAASA,GAGb,KAAK,GADDE,GAAOF,EACFnM,EAAI,EAAGA,EAAIqM,EAAKnM,OAAQF,IAAK,CAClC,GAAIqC,GAAOiK,cAAYD,EAAKlM,SAASH,EAAEI,WAAY,MAC/CmM,EAAMlK,EAAKmK,MAAMJ,EAAMhD,KAAK/J,OAChC,IAAIkN,EAAIE,QAAS,CACb,GAAIC,GAAUrK,EAAKsK,gBAAgBP,EAAMhD,KAAK/J,OAAQkN,EAAIpC,QAC1DuC,GAAUA,EAAQE,QAAQ,UAAW,eAAeA,QAAQ,mBAAoB,IAAIA,QAAQ,aAAc,IACtGhB,GAAuD,2BAArCS,EAAKlM,SAASH,EAAEI,WAAY,OAC9CsM,EAAUA,EAAQE,QAAQ,UAAW,mBACrChB,GAAiB,EAErB,IAAI1I,GAAQwJ,EAAQlF,QAAQ,SACxBqF,EAAUH,EAAQI,UAAU5J,EACS,oBAArCmJ,EAAKlM,SAASH,EAAEI,WAAY,KAC5BsM,EAAUA,EAAQE,QAAQC,EAASnB,EAAU,YAEH,2BAArCW,EAAKlM,SAASH,EAAEI,WAAY,MAA0E,0BAArCiM,EAAKlM,SAASH,EAAEI,WAAY,KAClGsM,EAAUA,EAAQE,QAAQC,EAASlB,EAAe,sCAER,qBAArCU,EAAKlM,SAASH,EAAEI,WAAY,KACjCsM,EAAUA,EAAQE,QAAQC,EAASnB,EAAU,SAEH,mBAArCW,EAAKlM,SAASH,EAAEI,WAAY,KACjCsM,EAAUA,EAAQE,QAAQC,EAASnB,EAAU,YAEH,6BAArCW,EAAKlM,SAASH,EAAEI,WAAY,KACjCsM,EAAUA,EAAQE,QAAQC,EAASnB,EAAU,YAEH,mBAArCW,EAAKlM,SAASH,EAAEI,WAAY,OACjCsM,EAAUA,EAAQE,QAAQC,EAASnB,EAAU,gCAER,+BAArCW,EAAKlM,SAASH,EAAEI,WAAY,KACvBG,oBAAkB6I,KAAK2D,cAAiBxM,oBAAkB6I,KAAK2D,YAAYC,kBAE5EC,QAAQ5K,EAAK6K,SAASR,GAK1BO,QAAQ5K,EAAK6K,SAASR,MAKtCb,EAAOtG,UAAU4H,QAAU,SAAUhB,EAAOC,EAAMgB,GAC9ChE,KAAK2D,YAAcK,EACbjB,YAAiBhH,SACnBgH,GAASA,GAEb,IAAIE,GAAOF,CACPiB,GAAShF,sBAAwBgF,EAASnN,QAAQmC,OAAO,SAAUqG,GAAU,MAAOA,GAAO4E,eAAiBnN,SAC5G0L,GAAiB,EACjBxC,KAAK8C,IAAI,yBAA0BE,GAEvC,KAAK,GAAIpM,GAAI,EAAGA,EAAIqM,EAAKnM,OAAQF,IAAK,CAClC,GAAIqC,GAAOiL,EAAgBjB,EAAKlM,SAASH,EAAEI,WAAY,MACnDmM,EAAMlK,EAAKmK,MAAMJ,EAAMgB,EAC3B,IAAIb,EAAIE,QAAS,CACb,GAAIC,GAAUrK,EAAKsK,gBAAgBP,EAAMgB,EAAUb,EAAIpC,QAEvD8C,SAAQ5K,EAAK6K,SAASR,MAI3Bb,GACTG,UAESsB,GAEPC,wBACIlB,KAAM,yBACNa,QAAS,QACTV,MAAO,SAAUJ,EAAM/M,GACnB,GAAImO,IAAQf,SAAS,EAOrB,QANKlM,oBAAkBlB,EAAOuG,YAAcrF,oBAAkBlB,EAAOyG,eAC9DvF,oBAAkBlB,EAAOsG,mBAC1BpF,oBAAkBlB,EAAOuG,YAAcrF,oBAAkBlB,EAAOsG,kBACjEpF,oBAAkBlB,EAAOuG,aAAerF,oBAAkBlB,EAAOsG,oBAClE6H,GAAQf,SAAS,IAEde,GAEXb,gBAAiB,WACb,MAAOc,iRAIF9B,EAAe,+BACfA,EAAe,4BACfA,EAAe,oCC1I5B9C,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB5H,OAAO+H,iBAChBC,uBAA2B/D,QAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI5C,KAAK4C,GAAOA,EAAExD,eAAeY,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOC,KAAKC,YAAcN,EADnCD,EAAcC,EAAGC,GAEjBD,EAAExD,UAAkB,OAANyD,EAAa9H,OAAOoI,OAAON,IAAMG,EAAG5D,UAAYyD,EAAEzD,UAAW,GAAI4D,QAWnFuE,EAA+B,SAAU1C,GAEzC,QAAS0C,GAAcrO,EAAQsO,GAC3B,GAAIC,GAAQ5C,EAAOvF,KAAK2D,KAAM/J,EAAOmB,KAAMmN,IAAmBvE,IAK9D,OAJAwE,GAAMC,gBAAkB,GACxBD,EAAME,4BACNF,EAAMG,eAAiB1O,EACvBuO,EAAMD,eAAiBA,EAChBC,EAyJX,MAhKA/E,GAAU6E,EAAe1C,GASzB0C,EAAcnI,UAAUyI,YAAc,SAAUC,GAC5C,GAIIhH,GAAiBmC,KAAK2E,eAAevH,uBACzC,IAAyC,KAArC/C,OAAOyK,eAAe9N,WAAmB,CACzCgJ,KAAK+E,kBAAkBlL,MAAQmG,KAAqB,YAAI,EACxD,IAAIgF,GAAOhF,KAAK2E,eAAevN,KAAKqH,SACpC,IAAmD,SAA/CuB,KAAK2E,eAAeM,kBAAkBvJ,KAAiB,CAIvD,IAAK,GAHDwJ,GAAkBlF,KAAK2E,eAAeQ,wBAAwBC,KAAK,SAAUC,EAAGzF,GAChF,MAAOyF,GAAIzF,IAENhJ,EAAI,EAAGA,EAAIsO,EAAgBpO,OAAQF,IAIxC,GAHIA,EAAI,IACJoJ,KAAKyE,iBAAmB,OAEvBO,EAAKE,EAAgBnO,SAASH,EAAEI,WAAY,MAAMsO,UAAUC,SAAS,gBAAiB,CACvF,GAAInG,MAAWoG,MAAMnJ,KAAK2I,EAAKE,EAAgBnO,SAASH,EAAEI,WAAY,MAAMyO,iBAAiB,eACzFC,EAAW1F,KAAK2E,eAAegB,qBAAqB5O,SAASH,EAAEI,WAAY,KAAkB,UACxC,IAArDgJ,KAAK0E,yBAAyBtG,QAAQsH,KACQ,WAA1C1F,KAAK2E,eAAeiB,mBAA4E,SAA1C5F,KAAK2E,eAAeiB,mBAC1E5F,KAAK6F,kBAAkBhI,EAAgBqH,EAAgBnO,SAASH,EAAEI,WAAY,KAAMgO,EAAMH,EAAYjO,GAE1GoJ,KAAqB,YAAEZ,GAAO,EAAO,KAAMyF,GAC3C7E,KAAKyE,iBAAmBzE,KAAqB,YAC7CA,KAAK0E,yBAAyBzM,KAAKyN,GACnC1F,KAAqB,YAAI,GACqB,UAA1CA,KAAK2E,eAAeiB,mBAA2E,SAA1C5F,KAAK2E,eAAeiB,mBACzE5F,KAAK8F,iBAAiBjI,EAAgBqH,EAAgBnO,SAASH,EAAEI,WAAY,KAAMgO,EAAMH,IAKzG,GAAIA,EAAY,CAEZ,IAAK,GADDkB,MACKnP,EAAI,EAAGA,EAAIoJ,KAAK2E,eAAeqB,oBAAoBlP,OAAQF,IAChEmP,EAAgBhP,SAASH,EAAEI,WAAY,KACnCgJ,KAAK2E,eAAeqB,oBAAoBjP,SAASH,EAAEI,WAAY,KAAKiP,UAE5EjG,MAAqB,YAAE+F,GAAiB,EAAO,KAAMlB,GACrD7E,KAAKyE,gBAAkBzE,KAAqB,YAAI,KAAOA,KAAKyE,gBAEhE,GAAIzB,IACA3E,KAAM2B,KAAKyE,gBACXyB,QAAQ,EAGZ,IADAlG,KAAK2E,eAAewB,QCvBZ,aDuBuCnD,GAC3CA,EAAKkD,OACL,MAEJlG,MAAK+E,kBAAkBlL,MAAQmG,KAAqB,YAAIgD,EAAK3E,KACxD+H,UAAQC,UAAUC,MAAM,qBAIzBtG,KAAK+E,kBAAkBwB,kBAAkB,EAAGvG,KAAK+E,kBAAkBlL,MAAM/C,QAHzEkJ,KAAK+E,kBAAkByB,SAK3BxG,KAAkB,UAAI,EACtBA,KAAK0E,4BACL1E,KAAKyE,gBAAkB,OAGvB7C,GAAOzF,UAAUyI,YAAYvI,KAAK2D,KAAM6E,KAIpDP,EAAcnI,UAAU0J,kBAAoB,SAAUhI,EAAgB/C,EAAekK,EAAMH,EAAY/K,GAMnG,IAAK3C,oBAAkB0G,EAAe9G,SAAS+D,EAAc9D,WAAY,KAAoB,YAEzF,IAAK,GADDyP,GAAY5I,EAAe9G,SAAS+D,EAAc9D,WAAY,KAAoB,WAAY,MACzFJ,EAAI,EAAGA,EAAI6P,EAAY,EAAG7P,IAC/B,IAAK,GAAI+C,GAAI,EAAGA,EAAIkE,EAAe/G,OAAQ6C,IACvC,IAAKxC,oBAAkB0G,EAAe9G,SAAS+D,EAAc9D,WAAY,KAAoB,aACzF6G,EAAe9G,SAAS4C,EAAE3C,WAAY,KAAkB,WAAM6G,EAAe9G,SAAS+D,EAAc9D,WAAY,KAAoB,WAAe,SAAG,CACtJ8D,EAAgBnB,CAChB,IAAIyF,MAAWoG,MAAMnJ,KAAK2I,EAAKjO,SAAS+D,EAAc9D,WAAY,KAAKyO,iBAAiB,eACpFC,EAAW7H,EAAe9G,SAAS4C,EAAE3C,WAAY,KAAkB,QACvE,KAAyD,IAArDgJ,KAAK0E,yBAAyBtG,QAAQsH,GAAkB,CACxD1F,KAAqB,YAAEZ,GAAO,EAAO,KAAMyF,GAEvC7E,KAAKyE,gBADL3K,EAAQ,EACekG,KAAKyE,gBAAkBzE,KAAqB,YAAI,KAGhDA,KAAqB,YAAI,KAAOA,KAAKyE,gBAEhEzE,KAAK0E,yBAAyBzM,KAAKyN,GACnC1F,KAAqB,YAAI,EACzB,UAOxBsE,EAAcnI,UAAUuK,KAAO,SAAU7B,GACrCjD,EAAOzF,UAAUuK,KAAKrK,KAAK2D,KAAM6E,IAErCP,EAAcnI,UAAUwK,MAAQ,SAAUtI,EAAMuI,EAAUC,GACtDjF,EAAOzF,UAAUwK,MAAMtK,KAAK2D,KAAM3B,EAAMuI,EAAUC,IAQtDvC,EAAcnI,UAAU0G,cAAgB,WACpC,MAAO,aAQXyB,EAAcnI,UAAU2K,QAAU,WAC9BlF,EAAOzF,UAAU2K,QAAQzK,KAAK2D,OAElCsE,EAAcnI,UAAU2J,iBAAmB,SAAUjI,EAAgB/C,EAAekK,EAAMH,GAMtF,GAAIhH,EAAe9G,SAAS+D,EAAc9D,WAAY,KAAyB,gBAE3E,IAAK,GADD+P,GAAYlJ,EAAe9G,SAAS+D,EAAc9D,WAAY,KAAsB,aAC/EJ,EAAI,EAAGA,EAAImQ,EAAUjQ,OAAQF,IAClC,IAAK,GAAI+C,GAAI,EAAGA,EAAIkE,EAAe/G,OAAQ6C,IACvC,IAAKxC,oBAAkB4P,EAAUhQ,SAASH,EAAEI,WAAY,KAAkB,WAAM6G,EAAe9G,SAAS4C,EAAE3C,WAAY,KAAkB,WAAM+P,EAAUhQ,SAASH,EAAEI,WAAY,KAAkB,SAAG,CAChM,IAAMG,oBAAkB6N,EAAKjO,SAAS4C,EAAE3C,WAAY,QAAWgO,EAAKjO,SAAS4C,EAAE3C,WAAY,KAAKsO,UAAUC,SAAS,gBAAiB,CAChI,GAAInG,MAAWoG,MAAMnJ,KAAK2I,EAAKjO,SAAS4C,EAAE3C,WAAY,KAAKyO,iBAAiB,eACxEC,EAAW7H,EAAe9G,SAAS4C,EAAE3C,WAAY,KAAkB,UACd,IAArDgJ,KAAK0E,yBAAyBtG,QAAQsH,KACtC1F,KAAqB,YAAEZ,GAAO,EAAO,KAAMyF,GAC3C7E,KAAKyE,iBAAoB,KAAOzE,KAAqB,YACrDA,KAAqB,YAAI,GACzBA,KAAK0E,yBAAyBzM,KAAKyN,GACnC1F,KAAK8F,iBAAiBjI,EAAgBlE,EAAGqL,EAAMH,IAGvD,QAMbP,GACT0C,aE7KEC,EAA2B,WAM3B,QAASA,GAAUhR,GACf+J,KAAK/J,OAASA,EACd+J,KAAKkH,iBACLlH,KAAKkF,mBACLlF,KAAKmH,gBACLnH,KAAKoH,oBACLpH,KAAKqH,mBAoeT,MA5dAJ,GAAU9K,UAAU0G,cAAgB,WAChC,MAAO,aAEXoE,EAAU9K,UAAUkL,iBAAmB,WACnCrH,KAAK/J,OAAOqR,GAAG,eAAgBtH,KAAKuH,eAAgBvH,MACpDA,KAAK/J,OAAOqR,GAAG,iBAAkBtH,KAAKwH,eAAgBxH,MACtDA,KAAK/J,OAAOqR,GAAG,oBAAqBtH,KAAKyH,kBAAmBzH,MAC5DA,KAAK/J,OAAOmB,KAAKkQ,GAAG,mBAAoBtH,KAAKuH,eAAgBvH,MAC7DA,KAAK/J,OAAOqR,GAAG,oBAAqBtH,KAAK0H,kBAAmB1H,OAEhEiH,EAAU9K,UAAUwL,oBAAsB,WAClC3H,KAAK/J,OAAO2R,cAGhB5H,KAAK/J,OAAO4R,IAAI,eAAgB7H,KAAKuH,gBACrCvH,KAAK/J,OAAO4R,IAAI,iBAAkB7H,KAAKwH,gBACvCxH,KAAK/J,OAAOmB,KAAKyQ,IAAI,mBAAoB7H,KAAKuH,gBAC9CvH,KAAK/J,OAAO4R,IAAI,oBAAqB7H,KAAK0H,mBAC1C1H,KAAK/J,OAAO4R,IAAI,oBAAqB7H,KAAKyH,qBAQ9CR,EAAU9K,UAAU2K,QAAU,WAC1B9G,KAAK2H,uBAETV,EAAU9K,UAAUuL,kBAAoB,SAAU1E,GAC9C,GAEI8E,GAFAzH,EAASrI,YAAU,SAAUgL,GAC7B+E,EAAYC,eAAa3H,EAAQ,qBAErC,IAAI0H,GAAaA,EAAUtC,iBAAiB,sBAAsB3O,OAAS,EAAG,CAC1EgR,EAAWC,EAAUE,cAAc,yBACnC,IAAIrB,KACJA,GAAS3O,KAAKoI,EAAO6H,QAAQ,MAAMtB,UACnC5G,KAAKmI,iBAAiBvB,GACtB5G,KAAKoI,sBAAsBN,EAAUA,EAASO,mBAAmB/C,UAAUC,SAAS,WAAYlF,EAAO6H,QAAQ,WAE9G,IAAIH,GAAaA,EAAUtC,iBAAiB,oBAAoB3O,OAAS,GAAKkJ,KAAK/J,OAAOqS,mBAAoB,CAC/G,GAAIC,IAAiBR,EAAUE,cAAc,YAAY3C,UAAUC,SAAS,aACpEwC,EAAUE,cAAc,YAAY3C,UAAUC,SAAS,SAC/DvF,MAAKwI,gBAAgBD,GACrBT,EAAWC,EAAUE,cAAc,0BACnCjI,KAAKoI,sBAAsBN,EAAUS,EAAelI,EAAO6H,QAAQ,SAG3EjB,EAAU9K,UAAUiM,sBAAwB,SAAUN,EAAUW,EAAYC,GACxE,GAAIrK,GAAO2B,KAAK/J,OAAOmH,wBAAwBsL,EAAW9B,UACtD5D,GAAS2F,QAASF,EAAYpI,OAAQyH,EAAUY,WAAYA,EAC5DE,QAASd,EAASxC,UAAUC,SAAS,mBAC/BvF,KAAK/J,OAAO4S,oBAAsBxK,EAC5C2B,MAAK/J,OAAOkQ,QD5DQ,iBC4DuBnD,IAE/CiE,EAAU9K,UAAU2M,uBAAyB,WAMzC,IAAK,GALDC,GACAC,EAGAnS,EAAUmJ,KAAK/J,OAAyB,cAAI+J,KAAK/J,OAAuB,YAAK+J,KAAK/J,OAAe,QAC5FgT,EAAM,EAAGA,EAAMpS,EAAQC,OAAQmS,IAChCpS,EAAQE,SAASkS,EAAIjS,WAAY,KAAKC,eACtC8R,EAAalS,EAAQE,SAASkS,EAAIjS,WAAY,KAAK0K,IAI3D,KAAK,GADDwH,GAAmBlJ,KAAK/J,OAAOkT,mBAAmB1D,iBAAiB,oBAAoB3O,OAClF6C,EAAI,EAAGA,EAAIuP,EAAkBvP,IACjBqG,KAAK/J,OAAOkT,mBAAmB1D,iBAAiB,oBAAoB1O,SAAS4C,EAAE3C,WAAY,KAC7FoS,aAAa,kBAAoBL,IAC5CC,EAAcrP,EAGtB,OAAOqP,IAEX/B,EAAU9K,UAAUoL,eAAiB,WAEjC,GADAvH,KAAKgJ,YAAchJ,KAAK8I,yBACpB9I,KAAKgJ,aAAe,GAAoF,IAA/EhJ,KAAK/J,OAAOkT,mBAAmB1D,iBAAiB,oBAAoB3O,OAAc,CAC3G,GAAIuS,GAAgBrJ,KAAK/J,OAAOkT,mBAAmB1D,iBAAiB,oBAAoBzF,KAAKgJ,aAEzFM,EAAYtJ,KAAK/J,OAAOsT,cAAc,SAAWC,UAAW,kBAAmBC,OAASxG,KAAQ,eAChG8E,EAAY2B,iBAAe1J,KAAK/J,OAAOsT,eAAe,GAASZ,SAFvD,EAEuEgB,MAAO,OAChFrE,UAAUsE,IAAI,uBACxB7B,EAAU8B,aAAaP,EAAUQ,YAAa/B,EAAUgC,YACnD5S,oBAAkBkS,IACnBA,EAAcQ,aAAa9B,EAAWsB,EAAcU,YAEpD/J,KAAK/J,OAAOqS,oBACZtI,KAAKwI,sBAGR,IAAIxI,KAAKgJ,aAAe,GAAKhJ,KAAK/J,OAAOkT,mBAAmB1D,iBAAiB,oBAAoB3O,OAAS,EAAG,CAC9G,GAAIiR,GAAY/H,KAAK/J,OAAOkT,mBAAmB1D,iBAAiB,uBAAuB,GACnF8C,EAAgBR,EAAUE,cAAc,YAAY3C,UAAUC,SAAS,UACvEvF,MAAK/J,OAAOqS,oBAAsBC,GAClCvI,KAAKwI,gBAAgBD,KAIjCtB,EAAU9K,UAAU6N,qBAAuB,SAAUhH,GACjD,GAAIsG,GAAYtJ,KAAK/J,OAAOsT,cAAc,SAAWC,UAAW,oBAAqBC,OAASxG,KAAQ,WAAYgH,aAAc,cAC5H5L,EAAO2E,EAAK3E,IAChB2E,GAAK7D,KAAKmG,UAAUsE,IAAI,sBACxB5G,EAAK7D,KAAK+K,aAAa,aAAc,WACrC,IAAIrQ,IAAS1C,oBAAkBkH,EAAK8L,gBAAyC,YAAvB9L,EAAK8L,cACvDpC,EAAY2B,iBAAe1J,KAAK/J,OAAOsT,eAAe,GAASZ,QAAS9O,EAAO8P,MAAO,KAK1F,IAJA5B,EAAUzC,UAAUsE,IAAI,uBACpB5J,KAAK/J,OAAOmU,gBACZrC,EAAUE,cAAc,YAAY7N,MAAMiQ,MAAQ,QAE3B,kBAAvBhM,EAAK8L,cAAmC,CACxC,GAAIG,GAAWvC,EAAUtC,iBAAiB,YAAY,EACtD8E,gBAAaD,IAAY,UAAW,SAAU,cAC9CvC,EAAUE,cAAc,YAAY3C,UAAUsE,IAAI,UAGtD,MADA7B,GAAU8B,aAAaP,EAAUQ,YAAa/B,EAAUgC,YACjDhC,GAEXd,EAAU9K,UAAUqL,eAAiB,SAAUgD,GAC3C,GAAIzC,GAAY/H,KAAKgK,qBAAqBQ,GACtCC,EAAeD,EAAUrL,KAAK8I,cAAc,0BAChD,IAAK9Q,oBAAkBsT,GAKlB,CACD,GAAIC,GAAU1K,KAAK/J,OAAOsT,cAAc,QAAUC,UAAW,mBACzDnL,EAAOmM,EAAUrL,KAAKwL,SAC1BH,GAAUrL,KAAKwL,UAAY,GAC3BD,EAAQC,UAAYtM,CACpB,IAAIuM,GAAS5K,KAAK/J,OAAOsT,cAAc,OAASC,UAAW,4BAC3DoB,GAAOC,YAAY9C,GACnB6C,EAAOC,YAAYH,GACnBF,EAAUrL,KAAK0L,YAAYD,OAZtBJ,GAAUrL,KAAK8I,cAAc,yBAC9BwC,EAAaZ,aAAa9B,EAAW0C,EAAahF,iBAAiB,eAAe,KAc9FwB,EAAU9K,UAAUgM,iBAAmB,SAAU2C,GAC7C,IAAK,GAAIlU,GAAI,EAAGA,EAAIkU,EAAWhU,OAAQF,IAAK,CACxC,GAAIuB,GAAS6H,KAAK/J,OAAOmH,wBAAwB0N,EAAW/T,SAASH,EAAEI,WAAY,MAC/E+T,EAAavS,EAAcwH,KAAK/J,OAAQkC,EAAOM,UAE/C0R,EAA0C,aAD9ChS,EAAS4S,GACmBZ,cAA+B,QAAU,SACrEhS,GAAOgS,cAAgBA,CAEvB,KAAK,GADDpS,GAAOD,OAAOC,KAAKI,GACdwB,EAAI,EAAGA,EAAI5B,EAAKjB,OAAQ6C,IACzB7B,OAAOqE,UAAUC,eAAeC,KAAK0O,EAAYhT,EAAKhB,SAAS4C,EAAE3C,WAAY,QAC7E+T,EAAWhT,EAAKhB,SAAS4C,EAAE3C,WAAY,MAAQmB,EAAOJ,EAAKhB,SAAS4C,EAAE3C,WAAY,MAG1FgJ,MAAKgL,gBAAgB7S,EAAQgS,GAAe,GACxCnK,KAAK/J,OAAOqS,oBACZtI,KAAKwI,oBAIjBvB,EAAU9K,UAAU6O,gBAAkB,SAAU7S,EAAQgS,EAAec,GACnE,GAAInU,GAAS,CAKb,IAJAkJ,KAAKkL,oBAAoB/S,EAAQgS,IAC5Bc,GAAe9S,EAAOI,YAAcyH,KAAK/J,OAAOqS,oBACjDtI,KAAKmL,sBAAsBhT,EAAOI,YAElCJ,EAAOY,cAAgBiH,KAAK/J,OAAOqS,mBAAoB,CACvD,GAAIvP,GAAeZ,EAAOY,cACrB5B,oBAAkB6I,KAAK/J,OAAOmV,eAC/BpL,KAAK/J,OAAOmV,aAAaC,eAAevU,OAAS,GAAKkJ,KAAK/J,OAAOqS,qBAClEvP,EAAeiH,KAAKsL,wBAAwBvS,IAEhDjC,EAASiC,EAAajC,MACtB,KAAK,GAAIyU,GAAQ,EAAGA,EAAQzU,EAAQyU,IAC3BxS,EAAahC,SAASwU,EAAMvU,WAAY,KAAKkC,eAC1CH,EAAahC,SAASwU,EAAMvU,WAAY,KAAK8B,gBAC7CkH,KAAKgL,gBAAgBjS,EAAahC,SAASwU,EAAMvU,WAAY,KAAMmT,GAAe,GAGlFnK,KAAKkL,oBAAoBnS,EAAahC,SAASwU,EAAMvU,WAAY,KAAMmT,MAM3FlD,EAAU9K,UAAUmP,wBAA0B,SAAUvS,GACpD,GAAIyL,GAAQxE,IAIZ,OAH2BjH,GAAaC,OAAO,SAAU+D,GACrD,MAAOyH,GAAMvO,OAAOmV,aAAaC,eAAejN,QAAQrB,IAAM,KAItEkK,EAAU9K,UAAUgP,sBAAwB,SAAU7S,GAClD,GAAIxB,GAAS,EACTiC,KACAZ,EAASK,EAAcwH,KAAK/J,OAAQqC,EAAaG,SACjDN,IAAUA,EAAOY,eACjBA,EAAeZ,EAAOY,eAErB5B,oBAAkB6I,KAAK/J,OAAOmV,eAC/BpL,KAAK/J,OAAOmV,aAAaC,eAAevU,OAAS,GAAKkJ,KAAK/J,OAAOqS,qBAClEvP,EAAeiH,KAAKsL,wBAAwBvS,IAEhDjC,EAASiC,GAAgBA,EAAajC,MACtC,IAAI0U,GAAU,EACVC,EAAoB,CACxB,KAAKtU,oBAAkBgB,GAAS,CAC5B,IAAK,GAAIvB,GAAI,EAAGA,EAAImC,EAAajC,OAAQF,IAAK,CAC1C,GACI8U,GADgBlT,EAAcwH,KAAK/J,OAAQ8C,EAAahC,SAASH,EAAEI,WAAY,KAAKyB,SAEnFtB,qBAAkBuU,KACkB,kBAAjCA,EAAevB,cACfqB,IAEsC,UAAjCE,EAAevB,eACpBsB,KAIRD,EAAU,GAAMC,EAAoB,GAAKA,IAAsB3U,EAC/DqB,EAAOgS,cAAgB,iBAEI,IAAtBsB,GAA6BtT,EAAOwT,0BAA2BxU,oBAAkBgB,EAAOwT,0BAA8BxU,oBAAkB6I,KAAK/J,OAAoB,YAAc,aAC1H,cAAzD+J,KAAK/J,OAAoB,YAAc,WAAEsJ,aAAwF,cAAzDS,KAAK/J,OAAoB,YAAc,WAAEsJ,aAAyD,UAAzBpH,EAAOgS,iBAG7H,IAAtBsB,GAAuC,IAAZD,GAAyC,IAAtBC,GAA2BtT,EAAOwT,0BAA4BxU,oBAAkB6I,KAAK/J,OAAoB,YAAc,cACjH,cAAzD+J,KAAK/J,OAAoB,YAAc,WAAEsJ,aAAwF,cAAzDS,KAAK/J,OAAoB,YAAc,WAAEsJ,cAAyD,UAAzBpH,EAAOgS,eACzJhS,EAAOgS,cAAgB,UAJvBhS,EAAOgS,cAAgB,QAS3BnK,KAAKkL,oBAAoB/S,EAAQA,EAAOgS,eACpChS,EAAOI,YACPyH,KAAKmL,sBAAsBhT,EAAOI,cAI9C0O,EAAU9K,UAAUqM,gBAAkB,SAAUoD,GAC5C,GAAIpH,GAAQxE,KAERlJ,EAAS,EAET+U,GAAwB,CAC5B,KAAK1U,oBAAkB6I,KAAK/J,OAAOmV,eAAiBpL,KAAK/J,OAAOmV,aAAaC,eAAevU,OAAS,EAAG,CACpG,GAAIgV,GAAe9L,KAAK/J,OAAOmV,aAAaC,cACX,KAA7BrL,KAAKmH,aAAarQ,SAClBkJ,KAAKmH,aAAe2E,GAEpB9L,KAAK/J,OAAOmB,KAAKC,eAAeC,IAAIR,OACpCkJ,KAAKoH,iBAAmB0E,EAGpB9L,KAAKmH,eAAiB2E,GACtB9L,KAAKmH,aAAe2E,EACpBD,GAAwB,GAGxBA,GAAwB,EAIhC7L,KAAKmH,aAAarQ,OAAS,IACtBkJ,KAAK/J,OAAOwB,eAAeZ,QAAQC,SAAUkJ,KAAKmH,aAAarQ,QAAWkJ,KAAK/J,OAAOmB,KAAKC,eAAeC,IAAIR,SAC/GkJ,KAAKmH,iBAELnH,KAAKoH,iBAAiBtQ,SAAWK,oBAAkByU,KACnD5L,KAAKmH,aAAenH,KAAKoH,kBAGjC,IAAI/I,EAWJ,IAPIA,GAHElH,oBAAkB6I,KAAK/J,OAAOmV,eACmB,IAAnDpL,KAAK/J,OAAOmV,aAAaC,eAAevU,QAA+D,IAA/CkJ,KAAK/J,OAAOmH,wBAAwBtG,QAC5FkJ,KAAK/J,OAAOwB,eAAeZ,QAAQC,OAAS,EACrCkJ,KAAKmH,cAGHhQ,oBAAkB6I,KAAK/J,OAAOmV,eAClCpL,KAAKmH,aAAarQ,OAAS,EAAMkJ,KAAKmH,aAAenH,KAAK/J,OAAO6G,SAE1EuB,EAAOrI,EAAagK,KAAK/J,QAAU+J,KAAK/J,OAAOmH,wBAA0BiB,GACpElH,oBAAkByU,GACnB,IAAK,GAAIhV,GAAI,EAAGA,EAAIyH,EAAKvH,OAAQF,IAC7B,GAAIgV,EAAU,CACV,GAAuD,UAAnDvN,EAAKtH,SAASH,EAAEI,WAAY,KAAKmT,cACjC,QAEJ,IAAI0B,EACA,QAEJxN,GAAKtH,SAASH,EAAEI,WAAY,KAAKmT,cAAgB,QACjDnK,KAAKkL,oBAAoB7M,EAAKtH,SAASH,EAAEI,WAAY,KAAMqH,EAAKtH,SAASH,EAAEI,WAAY,KAAKmT,mBAGpFnK,MAAKkH,cAAc9I,QAAQC,EAAKtH,SAASH,EAAEI,WAAY,OAClD,IACTqH,EAAKtH,SAASH,EAAEI,WAAY,KAAKmT,cAAgB,UACjDnK,KAAKkL,oBAAoB7M,EAAKtH,SAASH,EAAEI,WAAY,KAAMqH,EAAKtH,SAASH,EAAEI,WAAY,KAAKmT,eACxFnK,KAAK/J,OAAOqS,oBACZtI,KAAKmL,sBAAsB9M,EAAKtH,SAASH,EAAEI,WAAY,QAM1D,IAAb4U,GAAsB5L,KAAK/J,OAAO8H,uBAClCiC,KAAKkH,iBACLlH,KAAKkF,mBACL7G,EAAKrF,OAAO,SAAU+S,GAClBA,EAAI5B,cAAgB,UACpB3F,EAAM0G,oBAAoBa,EAAKA,EAAI5B,kBAG3CrT,EAASkJ,KAAKkH,cAAcpQ,MAC5B,IAAIwT,GAAWtK,KAAK/J,OAAOkT,mBAAmB1D,iBAAiB,YAAY,EACvE3O,GAAS,GAAKuH,EAAKvH,OAAS,EACxBA,IAAWuH,EAAKvH,QAAW8U,GAK3BrB,eAAaD,IAAY,WACzBA,EAAShF,UAAUsE,IAAI,aALvBW,eAAaD,IAAY,YACzBA,EAAShF,UAAUsE,IAAI,WAQ3BW,eAAaD,IAAY,UAAW,YAG5CrD,EAAU9K,UAAU+O,oBAAsB,SAAUc,EAAevD,GAC/D,GAGIwD,GAIA3B,EAPAnS,EAAS6H,KAAK/J,OAAOmB,KAAK8U,gBAAgBlT,OAAO,SAAU+D,GAC3D,MAAOA,GAAEtE,WAAauT,EAAcvT,WAGpC0T,EAAcnM,KAAK/J,OAAOmB,KAAK8U,gBAAgB9N,QAAQjG,EAAO,IAC9DiU,EAAiB5T,EAAcwH,KAAK/J,OAAQ+V,EAAcvT,UAC1D4T,EAAKrM,KAAK/J,OAAOwI,UAAU1H,SAASoV,EAAYnV,WAAY,IAEhE,IAAImV,GAAe,EAAG,CAClB,GAAIG,OAAY,IACZtM,KAAK/J,OAAO2I,YAAcoB,KAAK/J,OAAO4I,sBACtCyN,EAAYtM,KAAK/J,OAAOsW,cAAcxV,SAASoV,EAAYnV,WAAY,MAE3EsT,EAAW+B,EAAG5G,iBAAiB,iCAAiC,GAAK4G,EAAG5G,iBAAiB,iCAAiC,GACpH6G,EAAU7G,iBAAiB,iCAAiC,GAC7DtO,oBAAkBmT,IACnBC,eAAaD,IAAY,UAAW,SAAU,cAQtD,GALA2B,EAAgBG,EACZjV,oBAAkB8U,KAClBA,EAAgBD,GAEpBC,EAAc9B,cAAgB1B,EACX,UAAfA,GAA0BtR,oBAAkB6U,EAAc9S,eACrC,IAAjBiT,IAAqE,IAA/CnM,KAAKkF,gBAAgB9G,QAAQ+N,IACnDnM,KAAKkF,gBAAgBjN,KAAKkU,IAEqB,IAA/CnM,KAAKkH,cAAc9I,QAAQ6N,KAA2C,IAAjBE,IACnDhV,oBAAkB6I,KAAK/J,OAAOmV,eAAiBpL,KAAK/J,OAAOmV,aAAaC,eAAevU,OAAS,GAClGkJ,KAAKkH,cAAcjP,KAAKgU,IAEuB,IAA/CjM,KAAKkH,cAAc9I,QAAQ6N,KAA0BjM,KAAK/J,OAAO8H,sBAAwBiC,KAAK/J,OAAOuW,eAAmBrV,oBAAkB6I,KAAK/J,OAAOmV,eAAiBpL,KAAK/J,OAAOmV,aAAaC,eAAevU,OAAS,GACxNkJ,KAAKkH,cAAcjP,KAAKgU,IAEuB,IAA/CjM,KAAKkH,cAAc9I,QAAQ6N,IAA2B9U,oBAAkB6I,KAAK/J,OAAOmV,eACjC,IAAnDpL,KAAK/J,OAAOmV,aAAaC,eAAevU,QACxCkJ,KAAKkH,cAAcjP,KAAKgU,IAEuB,IAA/CjM,KAAKkH,cAAc9I,QAAQ6N,IAAyB9U,oBAAkB6I,KAAK/J,OAAOmV,eAClFpL,KAAKkH,cAAcjP,KAAKgU,OAG3B,KAAoB,YAAfxD,GAA2C,kBAAfA,IAAmCtR,oBAAkB6U,EAAc9S,cAAe,CACpH,GAAIY,GAAQkG,KAAKkH,cAAc9I,QAAQ6N,EAIvC,KAHe,IAAXnS,GACAkG,KAAKkH,cAAczK,OAAO3C,EAAO,IAEc,IAA/CkG,KAAKkF,gBAAgB9G,QAAQ+N,GAAqB,CAClD,GAAIM,GAAezM,KAAKkF,gBAAgB9G,QAAQ+N,EAChDnM,MAAKkF,gBAAgBzI,OAAOgQ,EAAc,IAGlD,GAAIC,GAA+B,kBAAfjE,EAAiC,SAAW,KAAOA,CACnE0D,IAAe,IACVhV,oBAAkBmT,KACnBA,EAAShF,UAAUsE,IAAI8C,GACvBL,EACGpE,cAAc,sBAAsBiC,aAAa,eAA+B,UAAfzB,EAAyB,OAAwB,YAAfA,EAA2B,QAAU,YAIvJxB,EAAU9K,UAAUsL,kBAAoB,SAAUzE,GAC9C,GAEI+D,GACA4F,EAHAnI,EAAQxE,KACRT,EAAcyD,EAAKzD,WAGvB,IAAI5I,EAAiBqJ,KAAK/J,SAClB+J,KAAK/J,OAAOqS,mBACZ,GAAqB,YAAhB/I,GAA6C,WAAhBA,EAA2B,CACzD,GAAIyF,GAAOhF,KAAK/J,OAAOmB,KAAKqH,SAE5BkO,IADA5F,EAAY/G,KAAK/J,OAAOmH,yBACAtG,OACxBkJ,KAAKkF,kBACL,KAAStO,EAAI,EAAGA,EAAI+V,EAAa/V,IACxBoO,EAAKjO,SAASH,EAAEI,WAAY,KAAKsO,UAAUC,SAAS,iBACrDvF,KAAKkL,oBAAoBnE,EAAUhQ,SAASH,EAAEI,WAAY,KAAM+P,EAAUhQ,SAASH,EAAEI,WAAY,KAAKmT,mBAI7G,IAAoB,WAAhB5K,GAA4C,QAAhByD,EAAK9H,OAAkB,CACxD,GAAI0R,KACgB,YAAhBrN,EACAqN,EAAc5J,EAAK3E,KAGnBuO,EAAY3U,KAAK+K,EAAK3E,KAE1B,KAAK,GAAIzH,GAAI,EAAGA,EAAIgW,EAAY9V,OAAQF,IAAK,CACzC,GAAoB,WAAhB2I,EAA0B,CAC1B,GAAIzF,GAAQkG,KAAK/J,OAAO6G,SAASsB,QAAQwO,EAAY7V,SAASH,EAAEI,WAAY,MACxEyV,EAAezM,KAAKkF,gBAAgB9G,QAAQtE,EAChDkG,MAAKkF,gBAAgBzI,OAAOgQ,EAAc,GAC1CzM,KAAKkL,oBAAoB0B,EAAY7V,SAASH,EAAEI,WAAY,KAAM,WAEjEG,oBAAkByV,EAAY7V,SAASH,EAAEI,WAAY,KAAKuB,aAC3DyH,KAAKmL,sBAAsByB,EAAY7V,SAASH,EAAEI,WAAY,KAAKuB,iBAIjD,QAArByK,EAAKzD,aAAyBS,KAAK/J,OAAOqS,mBAC/CtF,EAAK3E,KAAK8L,cAAgB,WAEL,cAAhB5K,GAA+C,cAAhBA,GAA+C,YAAhBA,IAC/DvJ,EAAagK,KAAK/J,WACtB+J,KAAKkH,iBACLlH,KAAKkF,oBACL6B,GAAc5P,oBAAkB6I,KAAK/J,OAAOmV,eAAiBpL,KAAK/J,OAAOmV,aAAaC,eAAevU,OAAS,EAC1GkJ,KAAK/J,OAAOmV,aAAaC,eAAiBrL,KAAK/J,OAAO6G,UAChD+P,QAAQ,SAAU1U,GACxB,GAAIqM,EAAMvO,OAAO8H,qBAAsB,CAC/B5F,EAAOW,iBAAmBX,EAAOY,aAAajC,OAAS,EACvD0N,EAAM2G,sBAAsBhT,GAG5BqM,EAAM0G,oBAAoB/S,EAAQA,EAAOgS,cAE7C,IAAIxM,GAAQ9E,EAAoBV,EAChCwF,GAAQ6G,EAAM8G,wBAAwB3N,EACtC,KAAK,GAAI/G,GAAI,EAAGA,EAAI+G,EAAM7G,OAAQF,IAC1B+G,EAAM5G,SAASH,EAAEI,WAAY,KAAK8B,gBAClC0L,EAAM2G,sBAAsBxN,EAAM5G,SAASH,EAAEI,WAAY,MAElD2G,EAAM5G,SAASH,EAAEI,WAAY,sBACnCG,oBAAkBwG,EAAM5G,SAASH,EAAEI,WAAY,OAChDwN,EAAM0G,oBAAoBvN,EAAM5G,SAASH,EAAEI,WAAY,KAAM2G,EAAM5G,SAASH,EAAEI,WAAY,KAAKmT,mBAKnGhS,GAAOW,gBACP0L,EAAM2G,sBAAsBhT,GAG5BqM,EAAM0G,oBAAoB/S,EAAQA,EAAOgS,iBAIrDnK,KAAKwI,oBAKrBvB,EAAU9K,UAAU2Q,kBAAoB,WACpC,MAAO9M,MAAKkH,eAEhBD,EAAU9K,UAAU4Q,qBAAuB,WACvC,MAAO/M,MAAKkF,iBAET+B,KClfP+F,EAAuB,WAMvB,QAASA,GAAM/W,GACX+J,KAAK/J,OAASA,EACdyM,OAAKC,OAAOsK,SACZjN,KAAKqH,mBAyCT,MAjCA2F,GAAM7Q,UAAU0G,cAAgB,WAC5B,MAAO,SAMXmK,EAAM7Q,UAAUkL,iBAAmB,WAC/BrH,KAAK/J,OAAOmB,KAAKkQ,GFgBE,iBEhBuBtH,KAAKkN,cAAelN,OAElEgN,EAAM7Q,UAAUwL,oBAAsB,WAClC3H,KAAK/J,OAAOmB,KAAKyQ,IFaE,iBEbwB7H,KAAKkN,gBAEpDF,EAAM7Q,UAAU+Q,cAAgB,SAAUC,GACtC,GAAI/V,GAAOY,YAAU,YAAamV,GAC9BC,EAAcpV,YAAU,UAAWmV,EACvC/V,GAAKiQ,iBFhCc,gBEgCyBrH,KAAK/J,OAAOmB,KAAKiW,eAC7DjW,EAAKiQ,iBFrCa,eEqCyBrH,KAAK/J,OAAOmB,KAAKkW,cAC5DlW,EAAKiQ,iBFhCgB,kBEgCyBrH,KAAK/J,OAAOmB,KAAKmW,iBAC/DC,YAAUJ,GAAc,eAE5BJ,EAAM7Q,UAAUsR,MAAQ,WACpBzN,KAAK/J,OAAOmB,KAAKqW,SAQrBT,EAAM7Q,UAAU2K,QAAU,WACtB9G,KAAK2H,uBAEFqF,KC1DPvN,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB5H,OAAO+H,iBAChBC,uBAA2B/D,QAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI5C,KAAK4C,GAAOA,EAAExD,eAAeY,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOC,KAAKC,YAAcN,EADnCD,EAAcC,EAAGC,GAEjBD,EAAExD,UAAkB,OAANyD,EAAa9H,OAAOoI,OAAON,IAAMG,EAAG5D,UAAYyD,EAAEzD,UAAW,GAAI4D,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQ/I,EAAKgJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU1J,OAAQ2J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOxI,OAAO4I,yBAAyBL,EAAQ/I,GAAOgJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ/I,EAAKgJ,OACpH,KAAK,GAAI1J,GAAIwJ,EAAWtJ,OAAS,EAAGF,GAAK,EAAGA,KAAS+I,EAAIS,EAAWxJ,MAAI6J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ/I,EAAKmJ,GAAKd,EAAEU,EAAQ/I,KAASmJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK3I,OAAO+I,eAAeR,EAAQ/I,EAAKmJ,GAAIA,GAM5DiN,EAAgC,SAAU9L,GAE1C,QAAS8L,KACL,MAAkB,QAAX9L,GAAmBA,EAAOC,MAAM7B,KAAMQ,YAAcR,KAiB/D,MAnBAP,GAAUiO,EAAgB9L,GAI1BzB,GACI2B,cACD4L,EAAevR,UAAW,aAAU,IACvCgE,GACI2B,YAAS,IACV4L,EAAevR,UAAW,iBAAc,IAC3CgE,GACI2B,WAAS,aACV4L,EAAevR,UAAW,eAAY,IACzCgE,GACI2B,cACD4L,EAAevR,UAAW,UAAO,IACpCgE,GACI2B,cACD4L,EAAevR,UAAW,oBAAiB,IACvCuR,GACTzL,iBC5CExC,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB5H,OAAO+H,iBAChBC,uBAA2B/D,QAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI5C,KAAK4C,GAAOA,EAAExD,eAAeY,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOC,KAAKC,YAAcN,EADnCD,EAAcC,EAAGC,GAEjBD,EAAExD,UAAkB,OAANyD,EAAa9H,OAAOoI,OAAON,IAAMG,EAAG5D,UAAYyD,EAAEzD,UAAW,GAAI4D,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQ/I,EAAKgJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU1J,OAAQ2J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOxI,OAAO4I,yBAAyBL,EAAQ/I,GAAOgJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ/I,EAAKgJ,OACpH,KAAK,GAAI1J,GAAIwJ,EAAWtJ,OAAS,EAAGF,GAAK,EAAGA,KAAS+I,EAAIS,EAAWxJ,MAAI6J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ/I,EAAKmJ,GAAKd,EAAEU,EAAQ/I,KAASmJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK3I,OAAO+I,eAAeR,EAAQ/I,EAAKmJ,GAAIA,GAM5DkN,EAAmC,SAAU/L,GAE7C,QAAS+L,KACL,MAAkB,QAAX/L,GAAmBA,EAAOC,MAAM7B,KAAMQ,YAAcR,KAuB/D,MAzBAP,GAAUkO,EAAmB/L,GAI7BzB,GACI2B,WAAS,QACV6L,EAAkBxR,UAAW,WAAQ,IACxCgE,GACI2B,WAAS,SACV6L,EAAkBxR,UAAW,wBAAqB,IACrDgE,GACI2B,WAAS,WACV6L,EAAkBxR,UAAW,WAAQ,IACxCgE,GACI2B,YAAS,IACV6L,EAAkBxR,UAAW,uBAAoB,IACpDgE,GACI2B,WAAS,YACV6L,EAAkBxR,UAAW,mBAAgB,IAChDgE,GACI2B,YAAS,IACV6L,EAAkBxR,UAAW,mBAAgB,IAChDgE,GACI2B,YAAS,IACV6L,EAAkBxR,UAAW,mBAAgB,IACzCwR,GACT1L,iBCxCE2L,EAAwB,WAMxB,QAASA,GAAO3X,GACZ+J,KAAK/J,OAASA,EACd+J,KAAK6N,eAAiB,KACtB7N,KAAK/J,OAAOmB,KAAKkQ,GAAG,kBAAmBtH,KAAK8N,qBAAsB9N,MAClEA,KAAK/J,OAAOmB,KAAKkQ,GAAG,sBAAuBtH,KAAK+N,oBAAqB/N,MA6VzE,MArVA4N,GAAOzR,UAAUqD,YAAc,SAAUwD,GACrC,GAAKA,EAAK3E,KAAV,CAGA,GAAIA,GAAO2E,EAAK3E,KACZxB,EAAawB,EAAK9F,UACtB,KAAKpB,oBAAkBkH,EAAK9F,cAAgBrB,EAAuB8I,KAAK/J,WACjE+J,KAAK/J,OAAOuW,aAA2D,SAA1CxM,KAAK/J,OAAO+X,aAAaC,cACpDjY,EAAagK,KAAK/J,UAAYmD,EAAU4G,KAAK/J,WACjC+J,KAAK/J,OAAOyC,kBAAoBvB,oBAAkB0F,EAAWmD,KAAK/J,OAAO0C,sBACtFkE,EAAWmD,KAAK/J,OAAO0C,sBAAwBqH,KAAK/J,OAAOiY,qBAC1DhW,EAAgB8H,KAAK/J,OAAQ+M,EAAK3E,KAAM2B,KAAK/J,OAAOmB,KAAKgG,4BAC5CjG,oBAAkB6L,EAAKzE,KAAM,CAC3CyE,EAAKzE,IAAInE,MAAMG,QAAU,MACzB,IAAI4T,GAAUnO,KAAK/J,OAAOmB,KAAKgX,eAC1BpO,MAAK/J,OAAOmB,KAAKiX,gBAAmBlX,oBAAkB6L,EAAKzE,IAAI6K,aAAa,eAC7E+E,EAAQnV,OAAO,SAAU+D,GAAK,MAAOA,GAAE2E,MAAQsB,EAAKzE,IAAI6K,aAAa,cAAgB,GAAGkF,SAAU,GAI9G,GAAItY,EAAagK,KAAK/J,UAAYmD,EAAU4G,KAAK/J,QAAS,CACtD,GAAIsY,GAAUvO,KAAK/J,OACfuY,EAAYxO,KAAK/J,OAAOmH,wBAAwBpE,OAAO,SAAU+S,GACjE,MAAO9N,YAASsQ,EAAQ/R,UAAWuP,KAAS9N,WAASsQ,EAAQhS,gBAAiB8B,IAElF,IAAImQ,EAAU1X,OAAS,IAAM0X,EAAU,GAAGtV,eAAiB/B,oBAAkB6L,EAAKzE,KAAM,CACpF,GAAIhE,GAAUiU,EAAU,GAAG5V,SAAW,YAAc,MACpDoK,GAAKzE,IAAI2L,aAAa,QAAS,YAAc3P,EAAU,MAI9CvC,YAAU,eAAgBgL,EAAK3E,OAE5CmP,YAAUxK,EAAKzE,KAAM,gBAEpBpH,oBAAkB6L,EAAKzE,OACpByE,EAAKzE,IAAI0J,cAAc,qBACvBjF,EAAKzE,IAAI2L,aAAa,gBAAiB,QAElClH,EAAKzE,IAAI0J,cAAc,wBAC5BjF,EAAKzE,IAAI2L,aAAa,gBAAiB,SAEvClK,KAAK/J,OAAOiY,mBAAqBlO,KAAK/J,OAAOyC,gBACxCvB,oBAAkBkH,EAAK9F,cACxByK,EAAKzE,IAAInE,MAAMG,QAAU,SAMrC,IAAIyF,KAAK/J,OAAOwY,sBAAwBzO,KAAK/J,OAAOmB,KAAKqX,uBAAyBzO,KAAK/J,OAAOmB,KAAKqX,qBAAuC,eACtIzO,KAAK/J,OAAOwY,qBAAuC,gBAAMzO,KAAK/J,OAAOyY,kBAAkBC,cAAgB3O,KAAK/J,OAAO2Y,aAAaC,aAAc,CAEzH7O,KAAK/J,OAAO6Y,oBAAoB9O,KAAK/J,OAAO6Y,oBAAoBhY,OAAS,GAC3E2B,WAAauK,EAAK3E,KAAK5F,UAAatB,oBAAkB6L,EAAKzE,MAASyE,EAAKzE,IAAIa,MAAM,GAAGkG,UAAUC,SAAS,kBACxHvF,KAAK/J,OAAyB,cAAE+M,EAAKzE,KAAK,GAGlD,GAAIyB,KAAK/J,OAAO8Y,QAAS,CACrB,GAEIC,GAAYhP,IAEhBgP,GAAU/Y,OAAgC,qBAAE,WACxC+Y,EAAU/Y,OAAOkQ,QLvFP,eKuFoCnD,SAIlDhD,MAAK/J,OAAOkQ,QL3FE,eK2F2BnD,KASjD4K,EAAOzR,UAAU+C,WAAa,SAAU8D,GACpC,GAAKA,EAAK3E,KAAV,CAGA,GAEIvE,GAIAmV,EANA7X,EAAO4I,KAAK/J,OAAOmB,KACnBiH,EAAO2E,EAAK3E,KAGZ6Q,EADc/X,oBAAkBkH,EAAK8Q,aACjB9Q,EAAKtE,MAAQsE,EAAK8Q,YACtCC,EAAkB,EAElB/P,EAASW,KAAK/J,OAAOoZ,eAAerM,EAAK3D,OAAOqC,KAChD4N,EAAajR,EAAKnF,aAClBqW,EAAgBvP,KAAK/J,OAAO4I,kBAK5B/E,GAJC3C,oBAAkBkH,EAAK9F,YAIhB8F,EAAKvE,MAHLuE,EAAK9F,WAAWuB,KAa5B,KANIkG,KAAK/J,OAAOuZ,6BAA+BxP,KAAK/J,OAAOyC,cACzCsH,KAAK/J,OAAmC,wBAAE+M,EAAK3D,OAAOqC,KAGtDtK,EAAKqY,oBAAoBzM,EAAK3D,OAAOqC,QAEnC1B,KAAK/J,OAAO8I,iBAAyC,QAArBiE,EAAKzD,aACjD,mBAD0EyD,EAAKzD,aACtC,WAArByD,EAAKzD,cAA4BpI,oBAAkB6L,EAAK7D,KAAK8I,cAAc,gBA2D9FjI,KAAK6N,iBACV7N,KAAK6N,eAAiB,UA5D+F,CAMrH,IAAK,GALDrD,GAAYjB,gBAAc,OAASC,UAAW,2BAC9CkG,EAAkBnG,gBAAc,QAChCC,UAAW,iBACXmG,OAAQ,uCAEHC,EAAI,EAAGA,EAAIV,EAAKU,IACrBR,GAAmB,GACnB5E,EAAUK,YAAY6E,EAAgB5F,YAE1C,IAAI+F,GAAgB1Y,oBAAkBkH,EAAKsN,yBACNtN,EAAKvF,gBAApCuF,EAAKsN,uBASX,IARIkE,IAAiB1Y,oBAAkBkH,EAAKtF,gBAEpC8W,EADA7P,KAAK/J,OAAoB,cAAM+J,KAAK/J,OAAO6Z,kBAC5BzR,EAAKvF,kBAG0B,IAA7BuF,EAAKtF,aAAajC,SAGvC+Y,EAAc,CACdrC,YAAUxK,EAAK7D,MAAO,iBACtB6D,EAAK7D,KAAK+K,aAAa,gBAAiB7L,EAAKzF,SAAW,OAAS,QACjE,IAAImX,GAAaxG,gBAAc,QAAUC,UAAW,YAChDwG,MAAS,EAETA,GADAhQ,KAAK/J,OAAOyC,cACH2F,EAAKzF,WACTzB,oBAAkBkH,EAAK2B,KAAK/J,OAAO0C,sBAAwB0F,EAAK2B,KAAK/J,OAAO0C,uBAC5EqH,KAAK/J,OAAOiY,qBAGL7P,EAAKzF,WAAaV,EAAgB8H,KAAK/J,OAAQoI,EAAM2B,KAAK/J,OAAOmB,KAAKgG,0BAEtFoQ,YAAUuC,GAAa,EAAW,mBAAqB,sBACvDX,GAAmB,GACnB5E,EAAUK,YAAYkF,GACtBL,EAAgBtV,MAAMiQ,MAAQ,MAC9B+E,GAAmB,EACnB5E,EAAUK,YAAY6E,EAAgB5F,kBAEjCoF,IAAQA,IAAQ7Q,EAAKtE,SAE1BqV,GAAmB,GACnB5E,EAAUK,YAAY6E,EAAgB5F,aACtCU,EAAUK,YAAY6E,EAAgB5F,aAM1CmF,GAAc1F,gBAAc,QAAUC,UAAW,eAC7CxJ,KAAK/J,OAAOmU,gBACZ6E,EAAY7U,MAAMiQ,MAAQ,eAAiB+E,EAAkB,OAEjE5B,YAAUxK,EAAK7D,MAAO,iBAAmBrF,EAAQ,QAAUuE,EAAKtE,OAChEiG,KAAKiQ,eAAejN,EAAMiM,GAC1BzE,EAAUK,YAAYoE,GACtBjM,EAAK7D,KAAK0L,YAAYL,GAM1B,GADcpT,EAAK8Y,4BAA8B,GAAK9Y,EAAK+Y,6BAA+B,EAgBrF,CACD,GAAIC,GAAqBhZ,EAAKiZ,wBAC1BC,EAAoBlZ,EAAKmZ,uBACzBC,EAAiBpZ,EAAKqZ,mBACrBL,GAAmBtZ,OAAS,GAAMsZ,EAAmB,GAAGM,QAAU1N,EAAK3D,OAAOqR,MAC/ElD,YAAUxK,EAAK7D,MAAO,iBAAmBrF,EAAQ,QAAUuE,EAAKtE,OAE1DuW,EAAkBxZ,OAAS,GAAMwZ,EAAkB,GAAGI,QAAU1N,EAAK3D,OAAOqR,MAClFlD,YAAUxK,EAAK7D,MAAO,iBAAmBrF,EAAQ,QAAUuE,EAAKtE,OAE1DyW,EAAe1Z,OAAS,GAAM0Z,EAAe,GAAGE,QAAU1N,EAAK3D,OAAOqR,OAC5ElD,YAAUxK,EAAK7D,MAAO,iBAAmBrF,EAAQ,QAAUuE,EAAKtE,WAzBhEwV,GAAgBvP,KAAK/J,OAAO8I,iBAAmBwQ,EAAgB,GAC/DnY,EAAKqY,oBAAoBzM,EAAK3D,OAAOqC,OAAS6N,EAC9C/B,YAAUxK,EAAK7D,MAAO,iBAAmBrF,EAAQ,QAAUuE,EAAKtE,OAE3DwV,EAAgBvP,KAAK/J,OAAO8I,iBAAmBwQ,EAAgB,IACnEnY,EAAKqY,oBAAoBzM,EAAK3D,OAAOqC,OAAS6N,GACxCnY,EAAKqY,oBAAoBzM,EAAK3D,OAAOqC,OAAS6N,EAAgB,GACrE/B,YAAUxK,EAAK7D,MAAO,iBAAmBrF,EAAQ,QAAUuE,EAAKtE,OAE3DwV,IAAkBvP,KAAK/J,OAAO8I,iBAAmBwQ,EAAgB,GACtEnY,EAAKqY,oBAAoBzM,EAAK3D,OAAOqC,OAAS1B,KAAK/J,OAAO8I,gBAAkB,GAC5EyO,YAAUxK,EAAK7D,MAAO,iBAAmBrF,EAAQ,QAAUuE,EAAKtE,MAiBxE,KAAK5C,oBAAkBkI,IAAWA,EAAOpI,eACrC+I,KAAK/J,OAAO0a,OAAO,iBAAkB3N,GACjChD,KAAK/J,OAAOmU,eAAe,CAC3B,GAAIwG,GAAkB5N,EAAK7D,KAAKsG,iBAAiB,YAAY,EAE7D2J,IADYrY,SAAS6Z,EAAgBxW,MAAMiQ,MAAO,IAElD+E,GAAmB,IAEfH,EADA7X,EAAKqY,oBAAoBzM,EAAK3D,OAAOqC,OAAS1B,KAAK/J,OAAO8I,gBAC5CiE,EAAK7D,KAAK8I,cAAc,eAGxBjF,EAAK7D,KAAK8I,cAAc,oBAE9B7N,MAAMiQ,MAAQ,eAAiB+E,EAAkB,MAGrE,GAAIE,EAAY,CACZ9B,YAAUxK,EAAK7D,MAAO,gBACtB,IAAI0R,GAAc7Y,YAAUgL,EAAK3D,OAAOqR,MAAO1N,EAAK3E,KACpDwS,GAAc1Z,oBAAkB0Z,GAAe,KAAOA,EACR,MAA1C7N,EAAK7D,KAAK8I,cAAc,eACxBjF,EAAK7D,KAAK8I,cAAc,eAAe0C,UAAYkG,EAG/C7N,EAAK3D,OAAOyR,SACZ9N,EAAK7D,KAAKwL,UAAY,KAGtB3H,EAAK7D,KAAKwL,UAAYkG,EAIlC7Q,KAAK/J,OAAa,KAAI+M,GACjB7L,oBAAkB6I,KAAK/J,OAAO8a,eAAkB/Q,KAAK/J,OAAe,SAChE+J,KAAK/J,iBACL+M,EAAK3D,OAAiB,WAC3BW,KAAK/J,OAAOkQ,QL7PG,gBK6P2BnD,KAGlD4K,EAAOzR,UAAU8T,eAAiB,SAAUjN,EAAMiM,GAC9C,GACI+B,GADc/S,WAAS,cAAe+B,KAAK/J,QAClB+J,KAAK/J,OAAO8I,iBAErCkS,EAAWjO,EAAK3D,OAAOvF,KACvB3C,qBAAkB6Z,EAAWN,QAC7B1N,EAAK7D,KAAK+K,aAAa,gBAAiB+G,EAAW,IAEnDD,EAAWN,QAAU1N,EAAK3D,OAAOqR,OAAUvZ,oBAAkB6Z,EAAWF,YAExE9N,EAAK3D,OAAOyR,SAAWE,EAAWF,SAClC9N,EAAK3D,OAAsB,WAAI6R,mBAAiBlO,EAAK3D,OAAOyR,UAC5D9N,EAAK7D,KAAKmG,UAAUsE,IAAI,kBAE5B,IAAIuH,GAAwD,MAA1CnO,EAAK7D,KAAK8I,cAAc,eACtCjF,EAAK7D,KAAK8I,cAAc,eAAe0C,UAAY3H,EAAK7D,KAAKwL,SACjE,IAAsC,gBAA1B3H,GAAK3D,iBAAiCW,KAAK6N,eACnDuD,iBAAenC,EAAajP,KAAK6N,gBACjC7N,KAAK6N,eAAiB,KACtB7K,EAAK7D,KAAKwL,UAAY,OAErB,IAAI3H,EAAK7D,KAAKmG,UAAUC,SAAS,kBAAmB,CACrD,GAAI1N,GAAMmL,EAAK7D,KAAKkS,SAASva,OACzBwa,EAAStR,KAAK/J,OAAOsb,QAAQC,GAAKxO,EAAK3D,OAAOqC,GAClD,IAAIsP,EAAWN,QAAU1N,EAAK3D,OAAOqR,OAAUvZ,oBAAkB6Z,EAAWF,UA0BxE,KAAa,EAAOjZ,EAAKA,EAAMmL,EAAK7D,KAAKkS,SAASva,OAC9CmY,EAAYpE,YAAY7H,EAAK7D,KAAKkS,SAASta,UADlC,GAC6CC,WAAY,UA3Ba,CAGnF,GAAIgJ,KAAK/J,OAAO8Y,SAA6C,gBAA1B/L,GAAK3D,gBAA+B,CACnE2D,EAAK3D,OAAsB,WAAE2D,EAAK3E,KAAM2B,KAAK/J,OAAQ,iBAAkBqb,EAAQ,KAAM,KAAMrC,GACvF9X,oBAAkB6I,KAAK/J,OAAOmB,KAAiB,WAC/C4I,KAAK/J,OAAOmB,KAAiB,QAAI4I,KAAK/J,OAAmB,SAE7D+J,KAAK/J,OAAO0a,OAAO,sBAAuB3Q,KAAK/J,OAAmB,QAElE,IAAIwb,GAAYzR,IAEhByR,GAAUxb,OAAgC,qBAAE,WACxCwb,EAAUxb,OAAOkQ,QLrSd,gBKqS4CnD,SAGlD,CACD,GACI0O,GAAS1O,EAAK3D,OAAsB,WAAErD,UAASlC,MAAS,IAAMkJ,EAAK3E,MAAO2B,KAAK/J,OAAQ,WAAYqb,EAAQtR,KAAK/J,OAAe,iBACnImb,kBAAenC,EAAayC,SAEzB1O,GAAK3D,OAAOyR,eACZ9N,GAAK3D,OAAsB,WAClC2D,EAAK7D,KAAKwL,UAAY,QAS1BsE,GAAYtE,UAAYwG,EACxBnO,EAAK7D,KAAKwL,UAAY,IAQ9BiD,EAAOzR,UAAUwV,gCAAkC,SAAUC,GACzD,GAAIpN,GAAQxE,IACRA,MAAK/J,OAAO8Y,SAEZ/O,KAAK/J,OAAO4b,eAAe,sBAAmBC,GAAW,WAMrD,IAAK,GAHD3D,GAAU3J,EAAMvO,OAAOmB,KAAKgX,gBAC5B2D,EAASvN,EAAMvO,OAAOmB,KAAK4a,iBAC3BC,EAAYzN,EAAMvO,OAAOmB,KAAK8a,yBAAyBN,GAClDjY,EAAI,EAAGA,EAAIwU,EAAQrX,OAAQ6C,IAChC,GAAIwU,EAAQpX,SAAS4C,EAAE3C,WAAY,KAAKmb,YAAchb,oBAAkBgX,EAAQpX,SAAS4C,EAAE3C,WAAY,KAAK8C,OAAQ,CAChH,GAAIqF,GAAOgP,EAAQpX,SAAS4C,EAAE3C,WAAY,KAAe,MAAED,SAASkb,EAAUjb,WAAY,KACtFob,EAAe,GAAIC,gBAAa7N,EAAMvO,OAAOmB,KAAMoN,EAAMvO,OAAOmB,KAAKmN,gBACrE+N,EAAK9N,EAAMvO,OAAOsc,iBAAiBpE,EAAQpX,SAAS4C,EAAE3C,WAAY,KAAK8C,MAAOmY,EAAYF,EAC9FK,GAAaI,UAAUF,EAAInT,EAAMgP,EAAQpX,SAAS4C,EAAE3C,WAAY,KAAKqH,MAAQvE,MAAOqU,EAAQpX,SAAS4C,EAAE3C,WAAY,KAAgB,OACnI,IAAIyb,GAAWjO,EAAMvO,OAAOwI,UAAU1H,SAAS4C,EAAE3C,WAAY,KACxDoI,MAAMrI,SAASkb,EAAUjb,WAAY,IAC1CwN,GAAMtF,YAAab,KAAM8P,EAAQpX,SAAS4C,EAAE3C,WAAY,KAAKqH,KAAMc,KAAMsT,EAAUpT,OAAQF,EAAKE,aAMpHuO,EAAOzR,UAAU2R,qBAAuB,SAAU9K,GAC9ChD,KAAK6N,eAAiB7K,EAAK8N,UAG/BlD,EAAOzR,UAAU4R,oBAAsB,SAAU/K,EAAM0P,GAGnD1S,KAAK/J,OAAmB,QAAI+M,EAC5BhD,KAAK/J,OAAO0a,OAAO,sBAAuB3Q,KAAK/J,OAAmB,SAClE+J,KAAK/J,OAAgC,qBAAEyc,IAE3C9E,EAAOzR,UAAU2K,QAAU,WACvB9G,KAAK/J,OAAOmB,KAAKyQ,IAAI,kBAAmB7H,KAAK8N,sBAC7C9N,KAAK/J,OAAOmB,KAAKyQ,IAAI,sBAAuB7H,KAAK+N,sBAE9CH,KCtWP+E,GAAkC,WAClC,QAASA,GAAiBvb,GACtB4I,KAAK4S,aAAe,eACpB5S,KAAK/J,OAASmB,EACd4I,KAAK6S,eACL7S,KAAK8S,WACL9S,KAAK+S,iBACL/S,KAAKgT,aAAe,EACpBhT,KAAKiT,cACLjT,KAAKkT,cAAe,EACpBlT,KAAKqH,mBACLrH,KAAKmT,eACLnT,KAAKpF,iBAAmBzD,oBAAkB6I,KAAK/J,OAAOsG,iBA4zB1D,MAtzBAoW,GAAiBxW,UAAUkL,iBAAmB,WAC1CrH,KAAK/J,OAAOqR,GAAG,oBAAqBtH,KAAKoT,uBAAwBpT,MACjEA,KAAK/J,OAAOmB,KAAKkQ,GAAG,gBAAiBtH,KAAKqT,aAAcrT,MACxDA,KAAK/J,OAAOqR,GAAG,eAAgBtH,KAAKsT,WAAYtT,MAChDA,KAAK/J,OAAOqR,GNUM,eMVkBtH,KAAKuT,qBAAsBvT,MAC/DA,KAAK/J,OAAOqR,GAAG,gBAAiBtH,KAAKwT,cAAexT,OAMxD2S,EAAiBxW,UAAUwL,oBAAsB,WACzC3H,KAAK/J,OAAO2R,cAGhB5H,KAAK/J,OAAO4R,INDM,eMCmB7H,KAAKuT,sBAC1CvT,KAAK/J,OAAO4R,IAAI,oBAAqB7H,KAAKoT,wBAC1CpT,KAAK/J,OAAO4R,IAAI,eAAgB7H,KAAKsT,YACrCtT,KAAK/J,OAAO4R,IAAI,gBAAiB7H,KAAKwT,eACtCxT,KAAK/J,OAAOmB,KAAKyQ,IAAI,gBAAiB7H,KAAKqT,gBAQ/CV,EAAiBxW,UAAU2K,QAAU,WACjC9G,KAAK2H,uBAMTgL,EAAiBxW,UAAUsX,SAAW,WAClC,MAAMzT,MAAK/J,OAAOC,qBAAsBC,gBAc5Cwc,EAAiBxW,UAAUuX,kBAAoB,SAAUrV,GACrD,GAAImG,GAAQxE,IAIZ,IAHAA,KAAK/J,OAAO6G,SAAyC,IAA7BhF,OAAOC,KAAKsG,GAAMvH,QAAkBkJ,KAAK/J,OAAOC,qBAAsBC,kBAC1F6J,KAAK/J,OAAOC,WAChB8J,KAAK/J,OAAO4G,cACP7G,EAAagK,KAAK/J,UAAYmD,EAAU4G,KAAK/J,SAAYoI,YAAgBlI,kBAAiBkI,YAAgBtC,QAAQ,CACnH,GAAI1C,GAAK2G,KAAK/J,OAAOC,UACrB,IAAI8J,KAAK/J,OAAOsG,gBAAiB,CAG7B,GAFAyD,KAAK/J,OAAO0d,MAAQxc,oBAAkB6I,KAAK/J,OAAO0d,OAC9C,GAAIC,SAAU5T,KAAK/J,OAAO0d,MAC1B3T,KAAK/J,OAAOsG,gBAAiB,CAC7B,GAAIsX,GAAY7T,KAAK/J,OAAO0d,MAAMG,OAAO9a,OAAO,SAAU+a,GAAS,MAAqB,cAAdA,EAAMzc,KAC5E0I,MAAK/J,OAAOyC,gBAAkBmb,EAAU/c,SACxCkJ,KAAK/J,OAAO0d,MAAMK,MAAMhU,KAAK/J,OAAOsG,gBAAiB,QAAS,MAC9DyD,KAAK/J,OAAO0d,MAAMM,UAAU,YAAajU,KAAK/J,OAAOuG,YAG7D,IAAKwD,KAAK/J,OAAOie,gBAAiB,CAC9B,GAAIC,GAAMnU,KAAK/J,OAAO0d,MAAMS,OAC5BD,GAAIE,YACJF,EAAMA,EAAI3N,QAAQxG,KAAK/J,OAAOsG,mBAC1B7F,iBAAkB,EACtB2C,EAAGib,aAAaH,GAAKI,KAAK,SAAUxX,GAChCyH,EAAMqO,YAAc2B,WAASC,SAAS1X,EAAE2U,OAAQlN,EAAMvO,OAAOsG,iBAAiB,EAQlE,MANRQ,EAAE2U,OACI,EAGA,KAGNgD,WAAS,+BAA+B,EAAMlQ,EAAMvO,QAC/CkB,oBAAkBqN,EAAMmQ,mBACzBD,WAAS,UAAU,EAAOlQ,EAAMmQ,iBAChC1W,WAAS,oBAAqBuG,EAAMvO,QAAQ2e,mBAAmBpQ,EAAMmQ,iBACrEnQ,EAAMmQ,gBAAkB,MAE5BnQ,EAAMvO,OAAOmB,KAAKyd,uBAM7BxW,aAAgBtC,QACrBiE,KAAK8U,gBAAgBzW,IAG7BsU,EAAiBxW,UAAU2Y,gBAAkB,SAAUzW,GAGnD,GAFA2B,KAAK+S,iBACL/S,KAAK8S,WACA9S,KAAK/J,OAAOuG,UAKb,IAAK,GADDzE,GAAOD,OAAOC,KAAKsG,GACdzH,EAAI,EAAGA,EAAImB,EAAKjB,OAAQF,IAAK,CAClC,GAAIme,GAAW1W,EAAKtH,SAASH,EAAEI,WAAY,IAC3CgJ,MAAK+S,cAAc9a,KAAK+D,YAAW+Y,IAC9B5d,oBAAkB4d,EAAS/U,KAAK/J,OAAOuG,aACxCwD,KAAK8S,QAAQ7a,KAAK8c,EAAS/U,KAAK/J,OAAOuG,gBAR/CwD,MAAK+S,cAAgB1U,CAYzB,IAAI2B,KAAKpF,gBAAiB,CAItB,IAAK,GAHDoa,MACAC,EAAc,GAAI9e,eAAY6J,KAAK+S,eAAemC,cAAa,GAAItB,UAClEuB,MAAMnV,KAAK/J,OAAOsG,kBACd3F,EAAI,EAAGA,EAAIqe,EAAYne,OAAQF,IAAK,CACzC,GAAIwe,GAAYH,EAAYle,SAASH,EAAEI,WAAY,KAC/C8C,EAAQkG,KAAK8S,QAAQ1U,QAAQgX,EAAU9d,IAC3C,KAAKH,oBAAkBie,EAAU9d,MACzBwC,GAAS,EADjB,CAEQ,GAAIiN,GAAaqO,EAAgB,KACjCpV,MAAK+S,cAAchc,SAAS+C,EAAM9C,WAAY,KAAKgJ,KAAK/J,OAAOyG,cAAgBqK,MAIvFiO,GAAS/c,KAAK4J,MAAMmT,EAAUI,EAAUC,OAE5CrV,KAAK+S,cAAgB/S,KAAKsV,oBAAoBN,GAElD,GAAKld,OAAOC,KAAKiI,KAAK+S,eAAejc,OAMjCkJ,KAAKuV,cAAcvV,KAAK+S,mBANiB,CACzC,GACIyC,KAAkBxV,KAAK/J,OAAOC,qBAAsBC,iBAAgB6J,KAAK/J,OAAmB,OAChG+J,MAAK/J,OAAO6G,SAAW0Y,EAAiBxV,KAAK/J,qBAKjD+J,KAAKgT,aAAe,GAYxBL,EAAiBxW,UAAUmZ,oBAAsB,SAAUN,GAEvD,IADA,GAAItD,MACG1R,KAAK+S,cAAcjc,OAAS,GAAKke,EAASle,OAAS,GAAG,CACzD,GAAIgD,GAAQkb,EAAS5W,QAAQ4B,KAAK+S,cAAc,KACjC,IAAXjZ,EACAkG,KAAK+S,cAAc0C,SAGnB/D,EAAOzZ,KAAK+H,KAAK+S,cAAc0C,SAC/BT,EAASvY,OAAO3C,EAAO,IAG/B,MAAO4X,IASXiB,EAAiBxW,UAAUiX,uBAAyB,SAAUpQ,GAEtDhN,EAAagK,KAAK/J,SAAW+J,KAAK/J,OAAO8H,sBAA8D,kBAAtCiF,EAAoB,WAAEzD,aACvFS,KAAK/J,OAAO4e,aAEhB,IAAIld,GAAUqL,EAAK0O,MAInB,IAHI1b,EAAagK,KAAK/J,SAAW+J,KAAK/J,OAAO8H,uBAA+D,kBAAtCiF,EAAoB,WAAEzD,aAAoE,gBAAjCyD,EAAoB,WAAE9H,QAAmE,KAAvC8H,EAAoB,WAAE0S,gBACnM1V,KAAK/J,OAAO0d,MAAMgC,YAEjB3V,KAAK/J,OAAOie,iBAAoBlU,KAAK6S,YAAY/b,QAChDkJ,KAAK/J,OAAO6Z,kBAKd,GAAK9P,KAAK/J,OAAO6Z,kBA0CZ,CAGI3Y,oBAAkBQ,IAAeqI,KAAK/J,0BAA6BS,EAAgBsJ,KAAK/J,UAAYkB,oBAAkB6I,KAAK/J,OAAuB,YAAmB,eACpKD,EAAagK,KAAK/J,SAAW+J,KAAK/J,OAAO6Z,mBAAqB9M,EAAoB,WAAE4S,kBAAoB5V,KAAK/J,OAAO8H,sBACtHiC,KAAK0T,kBAAkB/b,OAT3B,KAAK,GADDke,GAAS7V,KACJ+L,EAAM,EAAGA,EAAMpU,EAAQb,OAAQiV,KArC1B,SAAUA,GAKpB,GAJIrV,EAAgBmf,EAAO5f,SAAW0B,EAAQZ,SAASgV,EAAI/U,WAAY,KAAK8B,iBACxE+c,EAAO5f,OAAOyC,gBACdf,EAAQZ,SAASgV,EAAI/U,WAAY,KAAK4B,UAAW,GAEjD5C,EAAa6f,EAAO5f,SAAW4f,EAAO5f,OAAO8H,qBAAsB,CACnE,GAAI+X,MACAC,EAAWF,EAAO5f,MACtB0B,GAAQqB,OAAO,SAAU+D,GACjBA,EAAE,GAAKgZ,EAASxZ,mBAAqB5E,EAAQZ,SAASgV,EAAI/U,WAAY,KAAK,GAAK+e,EAASvZ,YACzFsZ,EAAe7d,KAAK8E,KAGxB+Y,EAAehf,OACfa,EAAQZ,SAASgV,EAAI/U,WAAY,KAAK4B,UAAW,EAE5CjB,EAAQZ,SAASgV,EAAI/U,WAAY,KAAK8B,kBAC3CnB,EAAQZ,SAASgV,EAAI/U,WAAY,KAAK4B,UAAW,GAGrDzB,oBAAkBQ,EAAQZ,SAASgV,EAAI/U,WAAY,KAAK8C,SACxDnC,EAAQZ,SAASgV,EAAI/U,WAAY,KAAKgD,SAAWgC,YAAWrE,EAAQZ,SAASgV,EAAI/U,WAAY,MAC7FW,EAAQZ,SAASgV,EAAI/U,WAAY,KAAKyB,SAAWud,SAAOH,EAAO5f,OAAOsb,QAAQC,GAAK,UACnFkD,WAAS,sBAAwB/c,EAAQZ,SAASgV,EAAI/U,WAAY,KAAKyB,SAAUd,EAAQZ,SAASgV,EAAI/U,WAAY,KAAM6e,EAAO5f,QAC/H0B,EAAQZ,SAASgV,EAAI/U,WAAY,KAAK+C,MAAQ,EAC1C/D,EAAa6f,EAAO5f,SAAW4f,EAAO5f,OAAO8H,sBAAwBpG,EAAQZ,SAASgV,EAAI/U,WAAY,KAAK,GAAK6e,EAAO5f,OAAOsG,kBAAoE,IAAhD5E,EAAQZ,SAASgV,EAAI/U,WAAY,KAAK+C,QACxLpC,EAAQZ,SAASgV,EAAI/U,WAAY,KAAK+C,MAAQpC,EAAQZ,SAASgV,EAAI/U,WAAY,KAAK+C,MAAQ,GAEhGpC,EAAQZ,SAASgV,EAAI/U,WAAY,KAAK8C,MAAQmc,KAAKC,KAAqB,IAAhBD,KAAKE,WACxDxe,EAAQZ,SAASgV,EAAI/U,WAAY,KAAK6e,EAAO5f,OAAOie,mBAC2C,IAAhG2B,EAAOhD,YAAYzU,QAAQzG,EAAQZ,SAASgV,EAAI/U,WAAY,KAAK6e,EAAO5f,OAAOuG,eAC/E7E,EAAQZ,SAASgV,EAAI/U,WAAY,KAAK8B,iBAAkB,GAE5DnB,EAAQZ,SAASgV,EAAI/U,WAAY,KAAKmT,cAAgB,YAKlD4B,OA3ChB/L,MAAK2U,gBAAkB3R,EACvB0R,WAAS,UAAU,EAAM1R,EA+D7B,IATIhN,EAAagK,KAAK/J,SAAW+J,KAAK/J,OAAO6Z,mBAAqB9M,EAAoB,WAAE4S,kBAAoB5V,KAAK/J,OAAO8H,qBACpHiF,EAAK0O,OAAS/Z,EAET3B,EAAagK,KAAK/J,SAAW+J,KAAK/J,OAAO8H,uBAAyBiC,KAAK/J,OAAO6Z,kBACnF9M,EAAK0O,OAAS/Z,EAGdqL,EAAK0O,OAAS1R,KAAK/J,OAAO6Z,kBAAoB9P,KAAK/J,OAAO6G,SAAWnF,EAErE3B,EAAagK,KAAK/J,SAAW+J,KAAK/J,OAAO8H,sBAAwBiC,KAAK/J,OAAO6Z,mBAC1E9P,KAAK/J,OAAOmB,KAAKgf,WAAWtf,QAA2D,IAAjDkJ,KAAK/J,OAAOmB,KAAK+G,aAAatH,QAAQC,QACzB,IAAnDkJ,KAAK/J,OAAOmB,KAAKK,eAAeZ,QAAQC,SAAiBkJ,KAAK/J,OAAOmB,KAAKC,eAAeC,IAAIR,OAAQ,CACxG,GACIuf,GAAerT,EAAe,MAAEqR,QAAQrb,OAAO,SAAUsd,GAAK,MAAgB,iBAATA,EAAEC,IAC3EvT,GAAK0O,OAAS1R,KAAK/J,OAAOugB,cAAcC,sBAAsBJ,EAAcrW,KAAK/J,OAAO6G,UAAU,GAEtGkD,KAAK/J,OAAO0a,OAAO,gBAAiB3N,IAaxC2P,EAAiBxW,UAAUoX,qBAAuB,SAAUmD,EAAYC,GACpE,GAAIC,GAAW5W,KAAK/J,OAAOwI,SAE3B,IAAIuB,KAAK/J,OAAO8a,YAAa,CACzB,GAAI/L,GAAOhF,KAAK/J,OAAOyY,kBAAkB1J,IACzC4R,MAAcpR,MAAMnJ,KAAK2I,GAE7B,GAAI6R,EACJ,IAAIH,EAAW1R,KAAKlO,OAAS,EAAG,CACvB6f,IACDD,EAAWve,OAAOS,UAAW,EAEjC,KAAK,GAAIhC,GAAI,EAAGA,EAAI8f,EAAW1R,KAAKlO,OAAQF,IAAK,CAE7C,GADA8f,EAAW1R,KAAKjO,SAASH,EAAEI,WAAY,KAAKoD,MAAMG,QAAU,YACxDyF,KAAK/J,OAAO6Z,kBAAmB,CAC/B,GAAIgH,GAAYJ,EAAW1R,KAAKjO,SAASH,EAAEI,WAAY,KAAK+f,uBAAuB,sBAAsB,EACzGF,GAAc7W,KAAK/J,OAAO8a,YACtB/Q,KAAK/J,OAAOmB,KAAKgG,wBAAwBsZ,EAAW1R,KAAKjO,SAASH,EAAEI,WAAY,KAAK4P,UACrF5G,KAAK/J,OAAOmB,KAAK4f,oBAAoBN,EAAW1R,KAAKjO,SAASH,EAAEI,WAAY,KAAKoS,aAAa,aAAa/K,MAC1GlH,oBAAkB2f,IAAcD,EAAYje,WAC7C4U,YAAUsJ,GAAY,oBACtBvM,eAAauM,GAAY,sBAE7B,IAAIG,OACJA,EAAYL,EAAS5d,OAAO,SAAUyH,GAClC,MAAOA,GAAEwH,cAAc,kBAAoB4O,EAAY/c,MAAQ,SAAW+c,EAAY9c,MAAQ,OAEpFjD,QAAU+f,EAAYje,UAChCoH,KAAKuT,sBAAuBpb,OAAQ0e,EAAa7R,KAAMiS,EAAWC,UAAWR,EAAWQ,YAAa,GAG7G,GAAIC,GAAcT,EAAW1R,KAAKjO,SAASH,EAAEI,WAAY,KAAKiR,cAAc,uBACvE9Q,qBAAkBggB,IACnBnX,KAAK/J,OAAOmB,KAAKggB,gBAAgBpH,OAAOmH,QAKhDnX,MAAKqX,sBAAuBnc,OAAQwb,EAAoB,KAAGve,OAAQue,EAAWve,OAAQ6M,KAAM0R,EAAW1R,KAAMkS,UAAWR,EAAWQ,aAG3IvE,EAAiBxW,UAAUkb,qBAAuB,SAAUX,GACxD,GAAIlS,GAAQxE,KACRgD,GAASzE,IAAKmY,EAAWQ,UAAW7Y,KAAMqY,EAAWve,QACrDkB,EAAK2G,KAAK/J,OAAOC,WACjBie,EAAMnU,KAAK/J,OAAOmB,KAAKkgB,gBAAgBC,gBACvCC,EAAcrD,EAAIE,QAAQrb,OAAO,SAAU+D,GAAK,MAAgB,WAATA,EAAEwZ,IAA4B,YAATxZ,EAAEwZ,IAGlF,IAFApC,EAAIE,QAAUmD,EACdrD,EAAIzd,iBAAkB,EAClBsJ,KAAK/J,OAAO8H,sBAA8C,iBAAtB2Y,EAAWxb,OAC/CiZ,EAAIsD,KAAKzX,KAAK/J,OAAO+X,aAAa0J,WAC9BC,MACS1f,KAAK,kBAAmBlB,SAAS2f,EAAWve,OAAO6H,KAAK/J,OAAOuG,WAAY,IAAIxF,YAC5Fmd,EAAInE,OAAO2H,OAEV,IAAI3X,KAAK/J,OAAO8H,sBAA8C,aAAtB2Y,EAAWxb,OAAuB,CAC3EiZ,EAAIsD,KAAKzX,KAAK/J,OAAOmB,KAAK4W,aAAa0J,SACvC,IAAIC,KACJA,GAAa1f,KAAK,mBAAoBlB,SAAS2f,EAAWve,OAAO6H,KAAK/J,OAAOuG,WAAY,IAAIxF,YAC7Fmd,EAAInE,OAAO2H,GAGf,GADAxD,EAAIH,MAAMhU,KAAK/J,OAAOsG,gBAAiB,QAASma,EAAWve,OAAO6H,KAAK/J,OAAOuG,YACpD,iBAAtBka,EAAWxb,QAA6B8E,KAAK/J,OAAOmB,KAAKgU,cAAgBpL,KAAK/J,OAAOmB,KAAKgU,aAAoB,MAAG,CACjH,GAAIwM,GAAY5X,KAAK/J,OAAOmB,KAAKkgB,gBAAgBC,gBAAgBlD,QAAQrb,OAAO,SAAU+D,GAAK,MAAgB,WAATA,EAAEwZ,QAA6C,KAAnBxZ,EAAEA,EAAE8a,YACtI1D,GAAIE,QAAQpc,KAAK2f,EAAU,IAE/BE,cAAY9X,KAAK/J,OAAOsb,SACxBlY,EAAGib,aAAaH,GAAKI,KAAK,SAAUxX,GAChC,GAIIgb,GADAngB,EAAQ4M,EAAMvO,OAAOmB,KAAK8U,gBAAgB1G,QAE1ChJ,EAAYgI,EAAMvO,OAAOuG,SAC7B,IAAIgI,EAAMvO,OAAgB,UAAMuO,EAAMvO,OAAO6Z,mBAAqBtL,EAAMvO,OAAOie,iBAC3E,IAAStd,EAAI,EAAGA,EAAI4N,EAAMvO,OAAOmB,KAAK8U,gBAAgBpV,OAAQF,IAC1D,GAAI8f,EAAWve,OAAOqE,KAAegI,EAAMvO,OAAOmB,KAAK8U,gBAAgBtV,GAAG4F,GAAY,CAClFub,EAAMnhB,CACN,YAKRmhB,GAAMngB,EAAMwG,QAAQsY,EAAWve,OAEnC,IAAIqM,EAAMvO,OAAO8H,uBAA+C,aAAtB2Y,EAAWxb,QAA+C,iBAAtBwb,EAAWxb,QAA4B,CACjHtD,IACA,KAAShB,EAAI,EAAGA,EAAImhB,EAAKnhB,IACrBgB,EAAMK,KAAKuM,EAAMvO,OAAOmB,KAAK8U,gBAAgBnV,SAASH,EAAEI,WAAY,OAG/D,IAAT+gB,GACAvT,EAAMvO,OAAOmB,KAAKgX,gBAAgBvB,QAAQ,SAAU7H,GAC5CA,EAAK3G,KAAK5F,WAAaie,EAAWve,OAAOM,WACzCsf,EAAM/S,EAAKlL,QAIvB,IAAIke,GAAYhgB,YAAU,mBAAoB+E,GAC1C2U,EAAS3U,EAAE2U,OACXuG,IACJ,IAA0B,iBAAtBvB,EAAWxb,QAA6BsJ,EAAMvO,OAAOmB,KAAKgU,cAAgB5G,EAAMvO,OAAOmB,KAAKgU,aAAoB,MAAG,CACnH,IAASxU,EAAI,EAAGA,EAAIgB,EAAMd,OAAQF,IAC1BkB,OAAOqE,UAAUC,eAAeC,KAAKzE,EAAMb,SAASH,EAAEI,WAAY,KAAMwN,EAAMvO,OAAOsG,kBAA6F,OAAzE3E,EAAMb,SAASH,EAAEI,WAAY,KAAK,GAAKwN,EAAMvO,OAAOsG,kBAAyE,IAA5C3E,EAAMb,SAASH,EAAEI,WAAY,KAAK+C,QAC5NnC,EAAM6E,OAAO7F,EAAG,GAChBA,IAGR,KAASA,EAAI,EAAGA,EAAI8a,EAAO5a,OAAQF,IAC3B8f,EAAWve,OAAO,GAAKqM,EAAMvO,OAAOuG,aAAekV,EAAO3a,SAASH,EAAEI,WAAY,KAAK,GAAKwN,EAAMvO,OAAOuG,YACxGka,EAAWve,OAAO,GAAKqM,EAAMvO,OAAOuG,aAAekV,EAAO3a,SAASH,EAAEI,WAAY,KAAK,GAAKwN,EAAMvO,OAAOsG,kBACpGzE,OAAOqE,UAAUC,eAAeC,KAAKqV,EAAQ9a,IAC7CqhB,EAAgBhgB,KAAKyZ,EAAO3a,SAASH,EAAEI,WAAY,KAI/D0a,GAASuG,EAEb,GAAIzT,EAAMvO,OAAO8H,sBAA8C,iBAAtB2Y,EAAWxb,OAA2B,CAC3Ewb,EAAWve,OAAOY,eAClB,KAASnC,EAAI,EAAGA,EAAI8a,EAAO5a,OAAQF,IAC3B8f,EAAWve,OAAO,GAAKqM,EAAMvO,OAAOuG,aAAekV,EAAO3a,SAASH,EAAEI,WAAY,KAAK,GAAKwN,EAAMvO,OAAOuG,YACxGka,EAAWve,OAAO,GAAKqM,EAAMvO,OAAOuG,aAAekV,EAAO3a,SAASH,EAAEI,WAAY,KAAK,GAAKwN,EAAMvO,OAAOsG,kBAAoBzE,OAAOqE,UAAUC,eAAeC,KAAKqV,EAAQ9a,IACzK8f,EAAWve,OAAOY,aAAad,KAAKyZ,EAAO3a,SAASH,EAAEI,WAAY,UAK1E0f,GAAWve,OAAOY,aAAe2Y,CAErC,KAAK,GAAIjR,GAAI,EAAGA,EAAIiR,EAAO5a,OAAQ2J,IAAK,CACpC,GAAI+D,EAAMvO,OAAO8H,sBAAwB2T,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK,GAAKwN,EAAMvO,OAAOuG,aAAeka,EAAWve,OAAO,GAAKqM,EAAMvO,OAAOuG,YAAoC,iBAAtBka,EAAWxb,OACtKsJ,EAAMvO,OAA8B,mBAAEgC,KAAKye,EAAWve,YAErD,IAAIqM,EAAMvO,OAAO8H,sBAAwB2T,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK,GAAKwN,EAAMvO,OAAOuG,aAAeka,EAAWve,OAAO,GAAKqM,EAAMvO,OAAOuG,YAAoC,aAAtBka,EAAWxb,OAC3K,IAAStE,EAAI,EAAGA,EAAI4N,EAAMvO,OAA8B,mBAAEa,OAAQF,IAC1D8f,EAAWve,OAAO,GAAKqM,EAAMvO,OAAOuG,aAAegI,EAAMvO,OAA8B,mBAAEc,SAASH,EAAEI,WAAY,KAAK,GAAKwN,EAAMvO,OAAOuG,YACvIgI,EAAMvO,OAA8B,mBAAEwG,OAAO7F,EAAG,EAK5D,IADA8a,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAKgD,SAAWgC,YAAW0V,EAAO3a,SAAS0J,EAAEzJ,WAAY,MACnF0a,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK,GAAKwN,EAAMvO,OAAOsG,kBAAoBiI,EAAMvO,OAAO8H,sBAAwByG,EAAMvO,OAA8B,mBAAEa,OACpJ,IAASF,EAAI,EAAGA,EAAI4N,EAAMvO,OAA8B,mBAAEa,OAAQF,IAC1D8a,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK,GAAKwN,EAAMvO,OAAOsG,mBAAqBiI,EAAMvO,OAA8B,mBAAEc,SAASH,EAAEI,WAAY,KAAK,GAAKwN,EAAMvO,OAAOuG,aAC9JkV,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK+C,MAAQyK,EAAMvO,OAA8B,mBAAEc,SAASH,EAAEI,WAAY,KAAe,MAAI,SACvH6F,EAAa2H,EAAMvO,OAA8B,mBAAEc,SAASH,EAAEI,WAAY,MAC5D+B,aAClB2Y,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAKuB,WAAasE,EAChD6U,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAKkH,eAAiBwY,EAAWve,OAAOM,cAI7E,IAAI+L,EAAMvO,OAAO8H,sBACb2T,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK,GAAKwN,EAAMvO,OAAOie,mBAC0C,IAAhG1P,EAAMqO,YAAYzU,QAAQsT,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK,GAAKwN,EAAMvO,OAAOuG,aAC1Ewb,IAAcA,EAAUjhB,SAAS0J,EAAEzJ,WAAY,aAahD6F,EAAab,YAAW0a,EAAWve,SACrBY,aAClB2Y,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAKuB,WAAasE,EAChD6U,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAKkH,eAAiBwY,EAAWve,OAAOM,UAflEtB,oBAAkBua,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK,GAAKwN,EAAMvO,OAAOsG,mBACvEmV,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK+C,MAAQ,EACjB,iBAAtB2c,EAAWxb,SACXwW,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK+B,gBACnC2Y,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK+B,aAAe2d,EAAWve,OAAOY,eAIxE2Y,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK+C,MAAQ2c,EAAWve,OAAO4B,UAUpE,CACD2X,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK+C,MAAQ2c,EAAWve,OAAO4B,MAAQ,CACrE,IAAI8C,GAAab,YAAW0a,EAAWve,cAChC0E,GAAW9D,aAClB2Y,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAKuB,WAAasE,EAChD6U,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAKkH,eAAiBwY,EAAWve,OAAOM,SAK1E,GAHAiZ,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK8C,MAAQmc,KAAKC,KAAqB,IAAhBD,KAAKE,UAC1DzE,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAKyB,SAAWud,SAAOxR,EAAMvO,OAAOsb,QAAQC,GAAK,UAC/EE,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAKmT,cAAgB,UAC/C3F,EAAMvO,OAAO8H,sBAAwB5G,oBAAkBua,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK+C,OAC1F,IAAK,GAAIiD,GAAI,EAAGA,EAAIwH,EAAMvO,OAAOmB,KAAK8U,gBAAgBpV,OAAQkG,IACtDwH,EAAMvO,OAAOmB,KAAK8U,gBAAgBnV,SAASiG,EAAEhG,WAAY,KAAK,GAAKwN,EAAMvO,OAAOuG,aAAekV,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK,GAAKwN,EAAMvO,OAAOsG,mBACpJmV,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK+C,MAAQyK,EAAMvO,OAAOmB,KAAK8U,gBAAgBnV,SAASiG,EAAEhG,WAAY,KAAY,MAAI,EAMhI,IAFA0d,WAAS,sBAAwBhD,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAKyB,SAAUiZ,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAMwN,EAAMvO,SAEnHyb,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK,GAAKwN,EAAMvO,OAAOie,mBAC0C,IAAhG1P,EAAMqO,YAAYzU,QAAQsT,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK,GAAKwN,EAAMvO,OAAOuG,gBAC1Ewb,GAAcA,EAAUjhB,SAAS0J,EAAEzJ,WAAY,MAEpD,GADA0a,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK8B,iBAAkB,EACjD0L,EAAMvO,OAAO8H,sBAAwByG,EAAMvO,OAAO6Z,kBAAmB,CACrE,IAASlZ,EAAI,EAAGA,EAAI4N,EAAMvO,OAA+B,oBAAEa,OAAQF,IAC3D8a,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK,GAAKwN,EAAMvO,OAAOuG,aAAegI,EAAMvO,OAA+B,oBAAEc,SAASH,EAAEI,WAAY,KAAK,GAAKwN,EAAMvO,OAAOuG,aACzJkV,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK4B,SAAW4L,EAAMvO,OAA+B,oBAAEc,SAASH,EAAEI,WAAY,KAAe,SAGnI,IAA0B,aAAtB0f,EAAWxb,QAAyBwW,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK,GAAKwN,EAAMvO,OAAOuG,aAAeka,EAAWve,OAAO,GAAKqM,EAAMvO,OAAOuG,aAA8D,IAAhDkV,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK4B,SAC7L8Y,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK4B,UAAW,MAE7C,IAA0B,aAAtB8d,EAAWxb,QAAyBwW,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK,GAAKwN,EAAMvO,OAAOuG,aAAeka,EAAWve,OAAO,GAAKqM,EAAMvO,OAAOuG,WACjJkV,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK4B,UAAW,EAC9C4L,EAAMvO,OAA+B,oBAAEgC,KAAKye,EAAWve,YAEtD,IAA0B,iBAAtBue,EAAWxb,OAA2B,CAC3C,IAAStE,EAAI,EAAGA,EAAI4N,EAAMvO,OAAOmB,KAAK8U,gBAAgBpV,OAAQF,IACtD4N,EAAMvO,OAAOmB,KAAK8U,gBAAgBnV,SAASH,EAAEI,WAAY,KAAK,GAAKwN,EAAMvO,OAAOuG,aAAekV,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK,GAAKwN,EAAMvO,OAAOuG,YACpJkV,EAAOjV,OAAOgE,EAAG,EAAG+D,EAAMvO,OAAOmB,KAAK8U,gBAAgBnV,SAASH,EAAEI,WAAY,KAGrF,IAAI0a,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAKwN,EAAMvO,OAAOuG,aAAeka,EAAWve,OAAO,GAAKqM,EAAMvO,OAAOuG,WACnG,IAAK,GAAI5F,GAAI,EAAGA,EAAI4N,EAAMvO,OAA+B,oBAAEa,OAAQF,IAC3D8f,EAAWve,OAAO,GAAKqM,EAAMvO,OAAOuG,aAAegI,EAAMvO,OAA+B,oBAAEc,SAASH,EAAEI,WAAY,KAAK,GAAKwN,EAAMvO,OAAOuG,YACxIgI,EAAMvO,OAA+B,oBAAEwG,OAAO7F,EAAG,IAIT,IAAhD8a,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK4B,WACnC8Y,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK4B,UAAW,QAIjD4L,GAAMvO,OAAO8H,sBAAwB2T,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK,GAAKwN,EAAMvO,OAAOuG,aAAeka,EAAWve,OAAO,GAAKqM,EAAMvO,OAAOuG,YAAoC,aAAtBka,EAAWxb,OAC3KwW,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK4B,UAAW,EAEvC4L,EAAMvO,OAAO8H,sBAAwByG,EAAMvO,OAAO6Z,oBACzD4B,EAAO3a,SAAS0J,EAAEzJ,WAAY,KAAK4B,UAAW,EAGtDhB,GAAM6E,OAAOsb,EAAMtX,EAAI,EAAG,EAAGiR,EAAO3a,SAAS0J,EAAEzJ,WAAY,MAM/D,GAJA0d,WAAS,SAAU9c,EAAOmF,GAC1B2X,WAAS,SAAU,sBAAuB3X,GAC1CyH,EAAMvO,OAAOkQ,QNvgBG,iBMugB4BpJ,GAC5C8X,cAAYrQ,EAAMvO,OAAOsb,SACrB/M,EAAMvO,OAAOmB,KAAKgf,WAAWtf,OAAS,IAAM0N,EAAMvO,OAAO8H,qBAAsB,CAC/E,GAAIma,GAAYlgB,YAAU,QAAS+E,EAKnC,IAHI5F,oBAAkB+gB,KAClBA,EAAYja,WAAS,yBAA0BuG,EAAMvO,QAAQkiB,eAAe,GAAIvE,YAE/Ezc,oBAAkB+gB,GAAY,CAC/B,GAAI7B,GAAe6B,EAAU7D,QAAQrb,OAAO,SAAUsd,GAAK,MAAgB,iBAATA,EAAEC,IACpExZ,GAAe,OAAIyH,EAAMvO,OAAOugB,cAAcC,sBAAsBJ,EAActZ,EAAe,QAAG,IAGxGyH,EAAMvO,OAAO8H,uBACbyG,EAAMvO,OAAOmB,KAAK4W,aAAaoK,kBAAoBrb,EAAEwO,OAEzDxO,EAAEwO,MAAQ/G,EAAMvO,OAAOmB,KAAK4W,aAAaoK,iBACzC,IAAIC,KACA7T,GAAMvO,OAAO8H,sBACbyG,EAAM8T,oBAAoBD,EAE9B,IAAIE,IAAeze,MAAOie,EAAKhR,UAAW2K,EACtClN,GAAMvO,OAAOuiB,wBACbhU,EAAMvO,OAAO0a,OAAO,yBAA0B4H,GAG9Cta,WAAS,oBAAqBuG,EAAMvO,QAAQ2e,mBAAmB7X,EAAGsb,GAEtE7T,EAAMvO,OAAOkQ,QNjhBH,WMihB4BnD,MAG9C2P,EAAiBxW,UAAUmc,oBAAsB,SAAUD,GACvDA,EAAY9Y,YAAc,UAC1BmV,WAAS,oBAAoB,EAAM2D,EACnC,IAAII,GAAgBxa,WAAS,qBAAsB+B,KAAK/J,QACpDyiB,EAAcza,WAAS,cAAewa,GACtCE,EAAW1a,WAAS,WAAYwa,EAChCC,GAAYE,UAAY5Y,KAAK/J,OAAOmB,KAAK4W,aAAa6K,cAAgBH,EAAYI,SAASC,OAC3F/Y,KAAK/J,OAAOmB,KAAK4W,aAAa6K,YAAcF,EAASI,OAG7DpG,EAAiBxW,UAAUkX,aAAe,WAEtC,GADArT,KAAKkT,cAAe,EAChBld,EAAagK,KAAK/J,SAAW+J,KAAK/J,OAAO8H,qBAAsB,CAC/D,GAAIjE,GAAQkG,KAAK/J,OAAO0d,MAAMU,QAAQjW,QAAQ4B,KAAK/J,OAAO0d,MAAMU,QAAQrb,OAAO,SAAUsd,GAAK,MAAgB,aAATA,EAAEC,KAAsB,KAC9G,IAAXzc,GACAkG,KAAK/J,OAAO0d,MAAMU,QAAQ5X,OAAO3C,EAAO,GAES,IAAjDkG,KAAK/J,OAAOmB,KAAK+G,aAAatH,QAAQC,QACtCkJ,KAAK/J,OAAO0d,MAAMqF,OAAO,KAAM,QAI3CrG,EAAiBxW,UAAUoZ,cAAgB,SAAUlX,EAAM4a,GAGvD,IAAK,GAFDC,MAEKtiB,EAAI,EAAGiB,EADLC,OAAOC,KAAKsG,GACIvH,OAAQF,EAAIiB,EAAKjB,IAAK,CAC7C,GAAIuiB,GAAcnd,YAAWqC,EAAKtH,SAASH,EAAEI,WAAY,KACzDmiB,GAAYnf,SAAWqE,EAAKtH,SAASH,EAAEI,WAAY,IACnD,IAAI+C,GAAQ,CAyBZ,IAxBAiG,KAAKgT,cACAlb,OAAOqE,UAAUC,eAAeC,KAAK8c,EAAa,WACnDA,EAAYrf,MAAQkG,KAAKgT,eAEvB7b,oBAAkBgiB,EAAYnZ,KAAK/J,OAAOyG,iBAAmBhG,EAAgBsJ,KAAK/J,SAClFkjB,EAAYnZ,KAAK/J,OAAOie,kBAAqBxd,EAAgBsJ,KAAK/J,WACpEkjB,EAAYrgB,iBAAkB,EAC1BkH,KAAK/J,OAAOiY,oBAAsB/W,oBAAkB6I,KAAK/J,OAAO2N,kBAC7DzM,oBAAkBgiB,EAAYnZ,KAAK/J,OAAOyG,eAC7Cyc,EAAYvgB,UAAW,EAGvBugB,EAAYvgB,WAAYzB,oBAAkBgiB,EAAYnZ,KAAK/J,OAAO0C,sBAC5DwgB,EAAYnZ,KAAK/J,OAAO0C,qBAGjCb,OAAOqE,UAAUC,eAAeC,KAAK8c,EAAa,WACnDA,EAAYrf,OAAQqf,EAAYrgB,gBAAkBkH,KAAKgT,cAEvDhT,KAAKpF,iBAAmBzD,oBAAkBgiB,EAAYnZ,KAAK/J,OAAOsG,mBAClEyD,KAAK/J,OAAO4G,WAAW5E,KAAKkhB,GAEhCA,EAAY1gB,SAAWud,SAAOhW,KAAK/J,OAAOsb,QAAQC,GAAK,UACvDkD,WAAS,sBAAwByE,EAAY1gB,SAAU0gB,EAAanZ,KAAK/J,SACpEkB,oBAAkB8hB,GAAgB,CACnC,GAAIpc,GAAab,YAAWid,SACrBpc,GAAW9D,mBACX8D,GAAWmD,KAAK/J,OAAOyG,cAC1BsD,KAAKpF,uBACEiC,GAAW7C,SAASgG,KAAK/J,OAAOyG,cAE3Cyc,EAAY5gB,WAAasE,EACzBsc,EAAYjb,eAAiBrB,EAAWpE,SACxCsB,EAAQkf,EAAclf,MAAQ,EAE7BjC,OAAOqE,UAAUC,eAAeC,KAAK8c,EAAa,WACnDA,EAAYpf,MAAQA,GAExBof,EAAYhP,cAAgB,SAE5B,IAAInK,KAAK/J,OAAO8H,sBAAwBiC,KAAK/J,OAAO6Z,mBAAqB9Z,EAAagK,KAAK/J,UACnF+J,KAAK/J,OAAOyC,cAAe,CAC/B,IAAKygB,EAAYrgB,iBAAmB3B,oBAAkBgiB,EAAY,GAAKnZ,KAAK/J,OAAOsG,kBAAmB,CAClG4c,EAAYrgB,iBAAkB,CAC9B,KAAK,GAAIyH,GAAI,EAAGA,EAAIP,KAAK/J,OAA+B,oBAAEa,OAAQyJ,IAC1DP,KAAK/J,OAA+B,oBAAEc,SAASwJ,EAAEvJ,WAAY,KAAK,GAAKgJ,KAAK/J,OAAOuG,aAAe2c,EAAY,GAAKnZ,KAAK/J,OAAOuG,aAC/H2c,EAAYvgB,UAAW,OAIJ,KAAtBugB,EAAYpf,OAAe5C,oBAAkB8hB,KAAmBE,EAAYrgB,kBACjFqgB,EAAYpf,MAAQof,EAAYpf,MAAQ,EAExCof,GAAY,GAAKnZ,KAAK/J,OAAOie,mBAAqB/c,oBAAkBgiB,EAAY,GAAKnZ,KAAK/J,OAAO0C,uBACjGwgB,EAAYvgB,SAAWugB,EAAY,GAAKnZ,KAAK/J,OAAO0C,oBACpDwgB,EAAYrgB,iBAAkB,GAElCkH,KAAK/J,OAAO6G,SAAS7E,KAAKkhB,QAErBhiB,oBAAkBgiB,EAAY,GAAKnZ,KAAK/J,OAAOsG,mBAAqB4c,EAAY5gB,cACrFyH,KAAK/J,OAAO6G,SAAS7E,KAAKkhB,GAC1BnZ,KAAK/J,OAA2B,mBAAEgC,KAAKkhB,GAK3C,IAHKnZ,KAAKpF,iBAAyC,IAAtBue,EAAYpf,OACrCiG,KAAK/J,OAAO4G,WAAW5E,KAAKkhB,IAE3BhiB,oBAAkBgiB,EAAYnZ,KAAK/J,OAAOyG,eAAiByc,EAAYnZ,KAAK/J,OAAOyG,cAAc5F,QAAS,CAC3G,GAAIqB,GAAS6H,KAAKuV,cAAc4D,EAAYnZ,KAAK/J,OAAOyG,cAAeyc,EACvEA,GAAYpgB,aAAeZ,EAE/B+gB,EAAajhB,KAAKkhB,GAEtB,MAAOD,IASXvG,EAAiBxW,UAAUqX,cAAgB,SAAUxQ,GACjD,GAIIoW,GAJAC,EAAWrhB,YAAU,WAAYgL,GACjCsW,EAAathB,YAAU,aAAcgL,GACrCuW,EAAavhB,YAAU,aAAcgL,GACrCwW,EAAaxhB,YAAU,aAAcgL,GAErCyW,EAAazhB,YAAU,aAAcgL,GACrCzD,EAAcvH,YAAU,cAAegL,GACvC0W,EAAa1hB,YAAU,OAAQgL,GAC/B9H,EAASlD,YAAU,SAAUgL,GAC7B2W,EAAgBF,EAChBG,EAAuB5Z,KAAK/J,OAAOkF,0BAA0B,GAC7D0e,EAAY7hB,YAAU,OAAQ2hB,EAC5BxiB,qBAAkBwiB,IAAqBxiB,oBAAkBwiB,EAAcze,SAAsC,QAAzBye,EAAcze,QAC/F/D,oBAAkBwiB,EAActb,QAAUlH,oBAAkBwiB,EAActb,KAAK,GAAKub,MACzFD,EAActb,KAAK,GAAKub,GAAwB5W,EAAK0O,OAAOiI,EAAc7f,OAAO,GAAK8f,GACtFC,EAAU7f,SAAS,GAAK4f,GAAwB5W,EAAK0O,OAAOiI,EAAc7f,OAAO,GAAK8f,MAEpFziB,oBAAkBsiB,IAAe3hB,OAAOC,KAAK0hB,GAAY3iB,QAA2B,SAAhByI,KACtEA,EAAcA,GAA4Bka,EAAWla,YACrDma,EAAaA,GAA0B1hB,YAAU,OAAQyhB,GACzDve,EAASA,GAAkBlD,YAAU,SAAUyhB,GACT,UAAlCzZ,KAAK/J,OAAOwF,aAAaC,OACzBsE,KAAK/E,aAAe+E,KAAK/J,OAAOmB,KAAKuE,WAAWC,mBAEhDoE,KAAK/J,OAAO6jB,aACZ9Z,KAAK+Z,aAAaL,EAAYxe,EAAQqE,GAU9C,IAKIya,GACAC,EANAC,GANAd,EADAC,IAAaliB,oBAAkBmiB,GACrBA,EAGA5iB,EAAgBsJ,KAAK/J,QAAUgI,WAAS,SAAU+B,KAAK/J,OAAOmB,KAAKlB,YACvE8J,KAAK/J,OAAOmB,KAAKlB,qBAEMC,eAAcijB,EAAQljB,WAAWmF,KAAO+d,EACrE7N,EAAQ7U,EAAgBsJ,KAAK/J,QAAUgI,WAAS,QAAS+B,KAAK/J,OAAOC,YACnEgkB,EAAQpjB,OACVqd,EAAM,GAAIP,SACVsE,EAAYlgB,YAAU,QAASgL,EAOnC,IAJK7L,oBAAkB+gB,KACnB8B,EAAc9B,EAAU7D,QAAQrb,OAAO,SAAUsd,GAAK,MAAgB,YAATA,EAAEC,KAC/D0D,EAAc/B,EAAU7D,QAAQrb,OAAO,SAAUsd,GAAK,MAAgB,aAATA,EAAEC,MAE9DvW,KAAK/J,OAAOmB,KAAKI,gBAAkBwI,KAAK/J,OAAOmB,KAAKK,eAAeZ,QAAQC,QAC3EkJ,KAAK/J,OAAOmB,KAAKC,eAAeC,IAAIR,OAAS,IAAQK,oBAAkB+gB,KACvE8B,EAAYljB,QAAUmjB,EAAYnjB,SAAWkJ,KAAK/J,OAAO6jB,YAAc,CACpE3iB,oBAAkB+gB,KAClBA,EAAY,GAAItE,SAChBsE,EAAYja,WAAS,yBAA0B+B,KAAK/J,QAAQ+jB,YAAY9B,GACxEA,EAAYja,WAAS,yBAA0B+B,KAAK/J,QAAQgkB,YAAY/B,GAE5E,IAAIiC,GAAYjC,EAAU7D,QAAQrb,OAAO,SAAUsd,GAAK,MAAgB,YAATA,EAAEC,KAC7D6D,EAAYlC,EAAU7D,QAAQrb,OAAO,SAAUsd,GAAK,MAAgB,aAATA,EAAEC,IACjEpC,GAAIE,QAAU8F,EAAUhhB,OAAOihB,EAC/B,IAAIC,GAAe,GAAIlkB,eAAY+jB,GAAShF,aAAaf,EAIzD,IAHAnU,KAAK/J,OAAO0a,OAAO,oBAAsBtS,KAAMgc,IAC/CH,EAAUla,KAAKmT,YAAYzB,OAC3B1R,KAAKmT,YAAYzB,OAAS,KACtB1R,KAAK/J,OAAOmB,KAAKgf,WAAWtf,OAAS,EAAG,CACpC6c,EAAQ3b,YAAU,QAASgL,EAI/B,IAHI7L,oBAAkB+gB,KAClBA,EAAYja,WAAS,yBAA0B+B,KAAK/J,QAAQkiB,eAAe,GAAIvE,YAE9Ezc,oBAAkBwc,GAAQ,CACvB0C,EAAe1C,EAAMU,QAAQrb,OAAO,SAAUsd,GAAK,MAAgB,iBAATA,EAAEC,IAChE2D,GAAUla,KAAK/J,OAAOugB,cAAcC,sBAAsBJ,EAAc6D,GAAS,KAI7F,GAAIla,KAAK/J,OAAOmB,KAAKgf,WAAWtf,QAA2D,IAAjDkJ,KAAK/J,OAAOmB,KAAK+G,aAAatH,QAAQC,QACtB,IAAnDkJ,KAAK/J,OAAOmB,KAAKK,eAAeZ,QAAQC,SAAiBkJ,KAAK/J,OAAOmB,KAAKC,eAAeC,IAAIR,OAAQ,CACxG,GAAIwjB,GAActiB,YAAU,QAASgL,EACjC7L,qBAAkBmjB,KAClBA,EAAcrc,WAAS,yBAA0B+B,KAAK/J,QAAQkiB,eAAe,GAAIvE,UAEjFyC,GAAeiE,EAAYjG,QAAQrb,OAAO,SAAUsd,GAAK,MAAgB,iBAATA,EAAEC,IACtE2D,GAAUla,KAAK/J,OAAOugB,cAAcC,sBAAsBJ,EAAcrW,KAAK/J,OAAO6G,UAAU,GAElG,GAAIkD,KAAK/J,OAAOmB,KAAK+G,aAAatH,QAAQC,OAAS,GAAKkJ,KAAKkT,aAAc,CACvElT,KAAKkT,cAAe,CAIpB,KAAK,GAHDrW,GAAamD,KAAK/J,OAAO4G,WACzB8W,EAAQ3b,YAAU,QAASgL,GAC3BuX,EAAS,GAAI3G,SACR4G,EAAMxa,KAAK/J,OAAOmB,KAAK+G,aAAatH,QAAQC,OAAS,EAAG0jB,GAAO,EAAGA,IAAO,CAC9E,GACIvR,GAAMjJ,KAAK/J,OAAOmB,KAAK6H,aAAaZ,KAA0B,iBAAE2B,KAAK/J,OAAOmB,KAC5E+G,aAAatH,QAAQE,SAASyjB,EAAIxjB,WAAY,KAAK0Z,OACnD+J,EAAUxR,EAAIyR,cAAgBthB,EAAU4G,KAAK/J,QAC7CgT,EAAIyR,aAAaC,KAAK1R,GACtBjJ,KAAK/J,OAAOmB,KAAK+G,aAAatH,QAAQE,SAASyjB,EAAIxjB,WAAY,KAAK4jB,SACxEL,GAAOvB,OAAOhZ,KAAK/J,OAAOmB,KAAK+G,aAAatH,QAAQE,SAASyjB,EAAIxjB,WAAY,KAAK0Z,MAAO+J,GAE7F,GAAInf,GAAe,GAAInF,eAAY0G,GAAYqY,aAAaqF,EAC5D,IAAIva,KAAK/J,OAAO+I,sBAAwB7H,oBAAkB6I,KAAK/J,OAAOwY,qBAAoC,gBACtGzO,KAAK/J,OAAOwY,qBAAoC,cAAE3V,iBAAwE,kBAArDkH,KAAK/J,OAAOwY,qBAAmC,aAAuB,CAC3I,GAAIoM,GAAavf,EAAa8C,QAAQ4B,KAAK/J,OAAOwY,qBAAoC,cACtFnT,GAAamB,OAAOoe,EAAY,EAChC,IAAIC,GAAaxf,EAAa8C,QAAQ4B,KAAK/J,OAAOwY,qBAAoC,cAClFzO,MAAK/J,OAAOwY,qBAAoC,cAAE3V,iBAAwE,eAArDkH,KAAK/J,OAAOwY,qBAAmC,aACpHnT,EAAamB,OAAOqe,EAAY,EAAG9a,KAAK/J,OAAOwY,qBAAoC,eAEzB,kBAArDzO,KAAK/J,OAAOwY,qBAAmC,cACpDnT,EAAamB,OAAOqe,EAAa,EAAG,EAAG9a,KAAK/J,OAAOwY,qBAAoC,eAG/F,GAAIsM,IAAazf,aAAcA,EAAc+e,aAAcH,EAASK,OAAQA,EAM5E,IALAva,KAAK/J,OAAO0a,OAAO,aAAcoK,GACjCb,EAAUa,EAASzf,aACnB0E,KAAKmT,YAAYzB,OAAS,KAC1B1R,KAAKiT,WAAaiH,EAClBla,KAAK/J,OAAO0a,OAAO,kBACf3Q,KAAK/J,OAAOmB,KAAKgf,WAAWtf,OAAS,IAAMK,oBAAkBwc,GAAQ,CACrE,GAEI0C,GADUre,YAAU,QAASgL,GACNqR,QAAQrb,OAAO,SAAUsd,GAAK,MAAgB,iBAATA,EAAEC,IAClE2D,GAAUla,KAAK/J,OAAOugB,cAAcC,sBAAsBJ,EAAcrW,KAAKiT,YAHhE,IAMrB1H,EAAQ7U,EAAgBsJ,KAAK/J,QAAUgI,WAAS,QAAS+B,KAAK/J,OAAOC,YAC/DgkB,EAAQpjB,MACd,IAAIkkB,GAAOhb,KAAKib,OAAOf,EAAS3O,EAAO8N,EAAUG,EAAYD,EAAYvW,EACzEkX,GAAUc,EAAKtJ,OACfnG,EAAQyP,EAAKzP,MACbvI,EAAK0O,OAASwI,EACdlX,EAAKuI,MAAQA,EACbvL,KAAK/J,OAAO0a,OAAO,gBAAiB3N,IAExC2P,EAAiBxW,UAAU8e,OAAS,SAAUf,EAAS3O,EAAO8N,EAAUG,EAAYD,EAAYvW,GAC5F,IAAIhD,KAAK/J,OAAOuW,aAAiB6M,GAA2B,gBAAfE,GACpCC,GAAwC,gBAA1BxZ,KAAK/J,OAAOilB,WAM9B,IAAKlb,KAAK/J,OAAO8H,sBAAwBiC,KAAK/J,OAAOuiB,4BAA8Ba,GAA2B,gBAAfE,IAC3D,SAAlCtb,WAAS,cAAe+E,GAAkB,CAC7C,GAAImY,GAAUnb,KAAK/J,OAAOuiB,wBAA0BxV,EAAO/E,WAAS,aAAc+E,EAClFhD,MAAK/J,OAAO0a,ONpwBG,iBMowB4Be,OAAQwI,EAAS3O,MAAOA,EAAOkO,WAAY0B,IACtFjB,EAAUla,KAAKmT,YAAYzB,OAC3BnG,EAAQvL,KAAKmT,YAAY5H,WAVzBvL,MAAK/J,OAAO0a,ON5vBG,iBM4vB4Be,OAAQwI,EAAS3O,MAAOA,EAAOkO,WAAYzW,IACtFkX,EAAUla,KAAKmT,YAAYzB,OAC3BnG,EAAQ7U,EAAgBsJ,KAAK/J,QAAUgI,WAAS,QAAS+B,KAAK/J,OAAOC,YAC/D8J,KAAKmT,YAAY5H,KAW3B,MAAoB,IAAfiO,GAAwBxW,EAAqB,cAAM7L,oBAAkB6L,EAAiC,0BACpGA,EAAiC,2BAAkC,aAA1BhD,KAAK/J,OAAOilB,UAA0B,CAElF,IAAK,GADDE,MACKxkB,EAAI,EAAGA,EAAIsjB,EAAQpjB,OAAQF,IACbsB,EAAgB8H,KAAK/J,OAAQikB,EAAQnjB,SAASH,EAAEI,WAAY,KAAMgJ,KAAK/J,OAAO4G,aAE7Fue,EAAcnjB,KAAKiiB,EAAQnjB,SAASH,EAAEI,WAAY,KAI1DuU,IADA2O,EAAUkB,GACMtkB,OAGpB,OADc4a,OAAQwI,EAAS3O,MAAOA,IAG1CoH,EAAiBxW,UAAUmX,WAAa,SAAU+H,GAC9Crb,KAAKmT,YAAckI,GAEvB1I,EAAiBxW,UAAU4d,aAAe,SAAUL,EAAYxe,EAAQqE,GAC/C,WAAhBA,GAA4C,SAAhBA,GAC7BS,KAAK/J,OAAO0a,ONhxBA,cMgxB4B9W,MAAO6f,EAAYxe,OAAQA,GAAUqE,IAE7D,cAAhBA,GAAiE,UAAlCS,KAAK/J,OAAOwF,aAAaC,MACxDsE,KAAK/J,OAAO0a,ONzvBD,iBM4vBZgC,MC70BX,SAAW2I,GACPA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAmB,MAAI,IAAM,QACzCA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAwB,WAAI,IAAM,cAC/CA,gBAAgBA,mBAOnB,SAAWC,GACPA,EAAiBA,EAA0B,QAAI,GAAK,UACpDA,EAAiBA,EAA6B,WAAI,GAAK,aACvDA,EAAiBA,EAAgC,cAAI,GAAK,gBAC1DA,EAAiBA,EAAiC,eAAI,GAAK,iBAC3DA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAA4B,UAAI,GAAK,YACtDA,EAAiBA,EAA8B,YAAI,GAAK,cACxDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAAyB,OAAI,IAAM,SACpDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA6B,WAAI,IAAM,cACzDA,qBAAqBA,uBC/CxB,IAAI9b,IAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB5H,OAAO+H,iBAChBC,uBAA2B/D,QAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI5C,KAAK4C,GAAOA,EAAExD,eAAeY,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOC,KAAKC,YAAcN,EADnCD,EAAcC,EAAGC,GAEjBD,EAAExD,UAAkB,OAANyD,EAAa9H,OAAOoI,OAAON,IAAMG,EAAG5D,UAAYyD,EAAEzD,UAAW,GAAI4D,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQ/I,EAAKgJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU1J,OAAQ2J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOxI,OAAO4I,yBAAyBL,EAAQ/I,GAAOgJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ/I,EAAKgJ,OACpH,KAAK,GAAI1J,GAAIwJ,EAAWtJ,OAAS,EAAGF,GAAK,EAAGA,KAAS+I,EAAIS,EAAWxJ,MAAI6J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ/I,EAAKmJ,GAAKd,EAAEU,EAAQ/I,KAASmJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK3I,OAAO+I,eAAeR,EAAQ/I,EAAKmJ,GAAIA,GAM5D+a,GAA8B,SAAU5Z,GAExC,QAAS4Z,KACL,MAAkB,QAAX5Z,GAAmBA,EAAOC,MAAM7B,KAAMQ,YAAcR,KA0B/D,MA5BAP,IAAU+b,EAAc5Z,GAIxBzB,IACI2B,WAAS,KACV0Z,EAAarf,UAAW,eAAY,IACvCgE,IACI2B,WAAS,IACV0Z,EAAarf,UAAW,gBAAa,IACxCgE,IACI2B,WAAS,IACV0Z,EAAarf,UAAW,kBAAe,IAC1CgE,IACI2B,cACD0Z,EAAarf,UAAW,wBAAqB,IAChDgE,IACI2B,YAAS,IACV0Z,EAAarf,UAAW,wBAAqB,IAChDgE,IACI2B,YAAS,IACV0Z,EAAarf,UAAW,gBAAa,IACxCgE,IACI2B,WAAS,OACV0Z,EAAarf,UAAW,eAAY,IACvCgE,IACI2B,WAAS,QACV0Z,EAAarf,UAAW,mBAAgB,IACpCqf,GACTvZ,iBCrDExC,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB5H,OAAO+H,iBAChBC,uBAA2B/D,QAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI5C,KAAK4C,GAAOA,EAAExD,eAAeY,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOC,KAAKC,YAAcN,EADnCD,EAAcC,EAAGC,GAEjBD,EAAExD,UAAkB,OAANyD,EAAa9H,OAAOoI,OAAON,IAAMG,EAAG5D,UAAYyD,EAAEzD,UAAW,GAAI4D,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQ/I,EAAKgJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU1J,OAAQ2J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOxI,OAAO4I,yBAAyBL,EAAQ/I,GAAOgJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ/I,EAAKgJ,OACpH,KAAK,GAAI1J,GAAIwJ,EAAWtJ,OAAS,EAAGF,GAAK,EAAGA,KAAS+I,EAAIS,EAAWxJ,MAAI6J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ/I,EAAKmJ,GAAKd,EAAEU,EAAQ/I,KAASmJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK3I,OAAO+I,eAAeR,EAAQ/I,EAAKmJ,GAAIA,GAQ5Dgb,GAAiC,SAAU7Z,GAE3C,QAAS6Z,KACL,GAAIjX,GAAmB,OAAX5C,GAAmBA,EAAOC,MAAM7B,KAAMQ,YAAcR,IAGhE,OAFAwE,GAAMkX,KAAO,GAAIC,wBACjBnX,EAAMoX,cACCpX,EAiFX,MAtFA/E,IAAUgc,EAAiB7Z,GAe3B6Z,EAAgBtf,UAAU0f,aAAe,SAAUC,GAC3C9b,KAAK+b,SAAW/b,KAAK+b,OAAOC,UAAYhc,KAAK+b,OAAOA,UACpD/b,KAAKic,SAAWjc,KAAKkc,kBAAkBlc,KAAK+b,UAQpDN,EAAgBtf,UAAU+f,kBAAoB,SAAUH,GACpD,MAAIA,GAAO9Y,KACAjD,KAAK0b,KAAKS,cAAcJ,GAGxB/b,KAAK0b,KAAKU,gBAAgBL,IAOzCN,EAAgBtf,UAAUkgB,aAAe,WACrC,MAAOrc,MAAKic,UAOhBR,EAAgBtf,UAAUmgB,YAAc,SAAUC,OAC/B,KAAXA,IAAqBA,UACGzK,KAAxB9R,KAAKwc,iBACLxc,KAAK4b,WAAWa,eAAaC,WAAUA,WAASC,WAAcpG,GAAIqG,UAAQ5c,KAAKwc,eAAgBD,GAC3FM,SAAU,oBAQtBpB,EAAgBtf,UAAU2gB,YAAc,SAAU7Z,GAC9C,MAAOjD,MAAK4b,WAAWa,eAAaC,WAAUzZ,KAOlDwY,EAAgBtf,UAAU4gB,oBAAsB,SAAUC,GACtDhd,KAAKwB,cAAcwb,GAAM,IAE7B7c,IACI2B,cACD2Z,EAAgBtf,UAAW,WAAQ,IACtCgE,IACI2B,cACD2Z,EAAgBtf,UAAW,qBAAkB,IAChDgE,IACI2B,cACD2Z,EAAgBtf,UAAW,YAAS,IACvCgE,IACI2B,cACD2Z,EAAgBtf,UAAW,aAAU,IACxCgE,IACI2B,cACD2Z,EAAgBtf,UAAW,iBAAc,IAC5CgE,IACI2B,cACD2Z,EAAgBtf,UAAW,sBAAmB,IAC1Csf,GACTxZ,iBAEEgb,GAA8B,SAAUrb,GAExC,QAASqb,KACL,MAAkB,QAAXrb,GAAmBA,EAAOC,MAAM7B,KAAMQ,YAAcR,KAQ/D,MAVAP,IAAUwd,EAAcrb,GAIxBzB,IACIiC,gBAAeqZ,KAChBwB,EAAa9gB,UAAW,cAAW,IACtCgE,IACI2B,YAAS,IACVmb,EAAa9gB,UAAW,uBAAoB,IACxC8gB,GACThb,iBC/HExC,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB5H,OAAO+H,iBAChBC,uBAA2B/D,QAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI5C,KAAK4C,GAAOA,EAAExD,eAAeY,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOC,KAAKC,YAAcN,EADnCD,EAAcC,EAAGC,GAEjBD,EAAExD,UAAkB,OAANyD,EAAa9H,OAAOoI,OAAON,IAAMG,EAAG5D,UAAYyD,EAAEzD,UAAW,GAAI4D,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQ/I,EAAKgJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU1J,OAAQ2J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOxI,OAAO4I,yBAAyBL,EAAQ/I,GAAOgJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ/I,EAAKgJ,OACpH,KAAK,GAAI1J,GAAIwJ,EAAWtJ,OAAS,EAAGF,GAAK,EAAGA,KAAS+I,EAAIS,EAAWxJ,MAAI6J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ/I,EAAKmJ,GAAKd,EAAEU,EAAQ/I,KAASmJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK3I,OAAO+I,eAAeR,EAAQ/I,EAAKmJ,GAAIA,GAM5Dyc,GAA8B,SAAUtb,GAExC,QAASsb,KACL,MAAkB,QAAXtb,GAAmBA,EAAOC,MAAM7B,KAAMQ,YAAcR,KAmC/D,MArCAP,IAAUyd,EAActb,GAIxBzB,IACI2B,YAAS,IACVob,EAAa/gB,UAAW,kBAAe,IAC1CgE,IACI2B,YAAS,IACVob,EAAa/gB,UAAW,mBAAgB,IAC3CgE,IACI2B,YAAS,IACVob,EAAa/gB,UAAW,oBAAiB,IAC5CgE,IACI2B,WAAS,SACVob,EAAa/gB,UAAW,WAAQ,IACnCgE,IACI2B,WAAS,QACVob,EAAa/gB,UAAW,qBAAkB,IAC7CgE,IACI2B,YAAS,IACVob,EAAa/gB,UAAW,0BAAuB,IAClDgE,IACI2B,YAAS,IACVob,EAAa/gB,UAAW,wBAAqB,IAChDgE,IACI2B,YAAS,IACVob,EAAa/gB,UAAW,8BAA2B,IACtDgE,IACI2B,WAAS,KACVob,EAAa/gB,UAAW,eAAY,IACvCgE,IACI2B,gBACDob,EAAa/gB,UAAW,aAAU,IACrCgE,IACI2B,YAAS,IACVob,EAAa/gB,UAAW,uBAAoB,IACxC+gB,GACTjb,iBC9DExC,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB5H,OAAO+H,iBAChBC,uBAA2B/D,QAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI5C,KAAK4C,GAAOA,EAAExD,eAAeY,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOC,KAAKC,YAAcN,EADnCD,EAAcC,EAAGC,GAEjBD,EAAExD,UAAkB,OAANyD,EAAa9H,OAAOoI,OAAON,IAAMG,EAAG5D,UAAYyD,EAAEzD,UAAW,GAAI4D,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQ/I,EAAKgJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU1J,OAAQ2J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOxI,OAAO4I,yBAAyBL,EAAQ/I,GAAOgJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ/I,EAAKgJ,OACpH,KAAK,GAAI1J,GAAIwJ,EAAWtJ,OAAS,EAAGF,GAAK,EAAGA,KAAS+I,EAAIS,EAAWxJ,MAAI6J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ/I,EAAKmJ,GAAKd,EAAEU,EAAQ/I,KAASmJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK3I,OAAO+I,eAAeR,EAAQ/I,EAAKmJ,GAAIA,GAM5D0c,GAAgC,SAAUvb,GAE1C,QAASub,KACL,MAAkB,QAAXvb,GAAmBA,EAAOC,MAAM7B,KAAMQ,YAAcR,KAQ/D,MAVAP,IAAU0d,EAAgBvb,GAI1BzB,IACI2B,cACDqb,EAAehhB,UAAW,YAAS,IACtCgE,IACI2B,cACDqb,EAAehhB,UAAW,gBAAa,IACnCghB,GACTlb,iBAKEmb,GAA8B,SAAUxb,GAExC,QAASwb,KACL,MAAkB,QAAXxb,GAAmBA,EAAOC,MAAM7B,KAAMQ,YAAcR,KAQ/D,MAVAP,IAAU2d,EAAcxb,GAIxBzB,IACIiC,gBAAe+a,KAChBC,EAAajhB,UAAW,cAAW,IACtCgE,IACI2B,YAAS,IACVsb,EAAajhB,UAAW,kBAAe,IACnCihB,GACTnb,iBCpDExC,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB5H,OAAO+H,iBAChBC,uBAA2B/D,QAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI5C,KAAK4C,GAAOA,EAAExD,eAAeY,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOC,KAAKC,YAAcN,EADnCD,EAAcC,EAAGC,GAEjBD,EAAExD,UAAkB,OAANyD,EAAa9H,OAAOoI,OAAON,IAAMG,EAAG5D,UAAYyD,EAAEzD,UAAW,GAAI4D,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQ/I,EAAKgJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU1J,OAAQ2J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOxI,OAAO4I,yBAAyBL,EAAQ/I,GAAOgJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ/I,EAAKgJ,OACpH,KAAK,GAAI1J,GAAIwJ,EAAWtJ,OAAS,EAAGF,GAAK,EAAGA,KAAS+I,EAAIS,EAAWxJ,MAAI6J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ/I,EAAKmJ,GAAKd,EAAEU,EAAQ/I,KAASmJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK3I,OAAO+I,eAAeR,EAAQ/I,EAAKmJ,GAAIA,GAM5D4c,GAAwC,SAAUzb,GAElD,QAASyb,KACL,MAAkB,QAAXzb,GAAmBA,EAAOC,MAAM7B,KAAMQ,YAAcR,KAW/D,MAbAP,IAAU4d,EAAwBzb,GAIlCzB,IACI2B,YAAS,IACVub,EAAuBlhB,UAAW,kBAAe,IACpDgE,IACI2B,WAAS,IACVub,EAAuBlhB,UAAW,gBAAa,IAClDgE,IACI2B,WAAS,IACVub,EAAuBlhB,UAAW,oBAAiB,IAC/CkhB,GACTpb,iBCtCExC,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB5H,OAAO+H,iBAChBC,uBAA2B/D,QAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI5C,KAAK4C,GAAOA,EAAExD,eAAeY,KAAI2C,EAAE3C,GAAK4C,EAAE5C,MACpD2C,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOC,KAAKC,YAAcN,EADnCD,EAAcC,EAAGC,GAEjBD,EAAExD,UAAkB,OAANyD,EAAa9H,OAAOoI,OAAON,IAAMG,EAAG5D,UAAYyD,EAAEzD,UAAW,GAAI4D,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQ/I,EAAKgJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU1J,OAAQ2J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOxI,OAAO4I,yBAAyBL,EAAQ/I,GAAOgJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ/I,EAAKgJ,OACpH,KAAK,GAAI1J,GAAIwJ,EAAWtJ,OAAS,EAAGF,GAAK,EAAGA,KAAS+I,EAAIS,EAAWxJ,MAAI6J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ/I,EAAKmJ,GAAKd,EAAEU,EAAQ/I,KAASmJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK3I,OAAO+I,eAAeR,EAAQ/I,EAAKmJ,GAAIA,GA8C5D6c,GAA0B,SAAU1b,GAEpC,QAAS0b,GAASvc,EAASwQ,GACvB,GAAI/M,GAAQ5C,EAAOvF,KAAK2D,KAAMe,EAASwQ,IAAYvR,IACnDwE,GAAM2O,eACN3O,EAAM+Y,sBACN/Y,EAAMgZ,4BACNhZ,EAAMiZ,eAAiB,iBACvBjZ,EAAMkZ,eAAiB,iBACvBlZ,EAAMoO,aAAe,eACrBpO,EAAMmZ,oBAAsB,sBAC5BnZ,EAAMoZ,mBACNpZ,EAAMqZ,eAAgB,EACtBrZ,EAAMsZ,sBAAwB,SAAUC,EAAKC,GACzC,GAAID,EAAK,CAIL,IAAK,GAHDhmB,GAAOD,OAAOC,KAAKgmB,GACnBE,GAAU,EACVC,GAAe,WAAY,eAAgB,WAAY,WAAY,aAAc,iBAAkB,SAC9FtnB,EAAI,EAAGA,EAAImB,EAAKjB,OAAQF,IAC7B,KAAImnB,EAAIhmB,EAAKhB,SAASH,EAAEI,WAAY,QAAUgnB,EAAQjmB,EAAKhB,SAASH,EAAEI,WAAY,QACnB,IAA3DknB,EAAY9f,QAAQrG,EAAKhB,SAASH,EAAEI,WAAY,OACnC+mB,EAAIhmB,EAAKhB,SAASH,EAAEI,WAAY,eAAiBmnB,OAC1DH,EAAQjmB,EAAKhB,SAASH,EAAEI,WAAY,eAAiBmnB,OACzCJ,EAAIhmB,EAAKhB,SAASH,EAAEI,WAAY,MAAMonB,YAClDJ,EAAQjmB,EAAKhB,SAASH,EAAEI,WAAY,MAAMonB,WAAY,CACtDH,GAAU,CACV,OAIZ,MAAOA,GAGP,OAAO,GAGfI,EAAW1b,OAAO2b,GAClB5J,WAAS,mBAAoBlQ,EAAM+Z,yBAA0B/Z,EAM7D,OAJKrN,qBAAkBqN,EAAMga,gBAA2B,SACpD9b,OAAKC,OAAOF,UAEhB+B,EAAMpN,KAAO,GAAIsL,QACV8B,EA1CX/E,GAAU6d,EAAU1b,GA4CpByc,EAAaf,EAWbA,EAASnhB,UAAUsiB,YAAc,SAAUC,EAAuBC,EAAkBC,EAAUC,GAE1F,MAAO7e,MAAK8e,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAYjGvB,EAASnhB,UAAU6iB,UAAY,SAAUN,EAAuBC,EAAkBC,EAAUC,GAExF,MAAO7e,MAAK8e,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGvB,EAASnhB,UAAU8iB,UAAY,SAAUC,EAAqBP,EAAkBQ,EAAQN,GACpF,MAAO7e,MAAKof,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,IAQnFvB,EAASnhB,UAAUkjB,kBAAoB,SAAUC,GAC7Ctf,KAAKuf,SAAU,EACfvf,KAAKwf,eAAeF,IAQxBhC,EAASnhB,UAAUsjB,gBAAkB,SAAUH,GAC3Ctf,KAAKuf,SAAU,EACfvf,KAAKwf,eAAeF,IAQxBhC,EAASnhB,UAAUujB,gBAAkB,SAAUJ,GAC3Ctf,KAAKuf,SAAU,EACfvf,KAAKwf,eAAeF,IAOxBhC,EAASnhB,UAAUqjB,eAAiB,SAAUF,GAE1C,GACI3L,GADW3T,KACM5I,KAAKkgB,gBAAgBC,eAAc,GACpDoI,GAAQ,GAAIlpB,eAAampB,aAAa,GAAIzpB,gBAAcmpB,IAAK,KAAO3L,GACpEU,EAAUwL,KAAKC,MAAMH,EAAMthB,MAE3B0hB,EAAgBF,KAAKC,MAAM9f,KAAKggB,cAAc,cAAe,eAAgB,eAAgB,iBAAkB,mBAAoB,aACnI,iBAAkB,UAAW,SAAU,iBAAkB,YAAa,kBAAmB,eAAgB,qBACzGC,GAAW,QAAS,aAAc,OAAQ,SAAU,UACpD,WAAY,QAAS,QAAS,YAAa,kBAAmB,UAClEF,GAActoB,eAAeZ,QAAUwd,EAAQL,MAC/C+L,EAAc1oB,eAAe6oB,OAAS7L,EAAQ8L,QAAU9L,EAAQ8L,OAAO,GAAW,WAClFJ,EAAc5hB,aAAatH,QAAUwd,EAAQ+L,OAC7CL,EAAclpB,QAAUmJ,KAAKqgB,cAAcN,EAAclpB,QAASopB,EAClE,IAAIK,GAAOtgB,KAAKuJ,cAAc,QAAUiI,GAAI,aAAc7B,OAAQ,kBAC9D4Q,EAAgBvgB,KAAKuJ,cAAc,SAAWiI,GAAI,gBAAiB/H,OAAS+W,KAAM,kBACtFD,GAAc1mB,MAAQgmB,KAAKY,UAAUV,GACrCO,EAAKI,OAAS,OACdJ,EAAKplB,OAASokB,EACdgB,EAAKzV,YAAY0V,GACjBI,SAASC,KAAK/V,YAAYyV,GAC1BA,EAAKO,SACLP,EAAKQ,UAQTxD,EAASnhB,UAAUkkB,cAAgB,SAAUxpB,EAASopB,GAClD,IAAK,GAAIrpB,GAAI,EAAGA,EAAIC,EAAQC,OAAQF,IAAK,CACrC,GAAIyI,GAASW,KAAKqP,eAAexY,EAAQE,SAASH,EAAEI,WAAY,KAAK0K,IACjE1B,MAAK6d,eAAiB1mB,oBAAkBkI,KACxCA,EAAUlI,oBAAkBN,EAAQE,SAASH,EAAEI,WAAY,KAAK0Z,OACO7Z,EAAQE,SAASH,EAAEI,WAAY,KAAlGgJ,KAAK+gB,iBAAiBlqB,EAAQE,SAASH,EAAEI,WAAY,KAAK0Z,QAElE7Z,EAAQE,SAASH,EAAEI,WAAY,KAAKiP,WAAa5G,EAAO4G,WACnD9O,oBAAkBkI,EAAOyR,YAC1Bja,EAAQE,SAASH,EAAEI,WAAY,KAAK8Z,SAAW,QAE/Cja,EAAQE,SAASH,EAAEI,WAAY,KAAK+kB,SACpCllB,EAAQE,SAASH,EAAEI,WAAY,KAAK+kB,OAASK,kBAAgBpc,KAAKghB,UAAU3hB,EAAO0c,QAAS1c,EAAO4D,MAAM,EAAOjD,KAAKihB,cAChHjhB,KAAKuf,SAA4B,aAAhBlgB,EAAO4D,MAAuC,SAAhB5D,EAAO4D,OACvDpM,EAAQE,SAASH,EAAEI,WAAY,KAAK+kB,OAASllB,EAAQE,SAASH,EAAEI,WAAY,KAAK+kB,OAAO/kB,WAAWwM,QAAQ,QAAS,OAExH3M,EAAQE,SAASH,EAAEI,WAAY,KAAKiM,KAAO5D,EAAO4D,MAElDpM,EAAQE,SAASH,EAAEI,WAAY,KAAKH,SACpCmJ,KAAKqgB,cAAcxpB,EAAQE,SAASH,EAAEI,WAAY,KAAKH,QAASopB,EAGpE,KAAK,GADDloB,GAAOD,OAAOC,KAAKlB,EAAQE,SAASH,EAAEI,WAAY,MAC7C2C,EAAI,EAAGA,EAAI5B,EAAKjB,OAAQ6C,IACzBsmB,EAAQ7hB,QAAQrG,EAAKhB,SAAS4C,EAAE3C,WAAY,MAAQ,SAC7CH,GAAQE,SAASH,EAAEI,WAAY,KAAKe,EAAKhB,SAAS4C,EAAE3C,WAAY,MAInF,MAAOH,IAQXymB,EAASnhB,UAAU6kB,UAAY,SAAUjF,GACrC,MAA2B,mBAAY5kB,oBAAkB4kB,EAAOA,QAC5CA,EAAOC,SAAvBD,EAAOA,OAA2BA,GAQ1CuB,EAASnhB,UAAU0G,cAAgB,WAC/B,MAAO,YAQXya,EAASnhB,UAAU+kB,UAAY,WAC3BlhB,KAAKmhB,iBACLnhB,KAAKohB,iBACLphB,KAAKqhB,eACDC,MAAO,QACPC,MAAO,QACPC,MAAO,QACPC,OAAQ,UACRC,UAAW,aACXC,YAAa,eACbC,UAAW,SACXC,WAAY,WAEhB7hB,KAAK8hB,KAAO,GAAIC,QAAK,WAAY/hB,KAAKqhB,cAAerhB,KAAKgiB,QACtDhiB,KAAKpF,iBAAmBzD,oBAAkB6I,KAAKtD,gBAC/CsD,KAAKtD,aAAe,aAW5B4gB,EAASnhB,UAAU8lB,aAAe,SAAUlnB,EAAY6f,EAAWsH,GAC3DliB,KAAKmiB,YACLniB,KAAKmiB,WAAWC,WAAWrnB,EAAY6f,EAAWsH,IAQ1D5E,EAASnhB,UAAUkmB,aAAe,WAC1BriB,KAAKmiB,YACLniB,KAAKmiB,WAAWE,gBAUxB/E,EAASnhB,UAAUmmB,iBAAmB,SAAU5R,GACxC1Q,KAAKmiB,YACLniB,KAAKmiB,WAAWG,iBAAiB5R,IAWzC4M,EAASnhB,UAAUgkB,OAAS,SAAUzK,GAClC1V,KAAK5I,KAAK+oB,OAAOzK,IAarB4H,EAASnhB,UAAUomB,eAAiB,SAAUC,GAC1CxiB,KAAKyiB,aAAaF,eAAeC,GACjCxiB,KAAK0iB,qBASTpF,EAASnhB,UAAUwmB,eAAiB,SAAUC,EAAWC,GACrD7iB,KAAK5I,KAAKurB,eAAeC,EAAWC,IAExCvF,EAASnhB,UAAUglB,eAAiB,WAEhC,GAAIa,GAASD,OAAKC,OACdc,IACJpO,YAAS1U,KAAKgiB,UAAYc,EAC1B,IAAIC,EACJA,MACAA,EAAa/qB,YAAUgI,KAAKgiB,OAAQA,EACpC,IAAIgB,EACJA,MACAA,EAAiBhrB,YAAUgI,KAAK6C,gBAAiBkgB,GACjDrO,WAAS,OAAQsO,EAAgBhrB,YAAUgI,KAAKgiB,OAAQc,IACxDf,OAAKkB,KAAKH,IASdxF,EAASnhB,UAAUsR,MAAQ,WACvBzN,KAAKkjB,YAAYzV,SAErB6P,EAASnhB,UAAUgnB,yBAA2B,SAAUpmB,GACpD,GAAIiD,KAAKojB,cAAe,CACpB,GAAI/iB,OAAS,GACTgjB,MAAe,GACfhkB,MAAS,GACTd,MAAM,GACN+kB,MAAiB,EACrB,QAAQvmB,EAAE7B,QACN,IAAK,gBACD8E,KAAKujB,WACL,MACJ,KAAK,cACDvjB,KAAKwjB,aACL,MACJ,KAAK,mBAEDnkB,GADAgB,EAAStD,EAAEsD,QACK6H,QAAQ,cACnB/Q,oBAAkBkI,KACnBd,EAAMc,EAAO6I,QAAQ,MAChB/Q,oBAAkBoH,IAAUpH,oBAAkBoH,EAAIwY,uBAAuB,oBAAoB,KAC9F/W,KAAKyjB,sBAAsBllB,EAAI0J,cAAc,sBAGrD,MACJ,KAAK,qBAED5I,GADAgB,EAAStD,EAAEsD,QACK6H,QAAQ,cACnB/Q,oBAAkBkI,KACnBd,EAAMc,EAAO6I,QAAQ,MAChB/Q,oBAAkBoH,IAAUpH,oBAAkBoH,EAAIwY,uBAAuB,sBAAsB,KAChG/W,KAAKyjB,sBAAsBllB,EAAI0J,cAAc,wBAGrD,MACJ,KAAK,YACD,IAAKjI,KAAKjC,qBAAsB,CAGxBkU,GADJoR,GADAhjB,EAAStD,EAAEsD,QACWqjB,eACOzR,SAK7B,IAJuD,iBAAnDjS,KAAK5I,KAAKusB,iBAAiB1R,GAAW2R,UAA+BzsB,oBAAkB6I,KAAK5I,KAAKusB,iBAAiB1R,GAAWhR,KAAU,OACvIoiB,EAAehjB,GAGI,QADvBijB,EAAiBtjB,KAAK6jB,mBAAmBR,IACZ,CACzB,GAAIS,GAAc/mB,EAAEsD,OAAO4R,UACvB8R,EAAQT,EAAejS,SAASta,SAAS+sB,EAAY9sB,WAAY,IACrEwW,aAAUuW,GAAQ,aAClBvW,YAAUuW,GAAQ,eAGlB/jB,MAAKgkB,iBAGb,KACJ,KAAK,UACD,IAAKhkB,KAAKjC,qBAAsB,CAG5B,GAAIkU,IADJoR,GADAhjB,EAAStD,EAAEsD,QACWqjB,eACOzR,SAK7B,IAJuD,iBAAnDjS,KAAK5I,KAAKusB,iBAAiB1R,GAAW2R,UAA+BzsB,oBAAkB6I,KAAK5I,KAAKusB,iBAAiB1R,GAAWhR,KAAU,OACvIoiB,EAAehjB,GAGI,QADvBijB,EAAiBtjB,KAAKikB,uBAAuBZ,IAChB,CACzB,GAAIa,GAASnnB,EAAEsD,OAAO4R,UAClBjN,EAAOse,EAAejS,SAASta,SAASmtB,EAAOltB,WAAY,IAC/DwW,aAAUxI,GAAO,aACjBwI,YAAUxI,GAAO,eAGjBhF,MAAKgkB,qBAO7B1G,EAASnhB,UAAU0nB,mBAAqB,SAAUM,GAC9C,GAAIzb,GAAayb,EAAkB9b,kBAKnC,OAJmB,QAAfK,IAA0E,IAAlDA,EAAWc,UAAUpL,QAAQ,iBACxB,SAA7BsK,EAAWtO,MAAMG,UACjBmO,EAAa1I,KAAK6jB,mBAAmBnb,IAElCA,GAGX4U,EAASnhB,UAAU8nB,uBAAyB,SAAUE,GAClD,GAAIzb,GAAayb,EAAkBC,sBAKnC,OAJmB,QAAf1b,IAA0E,IAAlDA,EAAWc,UAAUpL,QAAQ,iBACxB,SAA7BsK,EAAWtO,MAAMG,UACjBmO,EAAa1I,KAAKikB,uBAAuBvb,IAEtCA,GAEX4U,EAASnhB,UAAUilB,eAAiB,WAChCphB,KAAKqhB,iBACLrhB,KAAKlD,YACLkD,KAAKqkB,sBACLrkB,KAAKskB,uBACLtkB,KAAKukB,sBACLvkB,KAAKnD,cACLmD,KAAKwkB,eACLxkB,KAAKykB,aAAc,EACnBzkB,KAAK0kB,eAAgB,EACrB1kB,KAAK2kB,YACDC,cAAe,iBACfC,YAAa,eACbC,iBAAkB,qBAClBC,mBAAoB,uBACpBC,UAAW,YACXC,QAAS,WAEbjlB,KAAK8Z,cAAiB9Z,KAAK9J,qBAAsBC,iBAAgB6J,KAAK9J,WAAWA,WAAWgvB,UACnF/tB,oBAAkB6I,KAAK9J,WAAWoD,QAAW0G,KAAK9J,WAAWE,kBAAmB+uB,qBACzFnlB,KAAKpF,iBAAmBzD,oBAAkB6I,KAAKzD,kBAQnD+gB,EAASnhB,UAAUipB,WAAa,WAC5BC,eAAazb,IAAI5J,KAAK5I,KAAKma,QAAS,QAASvR,KAAKslB,kBAAmBtlB,MACrEqlB,eAAazb,IAAI5J,KAAKuR,QAAS,WAAYvR,KAAKslB,kBAAmBtlB,MACnEqlB,eAAazb,IAAI5J,KAAKuR,QAAS,YAAavR,KAAKulB,iBAAkBvlB,MACnEA,KAAKwlB,eAAiB,GAAIC,kBAAezlB,KAAKuR,SAC1CmU,UAAW1lB,KAAKmjB,yBAAyBxI,KAAK3a,MAC9C2kB,WAAY3kB,KAAK2kB,WACjBgB,UAAW,YAEX3lB,KAAKojB,gBACLpjB,KAAKuR,QAAQqU,UAAsC,IAA3B5lB,KAAKuR,QAAQqU,SAAkB,EAAI5lB,KAAKuR,QAAQqU,WAShFtI,EAASnhB,UAAU0pB,gBAAkB,WACjC,GAAIC,KAGJ,IADA9lB,KAAK5I,KAA0B,iBAAE4I,KAAKV,cAClCU,KAAK4H,YACL,MAAOke,EAEXA,GAAQ7tB,MACJ8tB,OAAQ,SAAU/iB,MAAOhD,KAAMA,KAAKvI,kBAEnCN,oBAAkB6I,KAAKgmB,UACxBF,EAAQ7tB,MACJ8tB,OAAQ,UACR/iB,MAAOhD,QAGXA,KAAKimB,kBACLH,EAAQ7tB,MACJ8tB,OAAQ,cACR/iB,MAAOhD,QAGXA,KAAKwM,aACLsZ,EAAQ7tB,MACJ8tB,OAAQ,QACR/iB,MAAOhD,KAAMA,KAAKgO,gBAGtBhO,KAAKmB,iBACL2kB,EAAQ7tB,MACJ8tB,OAAQ,UACR/iB,MAAOhD,QAGXA,KAAKqB,cACLykB,EAAQ7tB,MACJ8tB,OAAQ,OACR/iB,MAAOhD,QAGXA,KAAKoW,WAAWtf,OAAS,GACzBgvB,EAAQ7tB,MACJ8tB,OAAQ,UAAW/iB,MAAOhD,QAGlC8lB,EAAQ7tB,MACJ8tB,OAAQ,SAAU/iB,MAAOhD,QAEzBA,KAAKkmB,kBACLJ,EAAQ7tB,MACJ8tB,OAAQ,cAAe/iB,MAAOhD,OAGtC,IAAImmB,GAAgBnmB,KAAKwe,gBAAgBxlB,OAAO,SAAU+D,GACtD,MAAuC,WAAhCA,EAAEZ,UAAU0G,iBA6BvB,QA3BI7C,KAAKuP,eAAiBvP,KAAKpB,YAAcoB,KAAKnB,oBAC9CmB,KAAK5I,KAAK8Y,6BAA+BlQ,KAAK5I,KAAK+Y,8BAAgCgW,EAAcrvB,SACjGgvB,EAAQ7tB,MACJ8tB,OAAQ,SAAU/iB,MAAOhD,QAG7BA,KAAKomB,gBACLN,EAAQ7tB,MACJ8tB,OAAQ,YAAa/iB,MAAOhD,QAGhCA,KAAKqmB,gBACLP,EAAQ7tB,MACJ8tB,OAAQ,YAAa/iB,MAAOhD,QAGhCA,KAAKoB,gBACL0kB,EAAQ7tB,MACJ8tB,OAAQ,aAAc/iB,MAAOhD,QAGjCA,KAAKsmB,mBACLR,EAAQ7tB,MACJ8tB,OAAQ,gBAAiB/iB,MAAOhD,QAGxCA,KAAKumB,sBAAsBT,GACpBA,GAEXxI,EAASnhB,UAAUoqB,sBAAwB,SAAUT,GACjD,GAAIU,GAAkBxmB,KAAKwe,gBAAgBxlB,OAAO,SAAU+D,GACxD,MAAuC,mBAAhCA,EAAEZ,UAAU0G,mBAEnB7C,KAAKhB,qBAAuBwnB,EAAgB1vB,UACtCK,oBAAkB6I,KAAKgmB,WAAahmB,KAAKgmB,QAAkB,SAAE,YAC/DhmB,KAAKgmB,QAAkB,SAAE,aACzBhmB,KAAKymB,iBAAkB,GAE3BX,EAAQ7tB,MACJ8tB,OAAQ,iBACR/iB,MAAOhD,UAGXA,KAAKvE,aAAairB,aAAe1mB,KAAKvE,aAAakrB,eAAiB3mB,KAAKvE,aAAauF,eACtF8kB,EAAQ7tB,MACJ8tB,OAAQ,OACR/iB,MAAOhD,QAGXA,KAAK4mB,gBAAgB5mB,KAAKnJ,UAC1BivB,EAAQ7tB,MACJ8tB,OAAQ,gBACR/iB,MAAOhD,QAGXA,KAAK6mB,gBACLf,EAAQ7tB,MACJ8tB,OAAQ,YACR/iB,MAAOhD,QAGXA,KAAKjC,sBACL+nB,EAAQ7tB,MACJ8tB,OAAQ,gBACR/iB,MAAOhD,QAGXA,KAAKwY,yBACLsN,EAAQ7tB,MACJ8tB,OAAQ,iBACR/iB,MAAOhD,QAGf8lB,EAAQ7tB,MACJ8tB,OAAQ,SACR/iB,MAAOhD,KAAK5I,SAGpBkmB,EAASnhB,UAAUyqB,gBAAkB,SAAU/vB,GAC3C,GAAI2N,GAAQxE,IACZ,OAAOnJ,GAAQiwB,KAAK,SAAU7d,GAC1B,MAAIA,GAAIpS,QACG2N,EAAMoiB,gBAAgB3d,EAAIpS,YAE3BoS,EAAI8d,WAAY9d,EAAI+d,qBAStC1J,EAASnhB,UAAU8qB,aAAe,WAC1BjnB,KAAK5I,MAAQ4I,KAAK5I,KAAKma,SACvB8T,eAAavE,OAAO9gB,KAAK5I,KAAKma,QAAS,QAASvR,KAAKslB,oBAY7DhI,EAASnhB,UAAU2G,IAAM,SAAUC,EAAOC,GAClChD,KAAKknB,cACLlnB,KAAKknB,aAAanjB,QAAQhB,EAAOC,EAAMhD,OAS/Csd,EAASnhB,UAAUgrB,OAAS,WACxB,GAAI3iB,GAAQxE,IACRA,MAAK+O,UACL/O,KAAK5I,KAAK2X,SAAU,EACpB/O,KAAK5I,KAAKgwB,YAEVpnB,KAAKqnB,QACLrnB,KAAK5I,KAAKiwB,OAAQ,EAElBrnB,KAAK5I,KAAKkwB,YAActnB,KAAKsnB,aAEjCC,iBAAgBlnB,OAAQL,KAAKuR,SAAWvR,KAAKuJ,eAC7CvJ,KAAK8C,KAAK,2BACV9C,KAAKf,aAAe,GAAI2O,GAAO5N,MAC/BA,KAAKwnB,WAAa,GAAI7U,IAAiB3S,MACvCA,KAAKkjB,YAAc,GAAIlW,GAAMhN,MAC7BA,KAAKmG,QbvsBK,QawsBVnG,KAAKynB,sBACLznB,KAAKtH,eAAgB,EAChBvB,oBAAkB6I,KAAK9J,aACxB8J,KAAK0nB,gBAAgB1nB,KAAK9J,YAE9B8J,KAAK2nB,WACD3nB,KAAKuR,QAAQjM,UAAUC,SAAS,eAAiBvF,KAAK4nB,gBAAgBC,WACtE7nB,KAAK5I,KAAKwwB,gBAAgBC,UAAY,gBAE1C7nB,KAAK8nB,aACL,IAAIC,GAAgBxe,gBAAc,OAASiI,GAAIxR,KAAKuR,QAAQC,GAAK,gBACjEhE,aAAUxN,KAAKuR,SAAU,cACpBpa,oBAAkB6I,KAAKgoB,SAAoC,gBAAjBhoB,eAA2D,IAA9BA,KAAKgoB,OAAO5pB,QAAQ,OAC5F4B,KAAKuR,QAAQnX,MAAM4tB,OAAShoB,KAAKgoB,QAEhC7wB,oBAAkB6I,KAAKqK,QAAkC,gBAAhBrK,cAAyD,IAA7BA,KAAKqK,MAAMjM,QAAQ,OACzF4B,KAAKuR,QAAQnX,MAAMiQ,MAAQrK,KAAKqK,OAEpCrK,KAAKuR,QAAQ1G,YAAYkd,EACzB,IAAIE,GAAsBjoB,KAAK5I,KAAKyuB,eACpC7lB,MAAK5I,KAAKyuB,gBAAkB,WACxB,GAAIC,KACJA,GAAUmC,EAAoBpmB,MAAM7B,KACpC,KAAK,GAAIpJ,GAAI,EAAGA,EAAIkvB,EAAQhvB,OAAQF,IACmB,kBAA/CkvB,EAAQ/uB,SAASH,EAAEI,WAAY,KAAK+uB,SACpCD,EAAQ/uB,SAASH,EAAEI,WAAY,KAAK+uB,OAAS,oBAGrD,OAAOD,GAGX9lB,MAAK5I,KAAc,KAAI4I,KAAc,KAAIA,KAAc,KAAIA,KAC3DA,KAAK5I,KAAK8wB,SAASH,GACD/nB,KAAKuR,QAAQwF,uBAAuB,iBAAiB,GAAGoR,WAAW,GACzEje,aAAa,WAAY,KAClBlK,KAAKuR,QAAQwF,uBAAuB,aAAa,GAAG9O,cAAc,YACxEiC,aAAa,OAAQ,YAC9BlK,KAAKymB,iBACLzmB,KAAKooB,sBAETpoB,KAAKolB,aACLplB,KAAKqoB,gBACL,IACIC,GAAoBtoB,KAAK5I,KAAyB,eAEtD4I,MAAK5I,KAAyB,gBAAI,SAAU4L,EAAMlJ,GAC9CwuB,EAAkBzmB,MAAM2C,EAAMpN,KAExBoN,GAAMuK,SAAW5X,oBAAkBqN,EAAkB,UACvDA,EAAMqN,cAAc7O,EAAMlJ,KAItCwjB,EAASnhB,UAAUisB,oBAAsB,WACrC,GAAIG,GAAiBvoB,KAAKwoB,cAAcC,aACpCC,EAAW1oB,KAAKuR,QAAQC,GAAK,sBAC7BmX,EAAY3oB,KAAKuR,QAAQC,GAAK,uBAC9BoX,EAAgBL,EAAetgB,cAAc,IAAMygB,GAAUhF,cAC7DmF,EAAiBN,EAAetgB,cAAc,IAAM0gB,GAAWjF,aACnEkF,GAActjB,UAAUsE,IAAI,YAC5Bif,EAAevjB,UAAUsE,IAAI,aAEjC0T,EAASnhB,UAAU2sB,gBAAkB,WAC5B3xB,oBAAkB6I,KAAK5I,KAAKqK,kBAC7BzB,KAAK5I,KAAKqK,gBAAgBqF,UAE9B9G,KAAKyB,gBAAkBzB,KAAK5I,KAAKqK,gBAAkB,GAAI6C,GAActE,KAAMA,KAAK5I,KAAKmN,iBAEzF+Y,EAASnhB,UAAUurB,gBAAkB,SAAUrpB,GAC3C,GAAImG,GAAQxE,IAIZ,IAHItJ,EAAgBsJ,QAChB3B,EAAOJ,WAAS,SAAUI,IAE1BA,YAAgBtC,QAASsC,EAAKvH,OAAS,GAAKgB,OAAOqE,UAAUC,eAAeC,KAAKgC,EAAK,GAAI,SAC1F2B,KAAKlD,SAAWuB,EAChB2B,KAAKlD,SAAS9D,OAAO,SAAU+D,GAC3B2X,WAAS,sBAAwB3X,EAAEtE,SAAUsE,EAAGyH,GAChC,IAAZzH,EAAEhD,OACFyK,EAAM3H,WAAW5E,KAAK8E,SAK9B,IAAIrG,EAAgBsJ,MAAO,CACvB,GAAI+oB,GAAW9qB,WAAS,SAAU+B,KAAK9J,WACvC8J,MAAKwnB,WAAW9T,kBAAkBqV,OAGlC/oB,MAAKwnB,WAAW9T,kBAAkBrV,IAa9Cif,EAASnhB,UAAU6sB,mBAAqB,WACpChpB,KAAKipB,mBACLjpB,KAAK5I,KAAK8xB,UAAYlpB,KAAKkpB,UAC3BlpB,KAAK5I,KAAKgsB,cAAgBpjB,KAAKojB,cAC/BpjB,KAAK5I,KAAKP,QAAUmJ,KAAKmpB,eAAenpB,KAAKnJ,SAC7CmJ,KAAK5I,KAAK8uB,iBAAmBlmB,KAAKkmB,iBAClClmB,KAAK5I,KAAKivB,eAAiBrmB,KAAKqmB,eAChCrmB,KAAK5I,KAAKuc,MAAQ3T,KAAK2T,MACvB3T,KAAK5I,KAAKgyB,gBAAkBppB,KAAKopB,gBACjCppB,KAAK5I,KAAKoV,YAAcxM,KAAKwM,YAE7BxM,KAAK5I,KAAK4W,aAAeqb,sBAAoBrpB,KAAKgO,cAElDhO,KAAK5I,KAAKkyB,cAAgBtpB,KAAKspB,cAC/BtpB,KAAK5I,KAAKgK,eAAiBpB,KAAKoB,eAChCpB,KAAK5I,KAAKiK,aAAerB,KAAKqB,aAC9BrB,KAAK5I,KAAKI,eAAiBwI,KAAKxI,eAChCwI,KAAK5I,KAAK2G,qBAAuBiC,KAAKjC,qBACtCiC,KAAK5I,KAAKoY,2BAA6BxP,KAAKwP,2BAC5CxP,KAAK5I,KAAKohB,wBAA0BxY,KAAKwY,wBACzCxY,KAAK5I,KAAKmyB,uBAAyBvpB,KAAKupB,uBACxCvpB,KAAK5I,KAAKoyB,qBAAuBxpB,KAAKwpB,qBACtCxpB,KAAK5I,KAAKqyB,iBAAmBzpB,KAAKypB,iBAClCzpB,KAAK5I,KAAKiT,MAAQrK,KAAKqK,MACvBrK,KAAK5I,KAAK4wB,OAAShoB,KAAKgoB,OACxBhoB,KAAK5I,KAAKsyB,aAAe1pB,KAAK0pB,aAC9B1pB,KAAK5I,KAAK+J,gBAAkBnB,KAAKmB,gBACjCnB,KAAK5I,KAAKgT,cAAgBpK,KAAKoK,cAC/BpK,KAAK5I,KAAKkK,cAAgBtB,KAAKsB,cAC/BtB,KAAK5I,KAAKuyB,YAAc3pB,KAAK2pB,YAC7B3pB,KAAK5I,KAAKwyB,eAAiB5pB,KAAK4pB,eAChC5pB,KAAK5I,KAAKyyB,iBAAmB7pB,KAAK6pB,iBAClC7pB,KAAK5I,KAAK6F,oBAAsB+C,KAAK/C,oBACrC+C,KAAK5I,KAAK4H,oBAAsBgB,KAAKhB,oBACrCgB,KAAK5I,KAAKwwB,gBAAkByB,sBAAoBrpB,KAAK4nB,iBACrD5nB,KAAK5I,KAAK0yB,UAAY9pB,KAAK8pB,UAC3B9pB,KAAK5I,KAAK2yB,UAAY/pB,KAAK+pB,UAC3B/pB,KAAK5I,KAAKyvB,eAAiB7mB,KAAK6mB,eAChC7mB,KAAK5I,KAAK4uB,QAAUqD,sBAAoBrpB,KAAKgqB,kBAE7ChqB,KAAK5I,KAAK6yB,gBAAkBjqB,KAAKiqB,gBACjCjqB,KAAK5I,KAAKkvB,kBAAoBtmB,KAAKsmB,kBACnCtmB,KAAK5I,KAAKK,eAAiB4xB,sBAAoBrpB,KAAKvI,gBACpDuI,KAAK5I,KAAK6N,kBAAoBokB,sBAAoBrpB,KAAKiF,mBACvDjF,KAAK5I,KAAK+G,aAAekrB,sBAAoBrpB,KAAK7B,cAClD6B,KAAK5I,KAAKC,eAAiBgyB,sBAAoBrpB,KAAK3I,gBAEpD2I,KAAK5I,KAAKgf,WAAaiT,sBAAoBrpB,KAAKoW,YAChDpW,KAAK5I,KAAK8yB,iBAAmBb,sBAAoBrpB,KAAKkqB,kBACtDlqB,KAAK5I,KAAK8jB,UAAYmO,sBAAoBrpB,KAAKkb,WAC/Clb,KAAK5I,KAAK4qB,OAASqH,sBAAoBrpB,KAAKgiB,QAC5ChiB,KAAK5I,KAAK+yB,iBAAmBnqB,KAAKmqB,iBAClCnqB,KAAK5I,KAAK6uB,iBAAmBoD,sBAAoBrpB,KAAKoqB,kBACtDpqB,KAAK5I,KAAKizB,gBAAkBhB,sBAAoBrpB,KAAKqqB,iBACrDrqB,KAAK5I,KAAKqE,aAAeuE,KAAKsqB,sBAE9BtqB,KAAK5I,KAAK2Z,YAAcsY,sBAAoBrpB,KAAK+Q,aAEjD/Q,KAAK5I,KAAKgvB,eAAiBiD,sBAAoBrpB,KAAKomB,gBACpDpmB,KAAK5I,KAAKwH,WAAaoB,KAAKpB,WAC5BoB,KAAK5I,KAAKmY,cAAgBvP,KAAKuP,cAC/BvP,KAAK5I,KAAKmzB,SAAWlB,sBAAoBrpB,KAAKuqB,SAE9CvqB,MAAK5I,KAA0B,uBAAI4I,KAA0B,sBAE7DA,MAAK5I,KAAuB,eAAI,CAEhC4I,MAAK5I,KAA6B,oBAAI4I,KAAKwqB,qBAE/ClN,EAASnhB,UAAUsuB,cAAgB,SAAUznB,GACzChD,KAAKmG,QAAQnO,YAAU,OAAQgL,GAAOA,IAE1Csa,EAASnhB,UAAUuuB,wBAA0B,SAAU1nB,GACnD,IAAK7L,oBAAkB6L,EAAK3C,UAAY2C,EAAK3C,OAAOiF,UAAUC,SAAS,qBAChEvC,EAAK3C,OAAOiF,UAAUC,SAAS,uBAAyBvC,EAAK3C,OAAOiF,UAAUC,SAAS,oBACtFvF,KAAKiF,kBAAkB0lB,gBACrBxzB,oBAAkB6L,EAAK3E,OAAS2E,EAAK3E,KAAsB,kBAA0B,IAAnB2E,EAAK4D,UAAmBzP,oBAAkB6L,EAAK3E,OAEnH,YADA2E,EAAKkD,QAAS,IAK1BoX,EAASnhB,UAAUyuB,eAAiB,WAChC,GAAIpmB,GAAQxE,IACZA,MAAK5I,KAAKyzB,aAAe,SAAU7nB,GAC/BwB,EAAMkmB,wBAAwB1nB,GAC9BwB,EAAM2B,Qbn3BQ,eam3BqBnD,IAEvChD,KAAK5I,KAAK0zB,eAAiB,SAAU9nB,GACjCwB,EAAMkmB,wBAAwB1nB,GAC9BwB,EAAM2B,QbvwBU,iBauwBqBnD,IAEzChD,KAAK5I,KAAK2zB,YAAc,SAAU/nB,GAC9B,GAAIwB,EAAMzG,sBAAwBiF,EAAKgoB,yBACnCxmB,EAAMpN,KAAK8U,gBAAgBpV,SAAW0N,EAAMpN,KAAK6zB,gBAAgBC,mBAAmBp0B,OAEpF,IAAK,GAAIF,GAAI,EAAGA,EAAI4N,EAAM/F,UAAU3H,OAAQF,IACpC4N,EAAM/F,UAAU1H,SAASH,EAAEI,WAAY,KAAK+f,uBAAuB,6BAA6BjgB,QAChG0N,EAAMpN,KAAK6zB,gBAAuC,mBAAEzmB,EAAM/F,UAAU1H,SAASH,EAAEI,WAAY,KAAMwN,EAAMpH,wBAAwBrG,SAASH,EAAEI,WAAY,KAAK8C,MAIvK0K,GAAM2lB,iBAAmB3lB,EAAMpN,KAAK+yB,iBACpC3lB,EAAMmM,Obl4BO,cak4BoB3N,GACjCwB,EAAM2B,Qbn4BO,cam4BqBnD,IAEtChD,KAAK5I,KAAK+zB,cAAgB,SAAUnoB,GAChCwB,EAAM2lB,iBAAmB3lB,EAAMpN,KAAK+yB,iBAC/BhzB,oBAAkB6L,EAAK3E,OACxBmG,EAAMmM,Obp4BK,gBao4BwB3N,GAEvCwB,EAAM2B,Qbt4BS,gBas4BqBnD,IAExChD,KAAK5I,KAAKg0B,WAAa,SAAUpoB,GAC7BwB,EAAMke,oBACNle,EAAM2B,Qbl4BM,aak4BqBnD,IAErChD,KAAK5I,KAAKi0B,mBAAqB,SAAUroB,GACrCwB,EAAMmM,OAAO,gBAAiB3N,GAC9BA,EAAOwB,EAAM2O,aAEjBnT,KAAK5I,KAAKk0B,iBAAmB,SAAUtoB,GACnCwB,EAAMmM,OAAO,cAAe3N,GAC5BA,EAAOwB,EAAM2O,aAEjBnT,KAAK5I,KAAKm0B,eAAiB,SAAUvoB,GACjCwB,EAAM2B,Qbv5BU,iBau5BqBnD,IAEzChD,KAAK5I,KAAKo0B,kBAAoBxrB,KAAKyqB,cAAc9P,KAAK3a,MACtDA,KAAK5I,KAAKq0B,oBAAsBzrB,KAAKyqB,cAAc9P,KAAK3a,MACxDA,KAAK5I,KAAKs0B,yBAA2B1rB,KAAKyqB,cAAc9P,KAAK3a,MAC7DA,KAAK5I,KAAKu0B,uBAAyB3rB,KAAKyqB,cAAc9P,KAAK3a,MAC3DA,KAAK5I,KAAKw0B,kBAAoB5rB,KAAKyqB,cAAc9P,KAAK3a,MACtDA,KAAK5I,KAAKy0B,kBAAoB7rB,KAAKyqB,cAAc9P,KAAK3a,MACtDA,KAAK5I,KAAK00B,eAAiB9rB,KAAKyqB,cAAc9P,KAAK3a,MACnDA,KAAK5I,KAAK20B,gBAAkB/rB,KAAKyqB,cAAc9P,KAAK3a,MACpDA,KAAK5I,KAAK40B,eAAiBhsB,KAAKyqB,cAAc9P,KAAK3a,MACnDA,KAAK5I,KAAK60B,gBAAkBjsB,KAAKyqB,cAAc9P,KAAK3a,MACpDA,KAAK5I,KAAK80B,aAAelsB,KAAKyqB,cAAc9P,KAAK3a,MACjDA,KAAK5I,KAAK+0B,eAAiBnsB,KAAKyqB,cAAc9P,KAAK3a,MACnDA,KAAK5I,KAAKg1B,YAAcpsB,KAAKyqB,cAAc9P,KAAK3a,MAChDA,KAAK5I,KAAKi1B,SAAWrsB,KAAKyqB,cAAc9P,KAAK3a,MAC7CA,KAAK5I,KAAKk1B,WAAatsB,KAAKyqB,cAAc9P,KAAK3a,MAC/CA,KAAK5I,KAAKm1B,gBAAkBvsB,KAAKyqB,cAAc9P,KAAK3a,MACpDA,KAAK5I,KAAKo1B,WAAaxsB,KAAKyqB,cAAc9P,KAAK3a,MAC/CA,KAAK5I,KAAKq1B,YAAczsB,KAAKyqB,cAAc9P,KAAK3a,MAChDA,KAAK5I,KAAKs1B,WAAa1sB,KAAKyqB,cAAc9P,KAAK3a,MAC/CA,KAAK5I,KAAKu1B,YAAc,SAAU3pB,GAG9B,IAFA,GAAIgC,GAAOR,EAAM/F,UAEVuG,EAAKhC,EAAkB,UAAGsC,UAAUC,SAAS,iBAChDvC,EAAkB,UAEtBwB,GAAM2B,Qbh5BO,cag5BqBnD,IAEtChD,KAAK5I,KAAK6rB,KAAO,WAEb,GADAze,EAAMpN,KAAKkQ,GAAG,cAAe9C,EAAMskB,gBAAiBtkB,IAC/CrN,oBAAkBqN,EAAM0iB,cAAe,CAExC1iB,EAAM0iB,aAAe1iB,EAAMpN,KAAsB,aAAI,GAAIw1B,GAAWpoB,EAAMpN,QAGlF4I,KAAK5I,KAAKy1B,cAAgB7sB,KAAKyqB,cAAc9P,KAAK3a,MAClDA,KAAK5I,KAAK01B,cAAgB9sB,KAAKyqB,cAAc9P,KAAK3a,MAClDA,KAAK+sB,6BACL/sB,KAAKgtB,qBACLhtB,KAAKitB,2BACLjtB,KAAKktB,yBACLltB,KAAKmtB,qBACLntB,KAAKotB,sBAET9P,EAASnhB,UAAUkxB,cAAgB,SAAUC,EAAYC,GACrD,IAAK,GAAI5zB,GAAI,EAAGA,EAAI2zB,EAAWluB,MAAMtI,OAAQ6C,IACrC4zB,EACA/f,YAAU8f,EAAWluB,MAAMrI,SAAS4C,EAAE3C,WAAY,MAAO,iBAGzDuT,eAAa+iB,EAAWluB,MAAMrI,SAAS4C,EAAE3C,WAAY,MAAO,kBAIxEsmB,EAASnhB,UAAUqxB,cAAgB,WAC/B,MAAoB,SAAhBxtB,KAAKgoB,SAA8D,IAAzChoB,KAAKgoB,OAAOhxB,WAAWoH,QAAQ,MAOjEkf,EAASnhB,UAAU4wB,2BAA6B,WAC5C,GAAIvoB,GAAQxE,IACZA,MAAK5I,KAAKq2B,UAAY,SAAUzqB,GAK5B,GAJAwB,EAAMkpB,oBACNlpB,EAAMke,oBACNle,EAAMmpB,aAAanpB,EAAM/F,WACzB+F,EAAMmM,OAAO,eAAgB3N,GACzBhN,EAAawO,KAAWpL,EAAUoL,KAAWA,EAAM0P,gBAAiB,CACpE,GAAI0Z,OAAM,EAENA,GADAppB,EAAM2O,YAAYzB,OACZ,EAGA,EAEVgD,WAAS,gCAAiCkZ,EAAM,GAAIppB,GAExD,GAAIA,EAAMgpB,iBAAmBhpB,EAAM9L,cAG/B,IAAK,GAFDsM,GAAOR,EAAMkK,kBAAkB1J,KAC/B6oB,KAAeroB,MAAMnJ,KAAK2I,GACrBpO,EAAIi3B,EAAU/2B,OAAS,EAAGF,EAAI,EAAGA,IACtC,IAAKsD,EAAS2zB,EAAU92B,SAASH,EAAEI,WAAY,MAAO,CAC9C62B,EAAU92B,SAASH,EAAEI,WAAY,KAAKqR,oBACtC7D,EAAM6oB,cAAcQ,EAAU92B,SAASH,EAAEI,WAAY,MAAM,EAE/D,OAKZ,GAAIwN,EAAMzG,sBAAwByG,EAAMS,kBAAkB6oB,mBAAwD,WAAnCtpB,EAAM2O,YAAuB,QAAqD,aAAnC3O,EAAM2O,YAAuB,QAAmB,CAG1K,GADA3O,EAAMpN,KAAK6zB,gBAA4C,0BACb,WAAtCzmB,EAAMpN,KAAK6N,kBAAkBhC,KAAmB,CAChD,GACInJ,GAAQ0K,EAAMpH,wBAAwBgB,QAAQoG,EAAMpN,KAAK6zB,gBAAsB,KACnFzmB,GAAMpN,KAAK6zB,gBAAuC,mBAAEzmB,EAAM/F,UAAU1H,SAAS+C,EAAM9C,WAAY,KAAM8C,IAG7G0K,EAAM2B,Qb7gCK,Ya6gCqBnD,GAChCwB,EAAM9L,eAAgB,EAG1B,IAAIsL,GAAWhE,IACfA,MAAK5I,KAAKmW,gBAAkB,SAAUvK,GAClC,GACIzD,GAAcvH,YAAU,SAAUgL,EACtC,KAAMhN,EAAagO,KAAc5K,EAAU4K,IAActN,EAAgBsJ,QAA0B,SAAhBT,EAC/EyE,EAAS2M,OAAO,oBAAqB3N,GACrCA,EAAQgB,EAAqB,gBAE5B,IAAiC,IAA7BA,EAASlH,SAAShG,QAAgBsC,EAAU4K,IAAaA,EAAS9N,qBAAsBC,eAAa,CAC1G,GAAIkD,GAAK2K,EAAS9N,UAClB8N,GAASwjB,WAAW9T,kBAAkBra,EAAGnD,WAAWmF,MACpD2H,EAAK0O,OAAS1N,EAAS5M,KAAKlB,WAA0B,WAAEmF,KAAO2I,EAASlH,SAiB5E,GAfK9G,EAAagO,IAActN,EAAgBsJ,OAAU7I,oBAAkB6M,EAAS9N,cAC7E8J,KAAKwZ,YACL9E,WAAS,cAAc,EAAM1R,GAEjCgB,EAAS2M,OAAO,gBAAiB3N,IAGrChH,SAAOgH,EAAMgB,EAASmP,aAClBnP,EAAS/G,sBACT+F,EAAK0O,OAAS1O,EAAK0O,OAAOlM,SAE1BxB,EAAStL,gBACTsH,KAAKyY,cAAcqF,sBAAwB9Z,EAAS8Z,wBAGnD9d,KAAKwZ,WAAY,CAClB,GAAIuU,GAAoB,GAAIC,WAI5B,OAHAhqB,GAASmC,Qb3iCI,kBa2iC4BnD,EAAM,SAAUirB,GACrDF,EAAkBG,QAAQD,KAEvBF,IAGf/tB,KAAK5I,KAAK0L,IAAM,SAAUG,EAAMD,GACxBwB,EAAM0iB,cACN1iB,EAAM0iB,aAAapkB,IAAIG,EAAMD,KAIzCsa,EAASnhB,UAAUixB,mBAAqB,WACpC,GAAI5oB,GAAQxE,IACZA,MAAK5I,KAAK+2B,aAAe,SAAUnrB,GAC/B,KAAKA,EAAK/J,KAAKuY,KAAOhN,EAAMpN,KAAKma,QAAQC,GAAK,iBAA6C,IAA3BhN,EAAM0hB,kBACjEljB,EAAK/J,KAAKuY,KAAOhN,EAAMpN,KAAKma,QAAQC,GAAK,eAAyC,IAAzBhN,EAAM6hB,gBAC/DrjB,EAAK/J,KAAKuY,KAAOhN,EAAMpN,KAAKma,QAAQC,GAAK,eAA2C,IAA3BhN,EAAM0hB,kBAFpE,CAKA,GAAIkI,GAAkB,GAAIJ,WAO1B,OANAxpB,GAAM2B,QbhjCQ,eagjCqBnD,EAAM,SAAUqrB,GAC1CA,EAAYnoB,QACb1B,EAAMmM,ObljCA,eakjC4B3N,GAEtCorB,EAAgBF,QAAQG,KAErBD,IAEXpuB,KAAK5I,KAAKk3B,cAAgB,SAAUtrB,GAChC,GACI3C,GAASmE,EAAMpN,KAAK6zB,gBAAiC,YACpD9zB,qBAAkBkJ,KAAYA,EAAOiF,UAAUC,SAAS,sBAAuBlF,EAAOiF,UAAUC,SAAS,wBAC1GvC,EAAKkD,QAAS,EAElB,IAAIkoB,GAAkB,GAAIJ,WAI1B,OAHAxpB,GAAM2B,QAAQnO,YAAU,OAAQgL,GAAOA,EAAM,SAAUurB,GACnDH,EAAgBF,QAAQK,KAErBH,GAEXpuB,KAAK5I,KAAKo3B,UAAY,SAAUxrB,GAC5B,IAAK7L,oBAAkB6L,EAAKzE,MAAQyE,EAAKzE,IAAI+G,UAAUC,SAAS,gBAE5D,YADAvC,EAAKkD,QAAS,EAGlB,IAAIkoB,GAAkB,GAAIJ,WAI1B,OAHAxpB,GAAM2B,QbtiCK,YasiCqBnD,EAAM,SAAUyrB,GAC5CL,EAAgBF,QAAQO,KAErBL,IAGf9Q,EAASnhB,UAAU+wB,uBAAyB,WACxC,GAAI1oB,GAAQxE,IACZA,MAAK5I,KAAKwM,gBAAkB,SAAUZ,GAC9BwB,EAAMkqB,iBACNlqB,EAAMkqB,iBAAkB,EACxBlqB,EAAMpN,KAAKlB,YAAewb,OAAQlN,EAAM1H,SAAUyO,MAAOtN,WAAS,QAASuG,EAAMpN,KAAKlB,eAGtD,mBAA5B8M,EAAK9H,OAAOqE,cACZiF,EAAM6f,uBAEV7f,EAAM2B,QbvmCO,kBaumCyBnD,KAG9ChD,KAAK5I,KAAKu3B,SAAW,SAAU3rB,GAC3B,GAAIwB,EAAMpN,KAAKw3B,oBAAqB,CAChC,GAAIC,GAAerqB,EAAMpN,KAAK03B,kBAAkBC,YAAYxd,QAAQwF,uBAAuB,cAAc,IACpG5f,oBAAkB03B,IAAiBA,EAAard,KAAOhN,EAAM+M,QAAQC,GAAK,6BAC3ExO,EAAKkD,QAAS,GAGtB,GAAIkoB,GAAkB,GAAIJ,WAO1B,OANAxpB,GAAM2B,Qb5jCI,Wa4jCqBnD,EAAM,SAAUgsB,GACtCA,EAAa9oB,QACd1B,EAAMmM,Ob9jCJ,Wa8jC4Bqe,GAElCZ,EAAgBF,QAAQc,KAErBZ,GAEXpuB,KAAK5I,KAAK63B,UAAY,SAAUjsB,GAC5BwB,EAAM2B,QbnkCK,YamkCqBnD,GAChCwB,EAAMmM,ObpkCK,YaokCoB3N,IAEnChD,KAAK5I,KAAK83B,SAAW,SAAUlsB,GAC3B,GACImsB,GAAU,GAAInB,WAGlB,OAFAhrB,GAAc,QAAImsB,EAClB3qB,EAAMmM,ObxkCI,WawkCoB3N,GACvBmsB,GAEXnvB,KAAK5I,KAAKg4B,SAAW,SAAUpsB,GAC3BwB,EAAM2B,QbtkCI,WaskCqBnD,GAC/BwB,EAAMmM,ObvkCI,WaukCoB3N,IAElChD,KAAK5I,KAAKi4B,gBAAkB,SAAUrsB,GAClCwB,EAAM2B,QbpkCW,kBaokCqBnD,GACtCwB,EAAMmM,ObrkCW,kBaqkCoB3N,IAEzChD,KAAK5I,KAAKk4B,eAAiB,SAAUtsB,GACjCwB,EAAM2B,Qb1kCU,iBa0kCqBnD,GACrCwB,EAAMmM,Ob3kCU,iBa2kCoB3N,IAExChD,KAAK5I,KAAKm4B,YAAc,SAAUvsB,GAC9BwB,EAAM2B,QbtlCO,caslCqBnD,GAClCwB,EAAMmM,ObvlCO,caulCoB3N,IAErChD,KAAK5I,KAAKo4B,kBAAoB,SAAUxsB,GACpCwB,EAAM2B,QbplCa,oBaolCqBnD,GACxCwB,EAAMmM,ObrlCa,oBaqlCoB3N,IAE3ChD,KAAK5I,KAAKq4B,YAAc,SAAUzsB,GACE,SAA5BwB,EAAM/I,aAAaC,MACnB8I,EAAM2B,Qb7lCG,ca6lCyBnD,GAEtCwB,EAAMmM,Ob/lCO,ca+lCoB3N,KAGzCsa,EAASnhB,UAAUuxB,kBAAoB,WACnC,GAAIlpB,GAAQxE,IACRA,MAAK+Q,cACD/Q,KAAK+O,SAAkD,IAAvC/O,KAAK0O,kBAAkB1J,KAAKlO,OAC5C44B,WAAW,WAEP,GADAlrB,EAAMmrB,wBACFnrB,EAAM0J,kBAGN,IAAK,GAFDiL,GAAc3U,EAAMpH,wBACpB4H,EAAOR,EAAMkK,kBAAkB1J,KAC1BpO,EAAI,EAAGA,EAAIoO,EAAKlO,OAAQF,IAAK,CAClC,GAAIoM,IAAS3E,KAAM8a,EAAYpiB,SAASH,EAAEI,WAAY,KAClDuH,IAAKyG,EAAKjO,SAASH,EAAEI,WAAY,KACrCwN,GAAMvF,aAAaO,YAAYwD,KAGxC,GAGHhD,KAAK2vB,0BAIjBrS,EAASnhB,UAAU8sB,iBAAmB,WAKlC,GAAIjpB,KAAK9J,YAAcQ,EAAgBsJ,MAAO,CAC1C,GAAI3B,GAAO2B,KAAKlD,SACZ8yB,EAAY3xB,WAAS,QAAS+B,KAAK9J,WACvC8J,MAAK5I,KAAKlB,YAAewb,OAAQrT,EAAMkN,MAAOqkB,OAG9C5vB,MAAK5I,KAAKlB,WAAe8J,KAAK9J,qBAAsBC,eAChC,GAAIA,eAAY6J,KAAK9J,WAAWA,WAAY8J,KAAK9J,WAAW25B,aAAc7vB,KAAK9J,WAAWE,SAA1G4J,KAAKlD,QAEb,IAAIkD,KAAK9J,qBAAsBC,iBAAgB6J,KAAK9J,WAAWA,WAAWgvB,SAAWllB,KAAK9J,WAAWoD,OAAQ,CACzG0G,KAAK5I,KAAKlB,WAA0B,WAAEmF,KAAO9B,EAAYyG,KAAK9J,WAA0B,WAAEmF,MAC1F2E,KAAK5I,KAAKlB,WAAqB,MAAI8J,KAAK9J,WAAWoD,KAEnD,IAAIiV,GAAUvO,IACT7I,qBAAkB6I,KAAK5I,KAAKlB,WAAqB,QAClD8J,KAAK5I,KAAKlB,WAAqB,MAAEqe,KAAK,SAAUxX,GAC5C,GAAI1D,GAAKkV,EAAQnX,KAAKlB,UACtBmD,GAAkB,WAAE6rB,SAAU,EAC9B7rB,EAAuB,iBAAI,EAC3BA,EAAkB,WAAEgC,KAAO0B,EAAE2U,OAC7BrY,EAAe,QAAI,GAAIy2B,mBAKvCxS,EAASnhB,UAAU8wB,yBAA2B,WAC1C,GAAIzoB,GAAQxE,IACZA,MAAK5I,KAAK24B,YAAc,SAAU/sB,GAkC9B,GAjCyB,YAArBA,EAAKzD,aAA6ByD,EAAK3C,QAAU2C,EAAK3C,OAAOqjB,eAC7D1gB,EAAK3C,OAAOqjB,cAAcpe,UAAUC,SAAS,yBAC7CvC,EAAKkD,QAAS,GAGE,YADFlO,YAAU,cAAegL,IAEvCwB,EAAMmM,OAAO,qBAEb3a,EAAawO,IAAUA,EAAMzG,uBACJ,kBAArBiF,EAAKzD,aACLiF,EAAMmP,MAAM3D,OAAO,0BACnBxL,EAAMsT,eAEoB,cAArB9U,EAAKzD,aAAqD,KAAtByD,EAAK0S,aAC9ClR,EAAMmP,MAAM3D,OAAO,wBAEE,gBAAhBhN,EAAK9H,QACVsJ,EAAMmP,MAAM3D,OAAO,yBAG3BxL,EAAMmM,OAAO,eAAiBlW,WAAYuI,IACrChN,EAAawO,IAAWrN,oBAAkBqN,EAAM4G,eAAkB1U,EAAgB8N,IAClC,IAA7CA,EAAMpN,KAAKK,eAAeZ,QAAQC,QAAyD,IAAzC0N,EAAMpN,KAAKC,eAAeC,IAAIR,SACpF0N,EAAMmM,OAAO,gBAAkB7T,SAAU0H,EAAMpN,KAAKlB,aACpDsO,EAAMpN,KAAKoK,eAAgBtL,WAAYsO,EAAM2O,YAAYzB,SAAU,GAC/Dva,oBAAkBqN,EAAMpN,KAAwB,kBAAElB,cAClDsO,EAAMpN,KAAK6H,aAAaZ,KAAK2xB,YAAcxrB,EAAMpN,KAAKlB,qBAAsBC,eACxEqO,EAAMpN,KAAKlB,WACViB,oBAAkBqN,EAAMpN,KAAKlB,YAAc,GAAIC,eAAgB,GAAIA,eAAYqO,EAAMpN,KAAKlB,YAC/FsO,EAAMpN,KAAK6H,aAAaZ,KAAK4xB,wBAAyB,EACtDzrB,EAAMpN,KAAKuc,MAAQnP,EAAMpN,KAAKuc,gBAAiBC,SAAQpP,EAAMpN,KAAKuc,MAAQ,GAAIC,WAGjE,cAAjBpP,EAAMtJ,QAA2C,eAAjBsJ,EAAMtJ,OAAyB,CAC/D,GAAIg1B,GAAoB,GAAIlC,WAO5B,OANAxpB,GAAM2B,Qb5vCG,ca4vCyBnD,EAAM,SAAUyW,GACzCA,EAAWvT,QACZ1B,EAAMmM,Ob5sCP,Ya4sCgC8I,GAEnCyW,EAAkBhC,QAAQzU,KAEvByW,IAGflwB,KAAK5I,KAAK+4B,eAAiB,SAAUntB,GA+BjC,GA9BAwB,EAAMmM,OAAO,iBAAkB3N,GAC/BwB,EAAMke,oBACNle,EAAM4rB,sBACmB,YAArBptB,EAAKzD,aACLiF,EAAMmM,OAAO,qBAEjBnM,EAAMmM,OAAO,kBAAoBlW,WAAYuI,IACpB,QAArBA,EAAKzD,aAAgE,QAAtCiF,EAAM/I,aAAaQ,gBAAkE,WAAtCuI,EAAM/I,aAAaQ,gBACjGuI,EAAMmM,Ob1tCA,Wa0tCwB3N,GAET,cAArBA,EAAKzD,aACLiF,EAAMmM,ObvsCC,YausCwB3N,GAEnCwB,EAAMmM,OAAO,oBAAqB3N,GACT,SAArBA,EAAKzD,aAA0BiF,EAAM4R,WAAWtY,IAAI,SAAUuyB,GAAM,OAA+B,IAAxBA,EAAGC,mBAA8Bx5B,QAC5G0N,EAAMpN,KAAKm5B,UAEK,WAAhBvtB,EAAK9H,SAC6C,KAA9CsJ,EAAM4G,aAAkC,sBAAY5G,EAAMzG,sBAAyByG,EAAM9L,eAAmB1C,EAAawO,IAAUA,EAAMzG,sBACzIyG,EAAM+e,aAGW,cAArBvgB,EAAKzD,cAC4B,KAA7BiF,EAAMnN,eAAeC,MAAckN,EAAMzG,sBAAyByG,EAAM9L,eAAmB1C,EAAawO,IAAUA,EAAMzG,sBACxHyG,EAAM+e,aAGM,gBAAhBvgB,EAAK9H,QAA4BsJ,EAAM0J,mBACvC1J,EAAMgf,cAEW,cAAjBhf,EAAMtJ,QAA2C,eAAjBsJ,EAAMtJ,OAAyB,CAC/DsJ,EAAMtJ,OAA0B,cAAjBsJ,EAAMtJ,OAAyB,WAAa,WAC3D,IAAIs1B,IAAkBhsB,EAAMisB,iBACxBhX,GACApb,KAAMmyB,EACNE,UAAWlsB,EAAMksB,UACjBC,aAAcnsB,EAAMmsB,aACpB/S,gBAAiBpZ,EAAMoZ,gBACvBre,YAAaiF,EAAMtJ,OACnBqD,IAAKiG,EAAMosB,aAEfpsB,GAAM2B,Qb3yCM,iBa2yCyBsT,GACfjV,EAAMpH,wBAAwBpE,OAAO,SAAU+D,GACjE,MAAOA,GAAEtE,WAAa+3B,EAAe,GAAG/3B,WAEvB3B,QACjB0N,EAAM4jB,sBAEV5jB,EAAMtJ,OAAS,GACfsJ,EAAMisB,gBAAkBjsB,EAAMosB,aAAepsB,EAAMoZ,uBAElD,CACD,GAAIpZ,EAAMpN,KAAKiX,gBAAkB7J,EAAMzG,sBAA8C,YAAtBiF,EAAgB,UAAiB,CAC5F,GAAI6tB,GAAiBrsB,EAAMpN,KAAKma,QAAQtJ,cAAc,qBAClD6oB,EAAgBtsB,EAAMpN,KAAKma,QAAQtJ,cAAc,mBACrD4oB,GAAez2B,MAAM4tB,OAAS8I,EAAc12B,MAAM4tB,OAAS,OAE/DxjB,EAAM2B,Qb3zCM,iBa2zCyBnD,MAIjDsa,EAASnhB,UAAU6wB,mBAAqB,WACpC,GAAIxoB,GAAQxE,KAERgE,EAAWhE,IACfA,MAAK5I,KAAKy0B,kBAAoB,SAAU7oB,GACpCwB,EAAM2B,QblxCa,oBakxCqBnD,GACxCwB,EAAMmM,ObnxCa,oBamxCoB3N,IAE3ChD,KAAK5I,KAAK25B,gBAAkB,SAAU/tB,GAClCwB,EAAMmM,OAAO,kBAAmB3N,GAChCwB,EAAM2B,Qb3uCW,kBa2uCqBnD,IAE1ChD,KAAK5I,KAAKkW,aAAe,SAAUtK,GAC3B7L,oBAAkB6I,KAAKwZ,YACvB9E,WAAS,cAAc,EAAO1R,GAG9B0R,WAAS,aAAc1U,KAAKwZ,WAAYxW,GAE5CgB,EAAS/E,aAAaO,YAAYwD,IAEtChD,KAAK5I,KAAKiW,cAAgB,SAAUrK,GAC5B7L,oBAAkB6I,KAAKwZ,YACvB9E,WAAS,cAAc,EAAO1R,GAG9B0R,WAAS,aAAc1U,KAAKwZ,WAAYxW,GAE5CgB,EAAS/E,aAAaC,WAAW8D,IAErChD,KAAK5I,KAAK45B,iBAAmB,SAAUhuB,GACnCwB,EAAMmM,Ob1zCY,mBa0zCoB3N,GACtCwB,EAAM2B,Qb3zCY,mBa2zCqBnD,IAE3ChD,KAAK5I,KAAK65B,gBAAkB,SAAUjuB,GAClCwB,EAAMmM,Obh0CW,kBag0CoB3N,GACrCwB,EAAM2B,Qbj0CW,kBai0CqBnD,IAE1ChD,KAAK5I,KAAKiW,cAAgB,SAAUrK,GAChCwB,EAAMvF,aAAaC,WAAW8D,KAGtCsa,EAASnhB,UAAUgxB,mBAAqB,WACpC,GAAI3oB,GAAQxE,IACZA,MAAK5I,KAAK85B,mBAAqB,SAAUluB,GACrCwB,EAAM2B,Qb1wCc,qBa0wCqBnD,IAE7ChD,KAAK5I,KAAK+5B,aAAe,SAAUnuB,GAC/BwB,EAAM2B,QbzwCQ,eaywCqBnD,IAEvChD,KAAK5I,KAAKg6B,QAAU,SAAUpuB,GAC1B,GAAIwB,EAAMpN,KAAKi6B,OAEX,YADAruB,EAAKkD,QAAS,EAGlB1B,GAAMmM,Ob1wCM,ca0wCoB3N,GAChCwB,EAAM2B,QbvxCG,UauxCqBnD,IAElChD,KAAK5I,KAAKk6B,QAAU,SAAUtuB,GAC1B,GAAIwB,EAAMpN,KAAKi6B,OAEX,YADAruB,EAAKkD,QAAS,EAGlB1B,GAAMmM,ObhxCM,cagxCoB3N,GAChCA,EAAKkD,QAAS,IAStBoX,EAASnhB,UAAUwrB,SAAW,WAC1B3nB,KAAKgpB,qBACLhpB,KAAK4qB,iBACLlW,WAAS,qBAAsB1U,KAAKuxB,mBAAoBvxB,KAAK5I,KAE7Dsd,YAAS,mBAAoB1U,KAAa,iBAAGA,KAAK5I,OAQtDkmB,EAASnhB,UAAUsrB,oBAAsB,WACrC,IAAKznB,KAAKnJ,QAAQC,SAAYkJ,KAAKwnB,WAAW/T,YAAc3b,OAAOC,KAAKiI,KAAK9J,YAAYY,OAAS,CAC9FkJ,KAAKnJ,UAOL,KAAK,GAHDsB,GAAS6H,KAAK9J,WAAW,GAEzB6B,EAAOD,OAAOC,KAAKI,GACdvB,EAAI,EAAGA,EAAImB,EAAKjB,OAAQF,KACgE,KAAxFoJ,KAAKtD,aAAcsD,KAAKzD,iBAAiB6B,QAAQrG,EAAKhB,SAASH,EAAEI,WAAY,OAC9EgJ,KAAKnJ,QAAQoB,KAAKF,EAAKhB,SAASH,EAAEI,WAAY,QAK9DsmB,EAASnhB,UAAUmuB,oBAAsB,WACrC,GAAIrpB,KAaJ,QAXAA,EAAKylB,YAAc1mB,KAAKvE,aAAairB,YACrCzlB,EAAKD,aAAehB,KAAKvE,aAAauF,aACtCC,EAAK0lB,cAAgB3mB,KAAKvE,aAAakrB,cACvC1lB,EAAKhF,eAAsD,WAArC+D,KAAKvE,aAAaQ,eAA8B,SAAW,MACjFgF,EAAKuwB,oBAAsBxxB,KAAKvE,aAAa+1B,oBAC7CvwB,EAAKwwB,kBAAoBzxB,KAAKvE,aAAag2B,kBAC3CxwB,EAAK6P,SAAW9Q,KAAKvE,aAAaqV,SAClC7P,EAAKywB,wBAA0B1xB,KAAKvE,aAAai2B,wBACjDzwB,EAAK0wB,iBAAmB3xB,KAAKvE,aAAak2B,iBAC1C1wB,EAAc,KAAIjB,KAAKvE,aAAsB,KAC7CwF,EAAK2wB,OAAS5xB,KAAKvE,aAAam2B,OACxB5xB,KAAKvE,aAAaC,MACtB,IAAK,SAGL,IAAK,QACDuF,EAAKvF,KAAOsE,KAAKvE,aAAaC,IAC9B,MACJ,KAAK,MACDuF,EAAKvF,KAAO,QACZ,MACJ,KAAK,OACDuF,EAAKvF,KAAO,SACZuF,EAAKwwB,mBAAoB,EAGjC,MAAOxwB,IAQXqc,EAASnhB,UAAUiuB,eAAiB,WAChC,GAAIpqB,KAAKimB,iBAAkB,CAEvB,IAAK,GADD5Q,MACKze,EAAI,EAAGA,EAAIoJ,KAAKimB,iBAAiBnvB,OAAQF,IAC9C,OAAQoJ,KAAKimB,iBAAiBlvB,SAASH,EAAEI,WAAY,MACjD,IAAK,SACL,IAAKukB,oBAAiBkG,OAClBpM,EAAMpd,MAAO45B,KAAM7xB,KAAK8hB,KAAKgQ,YAAY,UACrCzxB,OAAQ,aAAcmR,GAAIxR,KAAKuR,QAAQC,GAAK,4BAC5C6D,QAAUwc,KAAM7xB,KAAK8hB,KAAKgQ,YAAY,SAAUtgB,GAAI,UAAaqgB,KAAM7xB,KAAK8hB,KAAKgQ,YAAY,SAAUtgB,GAAI,UAAaqgB,KAAM7xB,KAAK8hB,KAAKgQ,YAAY,SAAUtgB,GAAI,WACtK,MACJ,KAAK,SACL,IAAK+J,oBAAiBqG,UAClBvM,EAAMpd,MAAO45B,KAAM7xB,KAAK8hB,KAAKgQ,YAAY,aACrCzxB,OAAQ,aAAc0xB,QAAS,mBAAoBvgB,GAAIxR,KAAKuR,QAAQC,GAAK,6BAC7E,MACJ,KAAK,UACL,IAAK+J,oBAAiBsG,WAClBxM,EAAMpd,MAAO45B,KAAM7xB,KAAK8hB,KAAKgQ,YAAY,cACrCzxB,OAAQ,aAAc0xB,QAAS,oBAAqBvgB,GAAIxR,KAAKuR,QAAQC,GAAK,8BAC9E,MACJ,SACI6D,EAAMpd,KAAK+H,KAAKimB,iBAAiBlvB,SAASH,EAAEI,WAAY,MAGpE,MAAOqe,GAGP,MAAO,OASfiI,EAASnhB,UAAU6tB,eAAiB,WAChC,GAAIhqB,KAAKgmB,QAAS,CACdhmB,KAAK8hB,KAAO,GAAIC,QAAK,WAAY/hB,KAAKqhB,cAAerhB,KAAKgiB,OAG1D,KAAK,GAFD3M,MACA2c,MAAc,GACTp7B,EAAI,EAAGA,EAAIoJ,KAAKgmB,QAAQlvB,OAAQF,IACrC,OAAQoJ,KAAKgmB,QAAQjvB,SAASH,EAAEI,WAAY,MACxC,IAAK,SACL,IAAKskB,eAAY2W,OACb5c,EAAMpd,KAAK,SACX,MACJ,KAAK,QACL,IAAKqjB,eAAYtO,MACbqI,EAAMpd,KAAK,QACX,MACJ,KAAK,YACL,IAAKqjB,eAAYoG,UACbsQ,EAAchyB,KAAK8hB,KAAKgQ,YAAY,aACpCzc,EAAMpd,MAAO45B,KAAMG,EAAaA,YAAaA,EACzCE,WAAY,WAAY1gB,GAAIxR,KAAKuR,QAAQC,GAAK,0BAClD,MACJ,KAAK,cACL,IAAK8J,eAAYqG,YACbqQ,EAAchyB,KAAK8hB,KAAKgQ,YAAY,eACpCzc,EAAMpd,MAAO45B,KAAMG,EACfA,YAAaA,EAAaE,WAAY,aAAc1gB,GAAIxR,KAAKuR,QAAQC,GAAK,4BAE9E,MACJ,KAAK,SACL,IAAK8J,eAAYsG,UACboQ,EAAchyB,KAAK8hB,KAAKgQ,YAAY,aACpCzc,EAAMpd,MACF45B,KAAMG,EAAaA,YAAaA,EAChCE,WAAY,WAAY1gB,GAAIxR,KAAKuR,QAAQC,GAAK,uBAElD,MACJ,KAAK,UACL,IAAK8J,eAAYuG,WACbmQ,EAAchyB,KAAK8hB,KAAKgQ,YAAY,cACpCzc,EAAMpd,MACF45B,KAAMG,EAAaA,YAAaA,EAChCE,WAAY,YAAa1gB,GAAIxR,KAAKuR,QAAQC,GAAK,wBAEnD,MACJ,SACI6D,EAAMpd,KAAK+H,KAAKgmB,QAAQjvB,SAASH,EAAEI,WAAY,MAG3D,MAAOqe,GAGP,MAAO,OAGfiI,EAASnhB,UAAUgtB,eAAiB,SAAUtyB,EAASs7B,EAAoBr4B,OAC5C,KAAvBq4B,IAAiCA,GAAqB,OAC5C,KAAVr4B,IAAoBA,EAAQ,EAChC,IAAIuF,GAASxI,CAETs7B,KACAnyB,KAAKwkB,eAET,IAAI4N,GACAC,CAC4B,KAA5BryB,KAAKwkB,YAAY1tB,SACjBgD,EAAkB,IAAVA,GAAe,EAAIA,EAG/B,KAAK,GADDw4B,MACK17B,EAAI,EAAGA,EAAIyI,EAAOvI,OAAQF,IAAK,CACpCkD,GAAgB,CAChB,IAAIkX,GAAahR,KAAK5I,KAAKiY,eAAehQ,EAAOtI,SAASH,EAAEI,WAAY,KAAK0K,IAG7E,IAFA2wB,EAAarhB,MACbohB,KACwD,gBAA7CpyB,MAAKnJ,QAAQE,SAASH,EAAEI,WAAY,KAC3Cq7B,EAAW3hB,MAAQ0hB,EAAe1hB,MAAQ1Q,KAAKnJ,QAAQE,SAASH,EAAEI,WAAY,SAG9E,KAAK,GAAIu7B,GAAK,EAAGC,EAAK16B,OAAOC,KAAKsH,EAAOtI,SAASH,EAAEI,WAAY,MAAOu7B,EAAKC,EAAG17B,OAAQy7B,IAAM,CACzF,GAAIvV,GAAOwV,EAAGD,EACVz4B,KAAUkG,KAAKjB,iBAA4B,aAATie,EAClCoV,EAAe,GAAKpV,GAAQ3d,EAAOtI,SAASH,EAAEI,WAAY,KAAK,GAAKgmB,GAEtD,YAATA,GAAuB7lB,oBAAkBkI,EAAOtI,SAASH,EAAEI,WAAY,KAAK,GAAKgmB,IAIjFhd,KAAKtH,gBAAkBvB,oBAAkB6Z,IAAehR,KAAKyyB,mBAA8B,SAATzV,EACvFqV,EAAW,GAAKrV,GAAQoV,EAAe,GAAKpV,GAAQhM,EAAW,GAAKgM,MAErC,iBAATA,IACtBqV,EAAW,GAAKrV,GAAQoV,EAAe,GAAKpV,GAAQ3d,EAAOtI,SAASH,EAAEI,WAAY,KAAK,GAAKgmB,KAP5FqV,EAAW,GAAKrV,GAAQhd,KAAKmpB,eAAe9pB,EAAOtI,SAASH,EAAEI,WAAY,KAAK,GAAKgmB,IAAO,EAAOhd,KAAKwkB,YAAY1tB,OAAS,GAC5Hs7B,EAAe,GAAKpV,GAAQ3d,EAAOtI,SAASH,EAAEI,WAAY,KAAK,GAAKgmB,IAU3EoV,EAAiC,SAClCpyB,KAAKwkB,YAAYvsB,KAAK,GAAI6I,GAAOsxB,IAErCE,EAAqBr6B,KAAKo6B,IACrBl7B,oBAAkB6I,KAAKwkB,YAAYxkB,KAAKjB,mBAAqBiB,KAAKkpB,WAC/DmJ,EAAW3hB,QAAU1Q,KAAKwkB,YAAYxkB,KAAKjB,iBAAiB2R,QACxDvZ,oBAAkB6I,KAAK0yB,uBACvB1yB,KAAK0yB,oBAAsB1yB,KAAKwkB,YAAYxkB,KAAKjB,iBAAiB4zB,UAClE3yB,KAAK4yB,gBAAkB5yB,KAAKwkB,YAAYxkB,KAAKjB,iBAAiB2R,OAElE2hB,EAAWM,UAAY,SAInC,MAAOL,IASXhV,EAASnhB,UAAU02B,kBAAoB,SAAUC,GAG7C,IAAK,GADDC,IAAiB,EACZR,EAAK,EAAGS,EAFAl7B,OAAOC,KAAK+6B,GAEeP,EAAKS,EAAal8B,OAAQy7B,IAAM,CACxE,GAAIvV,GAAOgW,EAAaT,EACxB,QAAQvV,GACJ,IAAK,kBACDhd,KAAK5I,KAAK67B,gBACV,MACJ,KAAK,cACDjzB,KAAK5I,KAAKoV,YAAcxM,KAAKwM,WAC7B,MACJ,KAAK,eAEDxM,KAAK5I,KAAK4W,aAAeqb,sBAAoBrpB,KAAKgO,cAClD+kB,GAAiB,CACjB,MACJ,KAAK,uBACD/yB,KAAK5I,KAAK2G,qBAAuBiC,KAAKjC,oBACtC,MACJ,KAAK,6BACDiC,KAAK5I,KAAKoY,2BAA6BxP,KAAKwP,0BAC5C,MACJ,KAAK,UACDxP,KAAK5I,KAAK4uB,QAAUhmB,KAAKgqB,gBACzB,MACJ,KAAK,iBACDhqB,KAAK5I,KAAKyvB,eAAiB7mB,KAAK6mB,cAChC,MACJ,KAAK,oBACD7mB,KAAK5I,KAAK6N,kBAAoBokB,sBAAoBrpB,KAAKiF,kBACvD,MACJ,KAAK,eACDjF,KAAK5I,KAAKiK,aAAerB,KAAKqB,YAC9B,MACJ,KAAK,oBACDrB,KAAK5I,KAAK87B,kBAAoBlzB,KAAKkzB,iBACnC,MACJ,KAAK,eACDlzB,KAAK5I,KAAK+G,aAAekrB,sBAAoBrpB,KAAK7B,aAClD,MACJ,KAAK,iBACD6B,KAAK5I,KAAKC,eAAiBgyB,sBAAoBrpB,KAAK3I,eACpD,MACJ,KAAK,iBACD2I,KAAK5I,KAAKI,eAAiBwI,KAAKxI,cAChC,MACJ,KAAK,iBACIwI,KAAKtH,gBACNsH,KAAK5I,KAAKK,eAAiB4xB,sBAAoBrpB,KAAKvI,gBAExD,MACJ,KAAK,iBACDuI,KAAK5I,KAAKgK,eAAiBpB,KAAKoB,cAChC,MACJ,KAAK,sBACDpB,KAAK5I,KAAK4H,oBAAsBgB,KAAKhB,mBACrC,MACJ,KAAK,aAEDgB,KAAK5I,KAAKgf,WAAaiT,sBAAoBrpB,KAAKoW,WAChD,MACJ,KAAK,0BACDpW,KAAK5I,KAAKohB,wBAA0BxY,KAAKwY,uBACzC,MACJ,KAAK,aAID,GAHAxY,KAAK8Z,cAAiB9Z,KAAK9J,qBAAsBC,kBAAkBgB,oBAAkB6I,KAAK9J,WAAWoD,QAC9F0G,KAAK9J,WAAWE,kBAAmB+uB,qBAC1CnlB,KAAK0nB,gBAAgB1nB,KAAK9J,YACtB8J,KAAK8Z,YAAa,CAClB,GAAIpjB,EAAgBsJ,MAAO,CACvB,GAAIuL,GAAQtN,WAAS,QAAS+B,KAAK9J,WACnC8J,MAAK5I,KAAKlB,YAAewb,OAAQ1R,KAAKlD,SAAUyO,MAAOA,OAEtD,CACD,GAAIlN,GAAO2B,KAAK9J,UAChB8J,MAAK5I,KAAKlB,WAAemI,YAAgBlI,eACrB,GAAIA,eAAYkI,EAAKnI,WAAYmI,EAAKwxB,aAAcxxB,EAAKjI,SAAzE4J,KAAKlD,SAETkD,KAAKjC,uBACLiC,KAAK5I,KAAKqhB,cAAc0a,qBAAsB,OAIlDnzB,MAAKipB,mBACDjpB,KAAKjC,uBACLiC,KAAK5I,KAAKqhB,cAAc9Q,sBACxB3H,KAAK5I,KAAKqhB,cAAc2a,cAAc,MACtCpzB,KAAK5I,KAAKqhB,cAAc4a,cAGhC,MACJ,KAAK,QACDrzB,KAAK5I,KAAKuc,MAAQ3T,KAAK2T,KACvB,MACJ,KAAK,oBACGmf,EAAQ,GAAK9V,GACbhd,KAAKwjB,cAGLxjB,KAAKujB,WAET,MACJ,KAAK,qBACDvjB,KAAK5I,KAAKm5B,SACV,MACJ,KAAK,YACDvwB,KAAK5I,KAAK2yB,UAAY/pB,KAAK+pB,SAC3B,MACJ,KAAK,cAED/pB,KAAK5I,KAAK2Z,YAAcsY,sBAAoBrpB,KAAK+Q,YACjD,MACJ,KAAK,aACD/Q,KAAK5I,KAAKwH,WAAaoB,KAAKpB,UAC5B,MACJ,KAAK,gBACDoB,KAAK5I,KAAKmY,cAAgBvP,KAAKuP,aAC/B,MACJ,KAAK,YACDvP,KAAK5I,KAAK0yB,UAAY9pB,KAAK8pB,SAC3B,MACJ,KAAK,SACI3yB,oBAAkB6I,KAAKgoB,SAAoC,gBAAjBhoB,eAA2D,IAA9BA,KAAKgoB,OAAO5pB,QAAQ,OAC5F4B,KAAKuR,QAAQnX,MAAM4tB,OAAShoB,KAAKgoB,QAErChoB,KAAK5I,KAAK4wB,OAAShoB,KAAKgoB,MACxB,MACJ,KAAK,QACI7wB,oBAAkB6I,KAAKqK,QAAkC,gBAAhBrK,cAAyD,IAA7BA,KAAKqK,MAAMjM,QAAQ,OACzF4B,KAAKuR,QAAQnX,MAAMiQ,MAAQrK,KAAKqK,OAEpCrK,KAAK5I,KAAKiT,MAAQrK,KAAKqK,KACvB,MACJ,KAAK,SACDrK,KAAK5I,KAAK4qB,OAAShiB,KAAKgiB,OACxBhiB,KAAKmhB,iBACLnhB,KAAK5I,KAAK4uB,QAAUhmB,KAAKgqB,iBACzBhqB,KAAK5I,KAAK6uB,iBAAmBjmB,KAAKoqB,gBAClC,MACJ,KAAK,mBACDpqB,KAAK5I,KAAK+yB,iBAAmBnqB,KAAKmqB,gBAClC,MACJ,KAAK,eACDnqB,KAAK5I,KAAKsyB,aAAe1pB,KAAK0pB,YAC9B,MACJ,KAAK,cACD1pB,KAAK5I,KAAKuyB,YAAc3pB,KAAK2pB,WAC7B,MACJ,KAAK,iBACD3pB,KAAK5I,KAAKwyB,eAAiB5pB,KAAK4pB,cAChC,MACJ,KAAK,mBACD5pB,KAAK5I,KAAKyyB,iBAAmB7pB,KAAK6pB,gBAClC,MACJ,KAAK,sBACD7pB,KAAK5I,KAAK6F,oBAAsB+C,KAAK/C,mBACrC,MACJ,KAAK,mBACD+C,KAAK5I,KAAK8uB,iBAAmBlmB,KAAKkmB,gBAClC,MACJ,KAAK,iBACDlmB,KAAK5I,KAAKivB,eAAiBrmB,KAAKqmB,cAChC,MACJ,KAAK,YACIlvB,oBAAkB6I,KAAK4yB,kBACxB5yB,KAAKszB,4BAETtzB,KAAK5I,KAAK8xB,UAAYlpB,KAAKkpB,SAC3B,MACJ,KAAK,kBACDlpB,KAAK5I,KAAK+J,gBAAkBnB,KAAKmB,eACjC,MACJ,KAAK,gBACDnB,KAAK5I,KAAKkK,cAAgBtB,KAAKsB,aAC/B,MACJ,KAAK,mBACDtB,KAAK5I,KAAK8yB,iBAAmBb,sBAAoBrpB,KAAKkqB,iBACtD,MACJ,KAAK,gBACDlqB,KAAK5I,KAAKgT,cAAgBif,sBAAoBrpB,KAAKoK,eACnDpK,KAAK5I,KAAKm5B,SACV,MACJ,KAAK,mBACDvwB,KAAK5I,KAAK6uB,iBAAmBjmB,KAAKoqB,gBAClC,MACJ,KAAK,oBACDpqB,KAAK5I,KAAKkvB,kBAAoBtmB,KAAKsmB,iBACnC,MACJ,KAAK,iBAEDtmB,KAAK5I,KAAKgvB,eAAiBiD,sBAAoBrpB,KAAKomB,eACpD,MACJ,KAAK,kBACDpmB,KAAK5I,KAAKizB,gBAAkBhB,sBAAoBrpB,KAAKqqB,gBACrD,MACJ,KAAK,eACGrqB,KAAK5I,KAAKi6B,QAA0C,WAAhCrxB,KAAK5I,KAAKqE,aAAaC,MAAqBo3B,EAAQ,GAAK9V,GAAMthB,OACtD,SAA5Bo3B,EAAQ,GAAK9V,GAAMthB,MAA+C,QAA5Bo3B,EAAQ,GAAK9V,GAAMthB,OAC1DsE,KAAK5I,KAAKm8B,YAEdvzB,KAAK5I,KAAKqE,aAAeuE,KAAKsqB,sBAGlCyI,GACA/yB,KAAK5I,KAAKm5B,YAItBjT,EAASnhB,UAAUm3B,0BAA4B,WAC1BtzB,KAAK5I,KAAK2pB,iBAAiB/gB,KAAK4yB,iBACtCD,UAAY3yB,KAAKkpB,UAAY,QAAUlpB,KAAK0yB,oBACvD1yB,KAAK5I,KAAK67B,kBAQd3V,EAASnhB,UAAU2K,QAAU,WACzB,GAAI0sB,GAAkBxzB,KAAKuR,OAC3B,IAAKiiB,EAAL,CAGA,GAAIC,MAAmBD,EAAgBvrB,cAAc,mBACjDurB,EAAgBvrB,cAAc,kBAC9BwrB,IACAzzB,KAAKinB,eAETjnB,KAAK0zB,iBACDD,GACA7xB,EAAOzF,UAAU2K,QAAQzK,KAAK2D,MAE9BA,KAAK5I,MACL4I,KAAK5I,KAAK0P,UAEV9G,KAAKwnB,YACLxnB,KAAKwnB,WAAW1gB,SAMpB,KAAK,GAJDgf,IAAW,aAAc,aAAc,eAAgB,eAAgB,cAAe,kBACtF,oBAAqB,kBAAmB,gBAAiB,gBAAiB,gBAAiB,eAC3F,cAAe,iBAAkB,mBAAoB,oBAAqB,aAAc,sBACxF,kBAAmB,YAAa,uBAAwB,gBACnDlvB,EAAI,EAAGA,EAAIkvB,EAAQhvB,OAAQF,IAC5BoJ,KAAK8lB,EAAQ/uB,SAASH,EAAEI,WAAY,QACpCgJ,KAAK8lB,EAAQ/uB,SAASH,EAAEI,WAAY,MAAQ,KAGpDgJ,MAAKuR,QAAQ5G,UAAY,GACzB3K,KAAK5I,KAAO,OAShBkmB,EAASnhB,UAAUw3B,SAAW,WACtBx8B,oBAAkB6I,KAAK5I,SAGtBD,oBAAkB6I,KAAK4nB,gBAAgBC,WACxC1wB,oBAAkBwpB,SAASiT,eAAe5zB,KAAK5I,KAAKwwB,gBAAgBC,aACpElH,SAASiT,eAAe5zB,KAAK4nB,gBAAgBC,UAAUrW,GAAKxR,KAAK5I,KAAKwwB,gBAAgBC,SACtF7nB,KAAK4nB,gBAAgBC,SAAW7nB,KAAK5I,KAAKwwB,gBAAgBC,UAE9DjmB,EAAOzF,UAAUw3B,SAASt3B,KAAK2D,MAC/BA,KAAK5I,KAAKu8B,aAQdrW,EAASnhB,UAAU03B,eAAiB,WAWhC,IAAK,GAVDC,IAAa,eAAgB,eAC7B,iBAAkB,UAAW,iBAAkB,mBAAoB,mBACnEC,GACA/lB,cAAe,WAAY,YAAa,eAAgB,oBAAqB,oBAAqB,aAClGvW,gBAAiB,OAAQ,OAAQ,sBAAuB,qBAAsB,eAAgB,iBAC9FJ,gBAAiB,SAAU,WAAY,cACvC8G,gBAAkBtH,WAAaszB,qBAE/B6J,GAAkB,SAAU,OAAQ,oBAAqB,iBAAkB,WAC3E,kBAAmB,WAAY,cAC1Bp9B,EAAI,EAAGA,EAAIk9B,EAAUh9B,OAAQF,IAElC,IAAK,GADDq9B,GAAgBj0B,KAAK8zB,EAAU/8B,SAASH,EAAEI,WAAY,MACjDkF,EAAI,EAAGg4B,EAAMH,EAAgBD,EAAU/8B,SAASH,EAAEI,WAAY,OAASG,oBAAkB+8B,IAAQh4B,EAAIg4B,EAAIp9B,OAASoF,UAEhH+3B,GAAc,GADRC,EAAIn9B,SAASmF,EAAElF,WAAY,KAKhD,OADAgJ,MAAKm0B,eAAeH,EAAgBh0B,KAAKnJ,SAClCmJ,KAAKggB,aAAa8T,IAE7BxW,EAASnhB,UAAUg4B,eAAiB,SAAUH,EAAgBn9B,GAC1D,IAAK,GAAID,GAAI,EAAGA,EAAIC,EAAQC,OAAQF,IAC5BC,EAAQE,SAASH,EAAEI,WAAY,KAAKH,SACpCmJ,KAAKo0B,eAAeJ,EAAgBn9B,EAAQE,SAASH,EAAEI,WAAY,MACnEgJ,KAAKm0B,eAAeH,EAAgBn9B,EAAQE,SAASH,EAAEI,WAAY,KAAKH,UAGxEmJ,KAAKo0B,eAAeJ,EAAgBn9B,EAAQE,SAASH,EAAEI,WAAY,OAI/EsmB,EAASnhB,UAAUi4B,eAAiB,SAAUJ,EAAgB30B,GAC1D,GAAIlI,oBAAkBkI,EAAOyR,UACzB,IAAK,GAAIla,GAAI,EAAGA,EAAIo9B,EAAel9B,OAAQF,UAChCyI,GAAO20B,EAAej9B,SAASH,EAAEI,WAAY,MACpDqI,EAAOrG,WAInBskB,EAASnhB,UAAUmpB,kBAAoB,SAAUvoB,GAC7C,GAAK5F,oBAAkB4F,EAAEs3B,SAAzB,CAGA,GAAIh0B,GAAStD,EAAEsD,MAOf,KANKA,EAAOiF,UAAUC,SAAS,sBAC3BlF,EAAOiF,UAAUC,SAAS,uBAA4BvF,KAAKs0B,gBAAmBt0B,KAAK5I,KAAKi6B,QACxFrxB,KAAKyjB,sBAAsBpjB,GAE/BL,KAAKs0B,gBAAiB,EACtBt0B,KAAK2Q,OAAO,qBAAuBtQ,OAAQA,IACvCL,KAAK5I,KAAKm9B,sBAAwBv0B,KAAK5I,KAAKo9B,oBACxCx0B,KAAKoW,WAAWtY,IAAI,SAAUuyB,GAAM,OAA+B,IAAxBA,EAAGC,mBAA8Bx5B,OAAQ,CACpF,GAAI29B,GAAgBz0B,KAAK5I,KAAK+R,mBAAmBlB,cAAc,oBAG/D,IAFiBjI,KAAK5I,KAAK+N,wBAAwBrO,SAChCkJ,KAAK5C,wBAAwBtG,OACf,CAC7B,GAAI4T,GAAU+pB,EAAcpsB,kBAC5BkC,gBAAaG,IAAW,SAAU,cAClC8C,YAAU9C,IAAW,gBAKrC4S,EAASnhB,UAAUopB,iBAAmB,SAAUxoB,GAC5C,GAAI23B,IAAc,EACdC,EAAO30B,KAAKV,YACM,yBAAlBU,KAAKuqB,WACLmK,GAAc,EAElB,IAAInjB,GAAUvJ,eAAajL,EAAEsD,OAAQ,sBAChCq0B,IAA0C,IAA1B10B,KAAKjB,iBAAkE,wBAAxC41B,EAAK30B,KAAKjB,iBAAiBwrB,WAAoD,OAAZhZ,GAAoBxa,SAASwa,EAAQnI,aAAa,iBAAkB,MAAQpJ,KAAKjB,iBAAmBwS,EAAQF,SAAS,GAAGujB,YAAcrjB,EAAQF,SAAS,GAAGwjB,aAC/P,GAAIC,YACdC,QAASxjB,EAAQJ,cAEb+W,SAAS3W,IAQzB+L,EAASnhB,UAAUsC,QAAU,WACzB,MAAOuB,MAAK5I,KAAKqH,WAOrB6e,EAASnhB,UAAU64B,SAAW,WAC1B,MAAOh1B,MAAK5I,KAAK49B,YAWrB1X,EAASnhB,UAAU84B,UAAY,SAAU52B,EAAMvE,EAAOo7B,GAClD,GAAIl1B,KAAKrE,WAAY,CAEjBqE,KAAKrE,WAAkC,oBAAI,EAC3CqE,KAAKrE,WAAWs5B,UAAU52B,EAAMvE,EAAOo7B,KAQ/C5X,EAASnhB,UAAUo3B,UAAY,WACvBvzB,KAAK5I,KAAKuE,YACVqE,KAAK5I,KAAKuE,WAAW43B,aAQ7BjW,EAASnhB,UAAUg5B,SAAW,WACtBn1B,KAAK5I,KAAKuE,YACVqE,KAAK5I,KAAKuE,WAAWw5B,YAW7B7X,EAASnhB,UAAUi5B,WAAa,SAAUxuB,EAAU8J,EAAO7W,GACnDmG,KAAK5I,KAAKuE,YACVqE,KAAK5I,KAAKuE,WAAWy5B,WAAWxuB,EAAU8J,EAAO7W,IAUzDyjB,EAASnhB,UAAUk5B,UAAY,SAAUv7B,EAAOuE,GAC5C,GAAI2B,KAAK5I,KAAKuE,WACV,GAAKxE,oBAAkB2C,GAMnBkG,KAAK5I,KAAKuE,WAAW05B,UAAUv7B,EAAOuE,OANX,CAC3B,GAAI0qB,GAAW/oB,KAAK5I,KAAKgG,wBAAwBrG,SAAS+C,EAAM9C,WAAY,IAC5EgF,UAAO+sB,EAAU1qB,GACjB2B,KAAK5I,KAAKuE,WAAW05B,UAAUv7B,EAAOivB,KAelDzL,EAASnhB,UAAUm5B,aAAe,SAAUC,EAAWl3B,GAC/C2B,KAAK5I,KAAKuE,YACVqE,KAAK5I,KAAKuE,WAAW25B,aAAaC,EAAWl3B,IASrDif,EAASnhB,UAAUq5B,UAAY,SAAUj3B,GACjCyB,KAAK5I,KAAKuE,YACVqE,KAAK5I,KAAKuE,WAAW65B,UAAUj3B,IAUvC+e,EAASnhB,UAAUs5B,SAAW,SAAU7uB,EAAU8J,GAC1C1Q,KAAKrE,YACLqE,KAAKrE,WAAW85B,SAAS7uB,EAAU8J,IAU3C4M,EAASnhB,UAAUu5B,mBAAqB,SAAUrgB,EAAOsgB,GACjD31B,KAAK5I,KAAKoxB,eACVxoB,KAAK5I,KAAKoxB,cAAcoN,YAAYvgB,EAAOsgB,IAQnDrY,EAASnhB,UAAU05B,QAAU,WACrB71B,KAAK5I,KAAKuE,YACVqE,KAAK5I,KAAKuE,WAAWk6B,WAU7BvY,EAASnhB,UAAU25B,kBAAoB,SAAUC,EAAGC,GAC5Ch2B,KAAKi2B,qBACLj2B,KAAKi2B,oBAAoBH,kBAAkBC,EAAGC,IAStD1Y,EAASnhB,UAAU+5B,UAAY,SAAU7pB,GACjCrM,KAAK5I,KAAKuE,YACVqE,KAAK5I,KAAKuE,WAAWu6B,UAAU7pB,IAQvCiR,EAASnhB,UAAUhB,wBAA0B,WACzC,MAAO6E,MAAK5I,KAAK+D,2BAWrBmiB,EAASnhB,UAAUg6B,aAAe,SAAU7+B,EAAKoZ,EAAO7W,GACpDmG,KAAK5I,KAAK++B,aAAa7+B,EAAKoZ,EAAO7W,EACnC,IAAI+M,GAAW5G,KAAK5I,KAAKsH,wBAAwBpH,GAC7Ca,EAAS6H,KAAK5C,wBAAwBrG,SAAS6P,EAAS5P,WAAY,IACnEG,qBAAkBgB,IACnBsC,GAAaZ,MAAO1B,EAAQ+C,OAAQ,QAAU8E,KAAMA,KAAKpF,gBAAiBzC,EAAO2B,MAAOkG,KAAK5I,KAAK+yB,iBAAkBzZ,IAW5H4M,EAASnhB,UAAUmC,WAAa,SAAUhH,EAAKsR,GAC3C,GAAI/K,GAAiBmC,KAAK5C,wBACtBg5B,EAAap2B,KAAK5I,KAAK+D,0BAA0B,GACjDpB,EAAQ,EACR5B,IACJ0F,GAAeipB,KAAK,SAAUjtB,GAC1B,MAAIA,GAAM,GAAKu8B,KAAgB9+B,IAC3Ba,EAAS0B,GACF,KAMfE,EAAQ5B,EAAO4B,MACf6O,EAAQ7O,MAAQA,EAChB6O,EAAQ9O,MAAQ3B,EAAO2B,MACvB8O,EAAQ7P,aAAeZ,EAAOY,aAC9B6P,EAAQ5O,SAAW7B,EAAO6B,SAC1B4O,EAAQnQ,SAAWN,EAAOM,SAC1BmQ,EAAQrQ,WAAaJ,EAAOI,WAC5BqQ,EAAQuB,cAAgBhS,EAAOgS,cAC/BvB,EAAQ9P,gBAAkBX,EAAOW,gBACjC8P,EAAQ1K,eAAiB/F,EAAO+F,eAChC0K,EAAQhQ,SAAWT,EAAOS,SAC1BoH,KAAK5I,KAAKkH,WAAWhH,EAAKsR,EAC1B,IAAIytB,GAAiBr2B,KAAK8O,mBAC1B,IAAIunB,EAAev/B,OAAS,GAAKQ,IAAS++B,EAAeA,EAAev/B,OAAS,GAAI,GAAKs/B,GAAa,CACnG,GACIE,GADQt2B,KAAK0O,kBACGC,aAChBE,EAAe7O,KAAK4O,aAAaC,YACrC7O,MAAKqtB,cAAcrtB,KAAKvB,UAAUZ,EAAeO,QAAQjG,IAAUm+B,GAAWznB,KAStFyO,EAASnhB,UAAUo6B,SAAW,SAAUC,GAChCx2B,KAAK5I,KAAKq/B,aACVz2B,KAAK5I,KAAKq/B,YAAYF,SAASC,IASvClZ,EAASnhB,UAAUu6B,sBAAwB,SAAUpzB,GAC7CtD,KAAKy2B,aACLz2B,KAAK5I,KAAKq/B,YAAYC,sBAAsBpzB,IAUpDga,EAASnhB,UAAUoW,iBAAmB,SAAU3L,EAAUoC,GACtD,MAAOhJ,MAAK5I,KAAKmb,iBAAiB3L,EAAUoC,IAQhDsU,EAASnhB,UAAU4kB,iBAAmB,SAAUrQ,GAC5C,MAAOimB,wBAAqB32B,KAAKwkB,YAAa,SAAUvrB,GACpD,GAAIA,EAAKyX,QAAUA,EACf,MAAOzX,KAGZ,IAQPqkB,EAASnhB,UAAUkT,eAAiB,SAAU3N,GAC1C,GAAIk1B,GAAU52B,KAAKtH,cAAgBsH,KAAK5I,KAAKP,QAAUmJ,KAAKnJ,OAK5D,OAHImJ,MAAK5I,KAAKP,QAAQC,SAAWkJ,KAAKwkB,YAAY1tB,SAC9C8/B,EAAU52B,KAAK5I,KAAqB,aAEjCu/B,uBAAqBC,EAAS,SAAU39B,GAC3C,GAAIA,EAAKyI,MAAQA,EACb,MAAOzI,KAGZ,IAOPqkB,EAASnhB,UAAU06B,oBAAsB,WACrC,MAAO72B,MAAK5I,KAAKy/B,uBAOrBvZ,EAASnhB,UAAU26B,iBAAmB,WAClC,MAAO92B,MAAK5I,KAAK0/B,oBAOrBxZ,EAASnhB,UAAU46B,sBAAwB,WACvC,MAAO/2B,MAAK5I,KAAK2/B,yBASrBzZ,EAASnhB,UAAU66B,YAAc,SAAUj/B,EAAMk/B,GAC7Cj3B,KAAK5I,KAAK4/B,YAAYj/B,EAAMk/B,GAC5Bj3B,KAAK0iB,qBASTpF,EAASnhB,UAAU+6B,YAAc,SAAUn/B,EAAMo/B,GAC7Cn3B,KAAK5I,KAAK8/B,YAAYn/B,EAAMo/B,GAC5Bn3B,KAAK0iB,qBAQTpF,EAASnhB,UAAUi7B,uBAAyB,SAAU1mB,GAClD,MAAO1Q,MAAK5I,KAAKggC,uBAAuB1mB,IAQ5C4M,EAASnhB,UAAUk7B,uBAAyB,SAAUv9B,GAClD,MAAOkG,MAAK5I,KAAKigC,uBAAuBv9B,IAQ5CwjB,EAASnhB,UAAUm7B,qBAAuB,SAAU51B,GAChD,MAAO1B,MAAK5I,KAAKkgC,qBAAqB51B,IAQ1C4b,EAASnhB,UAAUo7B,sBAAwB,SAAU7mB,GACjD,MAAO1Q,MAAK5I,KAAKmgC,sBAAsB7mB,IAE3C4M,EAASnhB,UAAUq7B,wBAA0B,SAAU91B,GACnD,GACI5H,GAAQ68B,uBAAqB32B,KAAK5I,KAAqB,YAAG,SAAU6B,EAAMa,GAC1E,GAAIb,EAAKyI,MAAQA,EACb,MAAO5H,KAGZ,EACH,OAAQ3C,qBAAkB2C,IAAkB,EAATA,GAQvCwjB,EAASnhB,UAAUsT,oBAAsB,SAAU/N,GAC/C,MAAO1B,MAAK5I,KAAKqY,oBAAoB/N,IAQzC4b,EAASnhB,UAAUmD,WAAa,SAAUm4B,GAEtC,MADAz3B,MAAK0iB,kBAAkB1iB,KAAK5I,KAAKkI,WAAWm4B,IACrCz3B,KAAKwkB,aAEhBlH,EAASnhB,UAAUumB,kBAAoB,SAAUrjB,GAC7C,GAAI2b,GACAtK,EACAgnB,EAAcvgC,oBAAkBkI,GAAUW,KAAK5I,KAAKkI,aAAeD,GACzC,IAA1BW,KAAKjB,iBAA0BiB,KAAKwkB,YAAYxkB,KAAKjB,mBACpD5H,oBAAkB6I,KAAKwkB,YAAYxkB,KAAKjB,iBAAiB+R,YAC1DkK,EAAOhb,KAAKwkB,YAAYxkB,KAAKjB,iBAAiB+R,SAC9CJ,EAAQ1Q,KAAKwkB,YAAYxkB,KAAKjB,iBAAiB2R,MAEnD,IAAI2hB,EACJ,KAAKryB,KAAKwP,4BAA+BxP,KAAKwP,4BAA8BxP,KAAKwkB,YAAY1tB,SAAW4gC,EAAY5gC,OAAS,CACzHkJ,KAAKwkB,cACL,KAAK,GAAI5tB,GAAI,EAAGA,EAAI8gC,EAAY5gC,OAAQF,IAAK,CACzCy7B,IACA,KAAK,GAAIE,GAAK,EAAGC,EAAK16B,OAAOC,KAAK2/B,EAAY3gC,SAASH,EAAEI,WAAY,MAAOu7B,EAAKC,EAAG17B,OAAQy7B,IAAM,CAC9F,GAAIvV,GAAOwV,EAAGD,EACdF,GAAW,GAAKrV,GAAQ0a,EAAY3gC,SAASH,EAAEI,WAAY,KAAK,GAAKgmB,GAEzEhd,KAAKwkB,YAAYvsB,KAAK,GAAI6I,GAAOuxB,IAC7B3hB,IAAU1Q,KAAKwkB,YAAYztB,SAASH,EAAEI,WAAY,KAAK0Z,OAA+D,aAAtD1Q,KAAKwkB,YAAYztB,SAASH,EAAEI,WAAY,KAAKiM,MAAyB9L,oBAAkB6jB,IAAkB,KAATA,IACjKhb,KAAKwkB,YAAYztB,SAASH,EAAEI,WAAY,KAAK8Z,SAAWkK,IAgBpE,MAXAhb,MAAmB,WAAK,WACpBA,KAAK5I,KAAKP,QAAQC,SAAWkJ,KAAKwkB,YAAY1tB,SAC9CkJ,KAAK6d,eAAgB,GAErB7d,KAAK6d,eAAiB7d,KAAKsB,eAC3BtB,KAAK23B,mBAAmB33B,KAAKnJ,SAE5BmJ,KAAK6d,eACNtc,QAAMvB,KAAKnJ,QAASmJ,KAAKwkB,aAE7BxkB,KAAmB,cAAI8R,GAChB9R,KAAKwkB,aAEhBlH,EAASnhB,UAAUw7B,mBAAqB,SAAU9gC,GAC9C,GAAI2N,GAAQxE,IACZnJ,GAAQgW,QAAQ,SAAUxN,GACtB,GAAIA,EAAOxI,QACP2N,EAAMmzB,mBAAmBt4B,EAAOxI,aAE/B,IAAIwI,EAAOqR,MAAO,CACnB,GAAIknB,GAAgBpzB,EAAMpN,KAAK2pB,iBAAiB1hB,EAAOqR,MAClDvZ,qBAAkBygC,KACnBv4B,EAAOgL,MAAQutB,EAAcvtB,WAU7CiT,EAASnhB,UAAUyS,WAAa,WAC5B,MAAO5O,MAAK5I,KAAKwX,cAErB0O,EAASnhB,UAAUoiB,yBAA2B,WAE1Cve,KAAK5I,KAAkB,qBAAEyK,MAAM7B,OAEnCsd,EAASnhB,UAAU07B,aAAe,SAAUC,EAAcjhC,GAEtDmJ,KAAK5I,KAAkB,aAAEyK,MAAM7B,MAAO83B,EAAcjhC,KAExDymB,EAASnhB,UAAUi0B,oBAAsB,WACrCpwB,KAAKwB,eAAgB/J,eAAgBO,YAAU,aAAcgI,KAAK5I,KAAKK,kBAAmB,GAC1FuI,KAAKwB,eAAgBwM,aAAchW,YAAU,aAAcgI,KAAK5I,KAAK4W,gBAAiB,GACtFhO,KAAKwB,eAAgBnK,eAAgBW,YAAU,aAAcgI,KAAK5I,KAAKC,kBAAmB,GAC1F2I,KAAKwB,eAAgBrD,aAAcnG,YAAU,aAAcgI,KAAK5I,KAAK+G,gBAAiB,IAO1Fmf,EAASnhB,UAAUuS,gBAAkB,WACjC,MAAO1O,MAAK5I,KAAKsX,mBAOrB4O,EAASnhB,UAAUoQ,YAAc,WAG7B,IAAK,GAFDwrB,MACA/yB,EAAOhF,KAAK5I,KAAKmV,cACZ3V,EAAI,EAAGiB,EAAMmN,EAAKlO,OAAQF,EAAIiB,EAAKjB,IACnCoO,EAAKjO,SAASH,EAAEI,WAAY,KAAKsO,UAAUC,SAAS,iBACrDwyB,EAAM9/B,KAAK+M,EAAKjO,SAASH,EAAEI,WAAY,KAG/C,OAAO+gC,IAQXza,EAASnhB,UAAUiB,sBAAwB,WAEvC,MAAO4C,MAAK5I,KAAK8U,gBAAgBlT,OAAO,SAAU+D,GAAK,MAAO5F,qBAAkB4F,EAAmB,iBAOvGugB,EAASnhB,UAAUP,gBAAkB,WACjC,MAAOoE,MAAK5I,KAAKuE,WAAWC,mBAOhC0hB,EAASnhB,UAAUgN,iBAAmB,WAClC,MAAOnJ,MAAK5I,KAAK+R,oBAOrBmU,EAASnhB,UAAU67B,eAAiB,WAChC,MAAOh4B,MAAK5I,KAAK4gC,kBAQrB1a,EAASnhB,UAAUqC,cAAgB,SAAU1E,GACzC,MAAOkG,MAAK5I,KAAKoH,cAAc1E,IAQnCwjB,EAASnhB,UAAU87B,WAAa,SAAU53B,GACtC,MAAOL,MAAK5I,KAAK6gC,WAAW53B,IAQhCid,EAASnhB,UAAU+7B,oBAAsB,SAAUxnB,GAC/C,MAAO1Q,MAAK5I,KAAK8gC,oBAAoBxnB,IAOzC4M,EAASnhB,UAAU6J,kBAAoB,WAEnC,IAAK,GADD2uB,MACKpC,EAAK,EAAGC,EAAKxyB,KAAKwkB,YAAa+N,EAAKC,EAAG17B,OAAQy7B,IAAM,CAC1D,GAAItpB,GAAMupB,EAAGD,EACTtpB,GAAIqF,SACJqmB,EAAK18B,KAAKgR,GAGlB,MAAO0rB,IAOXrX,EAASnhB,UAAU2b,YAAc,WAC7BA,cAAY9X,KAAKuR,UAOrB+L,EAASnhB,UAAU0Y,YAAc,WAC7BA,cAAY7U,KAAKuR,UAOrB+L,EAASnhB,UAAUo0B,QAAU,WACzBvwB,KAAKud,sBACLvd,KAAK0nB,gBAAgB1nB,KAAK9J,YACrBQ,EAAgBsJ,QACXA,KAAK9J,qBAAsBC,eAI7B6J,KAAK5I,KAAKoK,eACNtL,WAAY,GAAIC,eAAY6J,KAAK9J,WAAWA,WAAY8J,KAAK9J,WAAW25B,aAAc7vB,KAAK9J,WAAWE,WACvG,GALH4J,KAAK5I,KAAKlB,WAAa8J,KAAKlD,UAQpCkD,KAAK5I,KAAKm5B,WAQdjT,EAASnhB,UAAU0M,kBAAoB,WACnC,MAAO7I,MAAKirB,gBAAgBne,qBAQhCwQ,EAASnhB,UAAU2S,kBAAoB,WACnC,GAAIunB,MACAl5B,EAAqB6C,KAAK5C,uBAC9B,IAAK4C,KAAKwM,YASN6pB,EAAiBl5B,MARjB,KAAK,GAAIvG,GAAI,EAAGA,EAAIuG,EAAmBrG,OAAQF,IAC3Cy/B,EAAep+B,KAAKkF,EAAmBpG,SAASH,EAAEI,WAAY,MACzDmG,EAAmBpG,SAASH,EAAEI,WAAY,KAAK4B,WAChDhC,GAAKiC,EAAoBsE,EAAmBpG,SAASH,EAAEI,WAAY,MAAMF,OAOrF,OAAOu/B,IAOX/Y,EAASnhB,UAAU4Q,qBAAuB,WACtC,MAAO/M,MAAKirB,gBAAgBle,wBAQhCuQ,EAASnhB,UAAUgM,iBAAmB,SAAUgwB,GAC5Cn4B,KAAKirB,gBAAgB9iB,iBAAiBgwB,IAQ1C7a,EAASnhB,UAAU82B,eAAiB,SAAUmF,GACtCjhC,oBAAkBihC,IAAcA,GAChCp4B,KAAK5I,KAAKP,QAAUmJ,KAAKmpB,eAAenpB,KAAKnJ,SAC7CmJ,KAAK5I,KAAK67B,kBAGVjzB,KAAK5I,KAAKoK,eAAgB3K,QAASmJ,KAAKmpB,eAAenpB,KAAKnJ,WAAY,IAQhFymB,EAASnhB,UAAUk8B,cAAgB,WAC/Br4B,KAAK5I,KAAKihC,iBASd/a,EAASnhB,UAAUsnB,sBAAwB,SAAUpjB,GACjD,GAA+B,UAA3BL,KAAKvE,aAAaC,KAAkB,CAGpC,IAAKsE,KAAKpE,kBAAkBoE,KAAKyd,gBAAgB3mB,QAAUkJ,KAAKpE,kBAAkBoE,KAAK0d,gBAAgB5mB,QACnGkJ,KAAKpE,kBAAkBoE,KAAK4S,cAAc9b,SAAWkJ,KAAKvE,aAAag2B,kBAAmB,CAC1F,GAAI6G,GAAYt4B,KAAK5I,KAAKuE,WAAmB,SAG7C,OAFAqE,MAAK5I,KAAKuE,WAA0B,WAAE,aAAc28B,QACpDt4B,KAAKu4B,cAAgBl4B,IAI7B,GAAIL,KAAK+Q,YAAa,CAClB,GAAIynB,GAAUn4B,EAAO6H,QAAQ,kBAAkBwb,cAC3CvrB,EAAS6H,KAAK5C,wBAAwBo7B,EAAQ5xB,SAC9CvG,GAAOiF,UAAUC,SAAS,oBAC1BvF,KAAKy4B,YAAYD,EAASrgC,GAG1B6H,KAAK04B,UAAUF,EAASrgC,OAG3B,CACD,GAAIwgC,GAAY34B,KAAK5I,KAAK6gC,WAAW53B,GACjClI,EAASwgC,EAAU/vB,OACvB,IAAI5I,KAAK5I,KAAKiX,gBAAkBrO,KAAKjC,uBAAyBjG,OAAOC,KAAKI,GAAQrB,OAAQ,CAEtFqB,EAAS6H,KAAK5I,KAAKqhB,cAA6B,WAAEzf,OAAO,SAAU+D,GAAK,MAAOA,GAAE2E,MAAQi3B,EAAUp6B,IAAI6K,aAAa,cAAgB,GAAG/K,KAEvI2B,KAAK/C,sBACL9E,EAAS6H,KAAK5C,wBAAwBu7B,EAAU/xB,WAEhDvG,EAAOiF,UAAUC,SAAS,oBAC1BvF,KAAKy4B,YAAYE,EAAUp6B,IAAKpG,GAGhC6H,KAAK04B,UAAUC,EAAUp6B,IAAKpG,KAa1CmlB,EAASnhB,UAAUu8B,UAAY,SAAUn6B,EAAKpG,EAAQb,EAAKyC,GACvD,GAAIyK,GAAQxE,KACR44B,EAAY54B,KAAKnD,UAUrB,IATKmD,KAAKjC,uBACN66B,EAAY54B,KAAKlD,SAAS9D,OAAO,SAAU+D,GACvC,MAAOA,GAAEjE,mBAGjBX,EAAS6H,KAAK64B,yBAAyBt6B,EAAKpG,IACvChB,oBAAkBoH,IAAQA,EAAIa,MAAM,GAAGkG,UAAUC,SAAS,kBAC3DvF,KAAKqtB,cAAc9uB,GAAK,GAExByB,KAAKykB,cAAgBzuB,EAAagK,MAAO,CACzC,GAAIgD,IAAS3E,KAAMu6B,EAAWr6B,IAAKA,EAAK2H,QAAQ,GAC5C4yB,GAAoB,CACpB94B,MAAK5I,KAAKq/B,cAAgBt/B,oBAAkB6I,KAAK5I,KAAKq/B,YAAYsC,SAASC,uBAC3EF,IAAoB94B,KAAK5I,KAAKq/B,YAAYsC,SAASC,oBAAwC,mBAAEn/B,OAE5FmG,KAAKi5B,4BAWCj5B,KAAKwM,aAAgBssB,GAAwG,QAAnF94B,KAAK5I,KAAKq/B,YAAYsC,SAASC,oBAAwC,mBAAEn/B,SACzHmG,KAAKk5B,kBAAoBl5B,KAAKi5B,2BAC/Bj5B,KAAKm5B,WAAW56B,EAAKpG,EAAQygC,EAAWthC,EAAKyC,GAZ7CiG,KAAKmG,Qb9qFE,Ya8qFwBnD,EAAM,SAAUo2B,GAC3C50B,EAAM00B,iBAAmBE,EAAclzB,OAClCkzB,EAAclzB,SACXkzB,EAAc7V,WACd/e,EAAM60B,0BAA0BlhC,EAAQ,SAAUb,EAAKyC,GAE3DyK,EAAM20B,WAAW56B,EAAKpG,EAAQygC,EAAWthC,EAAKyC,MAQ1DiG,KAAKi5B,2BAA4B,MAEhC,KAAKj5B,KAAKykB,aAAgBzkB,KAAKykB,aAAezuB,EAAagK,MAAQ,CAChEgD,GAAS3E,KAAMlG,EAAQoG,IAAKA,EAAK2H,QAAQ,EAC7ClG,MAAKmG,QbhsFM,YagsFoBnD,EAAM,SAAUo2B,GACtCA,EAAclzB,SACXkzB,EAAc7V,WACd/e,EAAM60B,0BAA0BlhC,EAAQ,SAAUb,EAAKyC,GAE3DyK,EAAM20B,WAAW56B,EAAKpG,EAAQygC,EAAWthC,EAAKyC,QAM9DujB,EAASnhB,UAAUg9B,WAAa,SAAU56B,EAAKpG,EAAQygC,EAAWthC,EAAKyC,GACnEiG,KAAKs5B,eAAe,SAAU/6B,EAAKpG,EAEnC,MAAMnC,EAAagK,OAAU5G,EAAU4G,UAAYtJ,EAAgBsJ,QAAU7I,oBAAkBgB,EAAoB,WAAK,CACpH,GAAIohC,IAAel7B,KAAMlG,EAAQoG,IAAKA,EACjCpH,qBAAkB6I,KAAKrH,qBACxBqH,KAAKw5B,yBAAyBD,EAAWl7B,MAAM,GAE/C2B,KAAKykB,cAAgBzkB,KAAKy5B,0BAC1Bz5B,KAAKy5B,0BAA2B,EAChCF,GAAel7B,KAAMu6B,EAAWr6B,IAAKA,GACrCyB,KAAKmG,QbxtFC,WawtFwBozB,IAExBv5B,KAAKykB,aACXzkB,KAAKmG,Qb3tFC,Wa2tFwBozB,KAI1Cjc,EAASnhB,UAAUk9B,0BAA4B,SAAUlhC,EAAQ+C,EAAQ5D,EAAKyC,GAC1E,IAAM5C,oBAAkBG,IAAQa,EAAO6H,KAAK7E,0BAA0B,MAAQ7D,KACxEH,oBAAkB4C,IAAUA,IAAU5B,EAAO4B,OADnD,CAIA,GAAIpC,GAAUkB,EAAoBV,GAAQa,OAAO,SAAU+D,GACvD,MAAOA,GAAEjE,iBAEbnB,GAAQ0F,QAAQlF,EAChB,KAAK,GAAIvB,GAAI,EAAGA,EAAIe,EAAQb,OAAQF,IAChCoJ,KAAKs5B,eAAep+B,EAAQ,KAAMvD,EAAQZ,SAASH,EAAEI,WAAY,QAGzEsmB,EAASnhB,UAAU08B,yBAA2B,SAAUt6B,EAAKpG,GAyBzD,MAxBI6H,MAAKwM,aAAkD,QAAnCxM,KAAKgO,aAAaC,cAA0BjO,KAAKykB,aAAettB,oBAAkBgB,KACrGnC,EAAagK,MACd7H,EAAS6H,KAAKlD,SAAS9D,OAAO,SAAU+D,GACpC,MAAOA,GAAEjE,kBAGR3B,oBAAkBgB,KAEnBA,EADA6H,KAAKomB,eACIpmB,KAAK5I,KAAKgG,wBAAwBmB,EAAI6K,aAAa,kBAGxDpJ,KAAKjC,sBAAwBiC,KAAK0kB,cAC9B1kB,KAAKykB,cAAiC,IAAlBlmB,EAAIqI,SACf5G,KAAK5I,KAAKgG,wBAAwBrG,SAASwH,EAAI6K,aAAa,iBAAkB,KAG9EpJ,KAAK5I,KAAKgG,wBAAwBmB,EAAIqI,UAI1C5G,KAAK5I,KAAKgG,wBAAwBrG,SAASwH,EAAI6K,aAAa,iBAAkB,MAI5FjR,GAUXmlB,EAASnhB,UAAUs8B,YAAc,SAAUl6B,EAAKpG,EAAQb,GACpD,GAAIkN,GAAQxE,KACR44B,EAAY54B,KAAKnD,UAOrB,IANKmD,KAAKjC,uBACN66B,EAAY54B,KAAKlD,SAAS9D,OAAO,SAAU+D,GACvC,MAAOA,GAAEjE,mBAGjBX,EAAS6H,KAAK64B,yBAAyBt6B,EAAKpG,GACxC6H,KAAK0kB,gBAAkB1uB,EAAagK,MAAO,CACvCgD,GAAS3E,KAAMu6B,EAAWr6B,IAAKA,EAAK2H,QAAQ,EAC3ClG,MAAK05B,2BAWA15B,KAAKwM,aAAgBxM,KAAK25B,qBAAsB35B,KAAK05B,4BAC3D15B,KAAK45B,aAAar7B,EAAKpG,EAAQygC,EAAWthC,GAX1C0I,KAAKmG,QbrxFG,aaqxFwBnD,EAAM,SAAU62B,GAC5Cr1B,EAAMm1B,mBAAqBE,EAAe3zB,OACrC2zB,EAAe3zB,SACZ2zB,EAAerW,aACfhf,EAAM60B,0BAA0BlhC,EAAQ,WAAYb,GAExDkN,EAAMo1B,aAAar7B,EAAKpG,EAAQygC,EAAWthC,MAOvD0I,KAAK05B,4BAA6B,MAEjC,KAAK15B,KAAK0kB,eAAkB1kB,KAAK0kB,eAAiB1uB,EAAagK,MAAQ,CACxE,GAAIgD,IAAS3E,KAAMlG,EAAQoG,IAAKA,EAAK2H,QAAQ,EAC7ClG,MAAKmG,QbtyFO,aasyFoBnD,EAAM,SAAU62B,GACvCA,EAAe3zB,QAChB1B,EAAMo1B,aAAar7B,EAAKpG,EAAQygC,EAAWthC,OAM3DgmB,EAASnhB,UAAUy9B,aAAe,SAAUr7B,EAAKpG,EAAQygC,EAAWthC,GAChE0I,KAAKs5B,eAAe,WAAY/6B,EAAKpG,EACrC,IAAI2hC,IAAiBz7B,KAAMlG,EAAQoG,IAAKA,EACnCvI,GAAagK,QACT7I,oBAAkB6I,KAAKrH,qBACxBqH,KAAKw5B,yBAAyBM,EAAaz7B,MAAM,GAEjD2B,KAAK0kB,gBAAkB1kB,KAAK+5B,2BAC5B/5B,KAAK+5B,2BAA4B,EACjCD,GAAiBz7B,KAAMu6B,EAAWr6B,IAAKA,GACvCyB,KAAKmG,Qb1zFE,Ya0zFwB2zB,IAEzB95B,KAAK0kB,eACX1kB,KAAKmG,Qb7zFE,Ya6zFwB2zB,GAE/B95B,KAAKwY,yBACcxY,KAAK5I,KAAKwX,aAAaorB,kBAAkBrrB,aAC5C3O,KAAK5I,KAAKwX,aAAaorB,kBAAkBC,UACxBj6B,KAAK5I,KAAK8iC,iBAAkBl6B,KAAKgoB,QAC9DhoB,KAAK5I,KAAKwX,aAAaorB,kBAAkBG,SAAS,EAAGn6B,KAAK5I,KAAK8iC,kBAK/E5c,EAASnhB,UAAUq9B,yBAA2B,SAAUrhC,EAAQwnB,GAC5D,GAAIya,GAAejiC,CACnB,IAAIiiC,EAAatjC,OACb,IAAK,GAAIF,GAAI,EAAGA,EAAIwjC,EAAatjC,OAAQF,IACrCwjC,EAAarjC,SAASH,EAAEI,WAAY,KAAKgJ,KAAKrH,oBAAsBgnB,EACpEllB,GAAaZ,MAAOugC,EAAarjC,SAASH,EAAEI,WAAY,KAAMkE,OAAQ,QAAU8E,KAAMA,KAAKpF,gBAAiBw/B,EAAarjC,SAASH,EAAEI,WAAY,KAAK8C,MAAOkG,KAAK5I,KAAK+yB,iBAAkBnqB,KAAKrH,wBAIjMR,GAAO,GAAK6H,KAAKrH,oBAAsBgnB,EACvCllB,GAAaZ,MAAO1B,EAAQ+C,OAAQ,QAAU8E,KAAMA,KAAKpF,gBAAiBzC,EAAO2B,MAAOkG,KAAK5I,KAAK+yB,iBAAkBnqB,KAAKrH,qBASjI2kB,EAASnhB,UAAUk+B,cAAgB,SAAUtgC,GACzC,IAAMiG,KAAKwM,aAAkD,QAAnCxM,KAAKgO,aAAaC,cAA2BjO,KAAKjC,wBAA0B/H,EAAagK,MAAO,CAClH+L,EAAM/L,KAAK5I,KAAKlB,WAAW8C,OAAO,SAAU+D,GAI5C,MAHIA,GAAEjE,iBAAmBiE,EAAEhD,QAAUA,IACjCgD,EAAEnE,UAAW,GAEVmE,EAAEjE,iBAAmBiE,EAAEhD,QAAUA,GAE5CiG,MAAKs6B,aAAavuB,EAAK,KAAMhS,GAAO,OAEnC,CACD,GAAIgS,GAAM/L,KAAKu6B,iBAAiBxgC,GAC5B5B,EAASH,YAAU,UAAW+T,EAClC/L,MAAKs6B,aAAaniC,EAAQ,KAAM4B,KASxCujB,EAASnhB,UAAUq+B,YAAc,SAAUljC,GACvC0I,KAAKy6B,0BAA0BnjC,EAAK,WAExCgmB,EAASnhB,UAAUm+B,aAAe,SAAUniC,EAAQb,EAAKyC,EAAO2gC,OAC3C,KAAbA,IAAuBA,GAAW,EA6BtC,KAAK,GADD7kB,GAAS7V,KACJpJ,EAAI,EAAGA,EAAIuB,EAAOrB,OAAQF,KA5BrB,SAAUA,GACpB,IAAKO,oBAAkBgB,EAAOpB,SAASH,EAAEI,WAAY,KAAKuB,YAAa,CACnE,GAAIoiC,GAAcxiC,EAAOpB,SAASH,EAAEI,WAAY,KAAKuB,WAAWE,SAC5DF,EAAasd,EAAO/Y,SAAS9D,OAAO,SAAU+D,GAC9C,MAAOA,GAAEtE,WAAakiC,GAEtB3kC,GAAa6f,KACbtd,EAAasd,EAAOzY,wBAAwBpE,OAAO,SAAU+D,GACzD,MAAOA,GAAEtE,WAAakiC,MAGC,IAA3BpiC,EAAW,GAAGK,UACdT,EAAOF,KAAKM,EAAW,IACvBA,EAAW,GAAGK,UAAW,GAGpBV,EAAgB2d,EAAQtd,EAAW,GAAIsd,EAAOhZ,aAC3CtE,EAAW,GAAGK,cAAyCkZ,KAA7BvZ,EAAW,GAAGA,YACxCJ,EAAOF,KAAKM,EAAW,IAKlCmiC,GACD7kB,EAAO6iB,UAAU,KAAMvgC,EAAOpB,SAASH,EAAEI,WAAY,KAAMM,EAAKyC,IAK5DnD,EAER8jC,IACA16B,KAAK04B,UAAU,KAAMvgC,EAAQb,EAAKyC,IAG1CujB,EAASnhB,UAAUo+B,iBAAmB,SAAUxgC,GAC5C,GAAIiL,GAAOhF,KAAKvB,UAAUzF,OAAO,SAAU+D,GACvC,OAAkD,IAA1CA,EAAEyM,UAAUpL,QAAQ,QAAUrE,KAC9BgD,EAAEkL,cAAc,wBAA0BlL,EAAEkL,cAAc,uBAMtE,QADYtQ,QAHEqI,KAAK5C,wBAAwBpE,OAAO,SAAU+D,GACxD,MAAOA,GAAEhD,QAAUA,GAASgD,EAAEjE,kBAEJkM,KAAMA,IASxCsY,EAASnhB,UAAUy+B,gBAAkB,SAAU7gC,GAC3C,IAAMiG,KAAKwM,aAAkD,QAAnCxM,KAAKgO,aAAaC,cAA2BjO,KAAKjC,wBAA0B/H,EAAagK,MAAO,CACtH,GAAI7H,GAAS6H,KAAK5I,KAAKlB,WAAW8C,OAAO,SAAU+D,GAI/C,MAHIA,GAAEjE,iBAAmBiE,EAAEhD,QAAUA,IACjCgD,EAAEnE,UAAW,GAEVmE,EAAEjE,iBAAmBiE,EAAEhD,QAAUA,GAE5CiG,MAAK66B,eAAe1iC,EAAQ,MAAM,OAEjC,CACD,GAAI4T,GAAM/L,KAAKu6B,iBAAiBxgC,GAC5BpC,EAAUK,YAAU,UAAW+T,EACnC/L,MAAK66B,eAAeljC,KAS5B2lB,EAASnhB,UAAU2+B,cAAgB,SAAUxjC,GACzC0I,KAAKy6B,0BAA0BnjC,EAAK,aAExCgmB,EAASnhB,UAAUs+B,0BAA4B,SAAUnjC,EAAK4D,GAC1D,GAAI6/B,GAAkB/6B,KAAK7E,0BAA0B,GACjDjF,EAAaF,EAAagK,MAAQA,KAAK5C,wBAA0B4C,KAAK5I,KAAKlB,UAC/E,KAAKiB,oBAAkB4jC,GAAkB,CACrC,GAAIhvB,GAAM7V,EAAW8C,OAAO,SAAU+D,GAClC,MAAOA,GAAE,GAAKg+B,GAAiB/jC,aAAeM,EAAIN,YAEvC,YAAXkE,EACA8E,KAAKs6B,aAAavuB,EAAKzU,EAAK,MAG5B0I,KAAK66B,eAAe9uB,EAAKzU,KAIrCgmB,EAASnhB,UAAU0+B,eAAiB,SAAU1iC,EAAQb,EAAKojC,GAEvD,OADiB,KAAbA,IAAuBA,GAAW,GAClCA,EACA16B,KAAKy4B,YAAY,KAAMtgC,OAGvB,KAAK,GAAIvB,GAAI,EAAGA,EAAIuB,EAAOrB,OAAQF,IAC/BoJ,KAAKy4B,YAAY,KAAMtgC,EAAOpB,SAASH,EAAEI,WAAY,KAAMM,EAGnE,KAAK0I,KAAK5I,KAAKqhB,cAAc0a,qBAAuBnzB,KAAKjC,sBAAwBiC,KAAKvB,WAC/EuB,KAAKnD,WAAW/F,SAAWkJ,KAAKvB,UAAU3H,OAAQ,CAErDkJ,KAAK5I,KAAKqhB,cAAcuiB,YAAc,EACtCh7B,KAAK5I,KAAKqhB,cAA2B,UAAK,IAQlD6E,EAASnhB,UAAUonB,UAAY,WAC3BvjB,KAAKy5B,0BAA2B,EAChCz5B,KAAKi5B,2BAA4B,EACjCj5B,KAAKi7B,kBAAkB,WAO3B3d,EAASnhB,UAAUqnB,YAAc,WAC7BxjB,KAAK+5B,2BAA4B,EACjC/5B,KAAK05B,4BAA6B,EAClC15B,KAAKi7B,kBAAkB,aAE3B3d,EAASnhB,UAAU8+B,kBAAoB,SAAU//B,GAC7C,GAAI8J,GAAOhF,KAAKvB,UAAUzF,OAAO,SAAU+D,GACvC,MAAOA,GAAEkL,cAAc,eAA4B,WAAX/M,EAAsB,WAAa,YAO/E,KALK8J,EAAKlO,QAAUkJ,KAAKvB,UAAU3H,QAC/BkO,EAAK/M,KAAK+H,KAAKvB,UAAU,IAE7BuB,KAAKykB,aAAc,EACnBzkB,KAAK0kB,eAAgB,GACf1kB,KAAKwM,aAAkD,QAAnCxM,KAAKgO,aAAaC,cAA2BjO,KAAKjC,sBAAwBiC,KAAKwY,2BAA6BxiB,EAAagK,OAM/I,GALAA,KAAKlD,SAAS9D,OAAO,SAAU+D,GACvBA,EAAEjE,kBACFiE,EAAEnE,SAAsB,aAAXsC,KAGjB8J,EAAKlO,OACL,IAASF,EAAI,EAAGA,EAAIoO,EAAKlO,OAAQF,IACd,aAAXsE,EACK/D,oBAAkB6I,KAAK5C,wBAAwB4H,EAAKjO,SAASH,EAAEI,WAAY,KAAK4P,YACjF5G,KAAKy4B,YAAYzzB,EAAKjO,SAASH,EAAEI,WAAY,MAI5CgJ,KAAKjC,qBAGyC,SAA1CiH,EAAK,GAAGoE,aAAa,kBAC1BpJ,KAAK04B,UAAU1zB,EAAK,IAHpBhF,KAAK04B,UAAU1zB,EAAKjO,SAASH,EAAEI,WAAY,UAQtD,IAAIgJ,KAAKwM,YAAa,CACvB,GAAI0uB,GAAsBl7B,KAAKkO,iBAC/BlO,MAAKwB,eAAgB0M,mBAAmB,IAAQ,GAChDlO,KAAK5I,KAAKq/B,YAAYF,SAAS,GAC/Bv2B,KAAKwB,eAAgB0M,kBAAmBgtB,IAAuB,QAInE,KAAK,GAAItkC,GAAI,EAAGA,EAAIoO,EAAKlO,OAAQF,IACd,aAAXsE,EACA8E,KAAKy4B,YAAYzzB,EAAKjO,SAASH,EAAEI,WAAY,MAG7CgJ,KAAK04B,UAAU1zB,EAAKjO,SAASH,EAAEI,WAAY,KAIvDgJ,MAAKykB,aAAc,EACnBzkB,KAAK0kB,eAAgB,GAEzBpH,EAASnhB,UAAUm9B,eAAiB,SAAUp+B,EAAQqD,EAAKpG,EAAQwe,GAC/D,GAKIG,GALAtS,EAAQxE,KACRo5B,GAAkB76B,IAAKA,EAAKF,KAAMlG,EAAQ4O,aAAexH,YAAarE,GACtEnC,EAAeiH,KAAK5I,KAAK8U,gBAAgBlT,OAAO,SAAU+D,GAC1D,MAAOA,GAAEmB,iBAAmB/F,EAAOM,aAGjCzC,EAAagK,OAAoB,WAAX9E,GAAuB8E,KAAKpF,iBAAmBlE,EAAgBsJ,QAAUjH,EAAajC,QAAuB,aAAXoE,GAA0B8E,KAAKykB,aAAezkB,KAAK8P,oBAAuB9Z,EAAagK,OAASA,KAAKpF,iBAAmBlE,EAAgBsJ,QAClQA,KAAKm7B,oBAAoB/B,EAE7B,IAAIxiB,GAAW5W,KAAKvB,SACpB,IAAIuB,KAAK+Q,YAAa,CACd/L,EAAOhF,KAAK0O,kBAAkB1J,IAClC4R,MAAcpR,MAAMnJ,KAAK2I,GAE7B,GAAI4B,EAWJ,IAVIzP,oBAAkBoH,IAClBqI,EAAW5G,KAAK5I,KAAK8U,gBAAgB9N,QAAQjG,GAC7CoG,EAAMqY,EAAS7f,SAAS6P,EAAS5P,WAAY,MAG7C4P,GAAYrI,EAAI6K,aAAa,iBAE5BjS,oBAAkBoH,IACnBA,EAAI2L,aAAa,gBAA4B,WAAXhP,EAAsB,OAAS,WAE/D8E,KAAKwM,aAAkD,QAAnCxM,KAAKgO,aAAaC,cAA2BjO,KAAKjC,uBAA0B/H,EAAagK,OAC3GtJ,EAAgBsJ,MAGnB,CACD,GAAIo7B,OAAgB,EACpB,IAAe,WAAXlgC,EAAqB,CAarB,GAZAkgC,EAAgB,YACXzkB,IACDxe,EAAOS,UAAW,EAClBoH,KAAKud,mBAAmBplB,EAAOM,UAAUG,SAAWT,EAAOS,UAE1DzB,oBAAkBoH,KACnBuY,EAAYvY,EAAIwY,uBAAuB,sBAAsB,IAE7DJ,IAAYxf,oBAAkBgB,EAAO6H,KAAKrH,sBAC1CR,EAAO6H,KAAKrH,qBAAuBxB,oBAAkB2f,KACrDA,EAAYvY,EAAIwY,uBAAuB,oBAAoB,IAE3D5f,oBAAkB2f,GAClB,MAECA,GAAUxR,UAAUC,SAAS,qBAC9BiI,YAAUsJ,GAAY,oBAE1BvM,eAAauM,GAAY,0BAExB,CAaD,GAZAskB,EAAgB,OACXzkB,IAAWjgB,EAAgBsJ,QAC5B7H,EAAOS,UAAW,EAClBoH,KAAKud,mBAAmBplB,EAAOM,UAAUG,SAAWT,EAAOS,UAE1DzB,oBAAkBoH,KACnBuY,EAAYvY,EAAIwY,uBAAuB,oBAAoB,IAE3DJ,IAAYxf,oBAAkBgB,EAAO6H,KAAKrH,uBACzCR,EAAO6H,KAAKrH,qBAAuBxB,oBAAkB2f,KACtDA,EAAYvY,EAAIwY,uBAAuB,sBAAsB,IAE7D5f,oBAAkB2f,GAClB,MAECA,GAAUxR,UAAUC,SAAS,uBAC9BiI,YAAUsJ,GAAY,sBAE1BvM,eAAauM,GAAY,oBAE7BvY,EAAIkH,iBAAiB,kBAAkB,GAAGyE,aAAa,gBAA4B,WAAXhP,EAAsB,OAAS,QACvG,IAAImgC,GAAazkB,EAAS5d,OAAO,SAAUyH,GACvC,MAAOA,GAAE6E,UAAUC,SAAS,uBAAyBpN,EAAO2B,MAAQ,SAAW3B,EAAO4B,MAAQ,KAElG,IAAI/D,EAAagK,QAAU5G,EAAU4G,MACjCA,KAAKs7B,aAAapgC,EAAQqD,EAAKpG,OAE9B,CACKzB,EAAgBsJ,QAASjH,EAAajC,QAAsB,aAAXoE,GACnD8E,KAAKu7B,YAAYrgC,EAAQqD,EAAKpG,EAElC,IAAIqjC,GAAax7B,KAAK8O,oBAAoB9O,KAAK8O,oBAAoBhY,OAAS,GAAU,MAClF2kC,EAAUz7B,KAAKxB,cAAcg9B,EAC7Bx7B,MAAK5I,KAAKsX,kBAAkBG,cAAgB7O,KAAK5I,KAAKwX,aAAaC,eAAiB1X,oBAAkBskC,KAAaA,EAAQr8B,MAAM,GAAGkG,UAAUC,SAAS,kBACvJvF,KAAKqtB,cAAcoO,GAAS,GAGpC,GAAI/kC,EAAgBsJ,OAAoB,WAAX9E,EAAqB,CAC9C,GACIm7B,GADcr2B,KAAK5C,wBACUpE,OAAO,SAAU+D,GAC9C,MAAO7E,GAAgBsM,EAAOzH,EAAGyH,EAAM3H,aAE3CmD,MAAKmT,YAAYzB,OAAS2kB,EAM9B,IAJKl/B,oBAAkB2f,IAAcA,EAAU5O,QAAQ,kBAAkB5C,UAAUC,SAAS,+BACxFuR,EAAU5O,QAAQ,kBAAkB5C,UAAUwb,OAAO,6BACrDhK,EAAU5O,QAAQ,kBAAkBwzB,gBAAgB,kBAEpD17B,KAAKwtB,kBAAoBjvB,EAAIa,MAAM,GAAGkG,UAAUC,SAAS,iBAIzD,IAAK,GAHDsoB,GAAY7tB,KAAKvB,UACjBuG,EAAOhF,KAAK0O,kBAAkB1J,KAEzBpO,GADTi3B,KAAeroB,MAAMnJ,KAAK2I,IACHlO,OAAS,EAAGF,GAAK,EAAGA,IACvC,IAAKsD,EAAS2zB,EAAU92B,SAASH,EAAEI,WAAY,MAAO,CAClD,GACIs/B,GADQt2B,KAAK0O,kBACGC,aAChBE,EAAe7O,KAAK4O,aAAaC,YACrC7O,MAAKqtB,cAAcQ,EAAU92B,SAASH,EAAEI,WAAY,KAAMs/B,GAAWznB,EACrE,OAIZ7O,KAAK2Q,OAAO,qBAAuB0qB,WAAYA,EAAYngC,OAAQkgC,EAAejjC,OAAQA,EAAQoG,IAAKA,IACvGyB,KAAK2tB,aAAa/W,OAzFlB5W,MAAK2Q,ObjkGqB,4BaikGqBzV,OAAQA,EAAQqD,IAAKA,EAAKpG,OAAQA,KA4FzFmlB,EAASnhB,UAAUg/B,oBAAsB,SAAU/B,GAC/C,GAAI50B,GAAQxE,IACZ,IAAkC,aAA9Bo5B,EAAc75B,aAA8B7I,EAAgBsJ,MAAO,CAEnE,IAAK,GADD27B,GAAkB37B,KAAKlD,SAAS0I,QAC3B5O,EAAI,EAAGA,EAAI+kC,EAAgB7kC,OAAQF,IACpC+kC,EAAgB5kC,SAASH,EAAEI,WAAY,KAAqB,iBAAMoiC,EAAc/6B,KAAe,WAC/Fs9B,EAAgBl/B,OAAO7F,EAAG,GAC1BA,GAAQ,EAIhB,aADAoJ,KAAKmT,YAAYzB,OAASiqB,GAG9B,GAAIC,GAAO,GAAI5N,WAEfoL,GAAgC,cAAIwC,EAAK1N,OACzC,IAAI/1B,GAASihC,EAAc/6B,IAC3B2B,MAAKmG,Qb5sGgB,kBa4sGgBizB,GACrCwC,EAAKzM,QAAQ5a,KAAK,WACd,GAAI6kB,EAAcryB,UAAUjQ,OAAQ,CAC5BJ,EAAgB8N,KAChBA,EAAM1H,SAAW0H,EAAM2O,YAAYzB,QAEnClN,EAAMgU,yBAA2B9hB,EAAgB8N,KACjDA,EAAM1H,SAAW0H,EAAM6f,mBAI3B,KAAK,GAFDlL,GAAe3U,EAAe,SAC9B1K,EAAQ,EACHlD,EAAI,EAAGA,EAAIuiB,EAAYriB,OAAQF,IACpC,GAAIuiB,EAAYpiB,SAASH,EAAEI,WAAY,KAAKgD,WAAa7B,EAAO6B,SAAU,CACtEF,EAAQlD,CACR,OAOR,IAAK,GAJDilC,GAAS59B,WAAS,SAAUuG,EAAMtO,YAClC6Q,EAAYxN,EAAY6/B,EAAcryB,WACtC+0B,EAAW3jC,EAAOqM,EAAM9H,eAAgBvE,EAAOqM,EAAM9H,cAAc5F,OAASiQ,EAAUjQ,OACtFqB,EAAOqM,EAAM9H,cAAc5F,OAA4BiQ,EAAUjQ,OAC5DF,EAAI,EAAGA,EAAIklC,EAAUllC,IACtBuB,EAAOqM,EAAM9H,eACbm/B,EAAO7iC,OAAO,SAAU+D,EAAGnG,GACnBmG,EAAEyH,EAAMjI,mBAAqBpE,EAAOqM,EAAMhI,YAC1Cq/B,EAAOp/B,OAAO7F,EAAG,KAIzBmQ,EAAUhQ,SAASH,EAAEI,WAAY,MACjC+P,EAAUhQ,SAASH,EAAEI,WAAY,KAAK+C,MAAQ5B,EAAO4B,MAAQ,EAC7DgN,EAAUhQ,SAASH,EAAEI,WAAY,KAAK8C,MAAQmc,KAAKC,KAAqB,IAAhBD,KAAKE,UAC7DpP,EAAUhQ,SAASH,EAAEI,WAAY,KAAKuB,WAAayD,YAAW7D,GAC9D4O,EAAUhQ,SAASH,EAAEI,WAAY,KAAKgD,SAAWgC,YAAW+K,EAAUhQ,SAASH,EAAEI,WAAY,YACtF+P,GAAUhQ,SAASH,EAAEI,WAAY,KAAKuB,WAAWQ,mBACjDgO,GAAUhQ,SAASH,EAAEI,WAAY,KAAKgD,SAASzB,WACtDwO,EAAUhQ,SAASH,EAAEI,WAAY,KAAKkH,eAAiB/F,EAAOM,SAC9DsO,EAAUhQ,SAASH,EAAEI,WAAY,KAAKyB,SAAWud,SAAOxR,EAAM+M,QAAQC,GAAK,UAC3EkD,WAAS,sBAAwB3N,EAAUhQ,SAASH,EAAEI,WAAY,KAAKyB,SAAUsO,EAAUhQ,SAASH,EAAEI,WAAY,KAAMwN,KACnHrN,oBAAkB4P,EAAUhQ,SAASH,EAAEI,WAAY,KAAKwN,EAAM9H,gBAC9DqK,EAAUhQ,SAASH,EAAEI,WAAY,KAAKwN,EAAM0P,kBAAoBxd,EAAgB8N,MACjFuC,EAAUhQ,SAASH,EAAEI,WAAY,KAAK8B,iBAAkB,GAExDpC,EAAgB8N,IAAUrM,EAAOqM,EAAM9H,eAAiBvE,EAAOqM,EAAM9H,cAAc3F,SAASH,EAAEI,WAAY,KAC1GmiB,EAAY1c,OAAO3C,EAAQ,EAAIlD,EAAG,EAAGmQ,EAAUhQ,SAASH,EAAEI,WAAY,MAGtEmiB,EAAY1c,OAAO3C,EAAQ,EAAIlD,EAAGuB,EAAOqM,EAAM9H,eAC3CvE,EAAOqM,EAAM9H,cAAc3F,SAASH,EAAEI,WAAY,KAAO,EAAI,EAAG+P,EAAUhQ,SAASH,EAAEI,WAAY,OAIzGmiB,EAAY1c,OAAO3C,EAAQ,EAAIlD,EAAG,EAG1CuiB,GAAYpiB,SAAS+C,EAAM9C,WAAY,KAAK,GAAKwN,EAAM9H,cAAgBqK,EACvEoS,EAAYpiB,SAAS+C,EAAM9C,WAAY,KAAK+B,aAAegO,EAC3DoS,EAAYpiB,SAAS+C,EAAM9C,WAAY,KAAK4B,UAAW,EACvD8b,WAAS,sBAAwByE,EAAYpiB,SAAS+C,EAAM9C,WAAY,KAAKyB,SAAU0gB,EAAYpiB,SAAS+C,EAAM9C,WAAY,KAAMwN,EACpI,KAAK,GAAI7K,GAAI,EAAGA,EAAIy/B,EAAcryB,UAAUjQ,OAAQ6C,IAChDkiC,EAAO5jC,KAAKmhC,EAAcryB,UAAUhQ,SAAS4C,EAAE3C,WAAY,MAG/DN,EAAgB8N,IAAUA,EAAMsL,mBAAmD,WAA9BspB,EAAc75B,cACnEiF,EAAM2O,YAA0B,gBAChC3O,EAAM2O,YAA0B,aAAIimB,EAAc/6B,MAEtDmG,EAAMkqB,iBAAkB,CACxB,IAAIqN,GAA4Bv3B,EAAMkK,kBAAkBgV,cAAcuW,SACtEz1B,GAAMpN,KAAKm5B,UACP/rB,EAAMgU,0BACNhU,EAAMkK,kBAAkBgV,cAAcuW,UAAY8B,GAEtDv3B,EAAM2B,QbjwGI,WaiwGqBizB,MAGvC9b,EAASnhB,UAAUm/B,aAAe,SAAUpgC,EAAQqD,EAAKpG,GACrD,GAAIye,GAAW5W,KAAKvB,SAEpB,IAAIuB,KAAK+Q,YAAa,CAClB,GAAIirB,GAASh8B,KAAK0O,kBAAkB1J,IACpC4R,MAAcpR,MAAMnJ,KAAK2/B,GAE7B,GAAIh5B,IAAS3E,KAAMlG,EAAQoG,IAAKA,GAC5ByG,IAIJ,IAHAA,EAAO4R,EAAS5d,OAAO,SAAUyH,GAC7B,MAASA,GAAEwH,cAAc,kBAAoB9P,EAAO2B,MAAQ,SAAW3B,EAAO4B,MAAQ,KAAS0G,EAAEwH,cAAc,kBAAoB9P,EAAO2B,MAAQ,0BAEvI,WAAXoB,EAAqB,CACrB8E,KAAK2Q,ObzwGS,gBaywGqBxY,OAAQA,EAAQ6M,KAAMA,EAAMkS,UAAW3Y,GAC1E,IAAI09B,IAAW19B,IAAKA,EAAKF,KAAMlG,EAC3B6M,GAAKlO,OAAS,GACdkJ,KAAKmG,QbpxGC,WaoxGwB81B,OAGlB,aAAX/gC,GAAyB8E,KAAKjC,qBACnCiC,KAAKwnB,WAAoC,sBAAItsB,OAAQA,EAAQ/C,OAAQ6K,EAAK3E,KAAM2G,KAAM,KAAMkS,UAAWlU,EAAKzE,OAG5GyB,KAAKk8B,qBAAsB/jC,OAAQA,EAAQ6M,KAAMA,IACjDhF,KAAKmG,QbxxGM,YawxGoBnD,KAGvCsa,EAASnhB,UAAUo/B,YAAc,SAAUrgC,EAAQqD,EAAKpG,GACpD,GAAI6M,GACAjM,EAAeiH,KAAK5I,KAAK8U,gBAAgBlT,OAAO,SAAU+D,GAC1D,MAAOA,GAAEmB,iBAAmB/F,EAAOM,UAEnCuH,MAAKwtB,iBAAmBjvB,EAAIa,MAAM,GAAGkG,UAAUC,SAAS,kBACxDvF,KAAKqtB,cAAc9uB,GAAK,EAE5B,IAAI49B,GACAC,EACAxlB,EAAW5W,KAAKvB,SACpB,IAAIuB,KAAK+Q,YAAa,CAClB,GAAIsrB,GAASr8B,KAAK0O,kBAAkB1J,IACpC4R,MAAcpR,MAAMnJ,KAAKggC,GAE7B,GAAIjB,GAA4B,WAAXlgC,EAAuB,YAAc,OACtD6/B,EAAkB/6B,KAAK7E,0BAA0B,EACrD,IAAI6E,KAAK/C,sBAAwB+C,KAAKwM,YAAa,CAC/CxH,IACA,KAASpO,EAAI,EAAGA,EAAImC,EAAajC,OAAQF,IAAK,CAC1C,GAAIgQ,GAAW5G,KAAK5I,KAAKsH,wBAAwB3F,EAAahC,SAASH,EAAEI,WAAY,KAAK,GAAK+jC,GAC/F/1B,GAAK/M,KAAK+H,KAAKvB,UAAU1H,SAAS6P,EAAS5P,WAAY,WAI3DgO,GAAO4R,EAAS5d,OAAO,SAAUyH,GAC7B,MAAOA,GAAEwH,cAAc,kBAAoB9P,EAAO2B,MAAQ,SAAW3B,EAAO4B,MAAQ,KAG5F,IAAIuiC,GAAUt8B,KAAK5I,KAAK8Y,4BAA8B,GAAKlQ,KAAK5I,KAAK+Y,6BAA+B,GAChGnQ,KAAKpB,YAAcoB,KAAKuP,eAAiBvP,KAAKnB,oBAAsBy9B,KACpEH,EAAcn8B,KAAKvB,UAAUzF,OAAO,SAAUyH,GAC1C,MAAOA,GAAEwH,cAAc,kBAAoB9P,EAAO2B,MAAQ,SAAW3B,EAAO4B,MAAQ,OAGxFuiC,IACAF,EAAkBp8B,KAAKvB,UAAUzF,OAAO,SAAUyH,GAC9C,MAAOA,GAAEwH,cAAc,kBAAoB9P,EAAO2B,MAAQ,SAAW3B,EAAO4B,MAAQ,MAG5F,IAAIwiC,GAAiBv8B,KAAK5I,KAAKgX,gBAC3BlC,EAAkBlM,KAAK5I,KAAK8U,gBAC5BF,EAAgBE,EAAgBlT,OAAO,SAAU+D,GACjD,MAAOA,GAAEtE,WAAaN,EAAOM,WAE7B+jC,EAAetwB,EAAgB9N,QAAQ4N,EAAc,GACpD7U,qBAAkBolC,EAAexlC,SAASylC,EAAaxlC,WAAY,KAAKsX,WACP,IAAlEiuB,EAAexlC,SAASylC,EAAaxlC,WAAY,KAAKsX,UACtDiuB,EAAexlC,SAASylC,EAAaxlC,WAAY,KAAKsX,SAAU,EAKpE,KAAK,GAHD+sB,GAAazkB,EAAS5d,OAAO,SAAUyH,GACvC,MAAOA,GAAE6E,UAAUC,SAAS,uBAAyBpN,EAAO2B,MAAQ,SAAW3B,EAAO4B,MAAQ,MAEzFnD,EAAI,EAAGA,EAAIoO,EAAKlO,OAAQF,IAAK,CAIlC,GAHKO,oBAAkB6N,EAAKjO,SAASH,EAAEI,WAAY,QAC/CgO,EAAKjO,SAASH,EAAEI,WAAY,KAAKoD,MAAMG,QAAU6gC,IAEhDjkC,oBAAkB6N,EAAKjO,SAASH,EAAEI,WAAY,QAAUgJ,KAAKwM,eAAiBxM,KAAKjC,sBACjFiC,KAAKwY,yBAA2BxiB,EAAagK,OAAStJ,EAAgBsJ,OAAQ,CACjFu8B,EAAev3B,EAAKjO,SAASH,EAAEI,WAAY,KAAK4P,UAAU0H,QAA4B,SAAlB8sB,CACpE,IAAI9iC,GAAe4T,EAAgBlT,OAAO,SAAU+D,GAChD,MAAOA,GAAEtE,WAAauT,EAAc,GAAG9N,kBAEtC/G,oBAAkBmB,EAAa,KAAOse,EAAS1K,EAAgB9N,QAAQ9F,EAAa,KAAKye,uBAAuB,sBAAsBjgB,SACvIylC,EAAexlC,SAASylC,EAAaxlC,WAAY,KAAKsX,SAAU,GAGnEnX,oBAAkBglC,KACnBA,EAAYplC,SAASH,EAAEI,WAAY,KAAKoD,MAAMG,QAAU6gC,GAEvDjkC,oBAAkBilC,KACnBA,EAAgBrlC,SAASH,EAAEI,WAAY,KAAKoD,MAAMG,QAAU6gC,GAEhEp7B,KAAK2Q,OAAO,kBAAoBpS,IAAKyG,EAAKjO,SAASH,EAAEI,WAAY,QAC3DG,oBAAkB4B,EAAahC,SAASH,EAAEI,WAAY,KAAK+B,eAAiBA,EAAahC,SAASH,EAAEI,WAAY,KAAK+B,aAAajC,OAAS,IAAkB,WAAXoE,GACpJ/D,oBAAkB4B,EAAahC,SAASH,EAAEI,WAAY,KAAK4B,WAAaG,EAAahC,SAASH,EAAEI,WAAY,KAAK4B,YACjHoH,KAAKs5B,eAAep+B,EAAQ8J,EAAKjO,SAASH,EAAEI,WAAY,KAAM+B,EAAahC,SAASH,EAAEI,WAAY,MAAM,GACpGgJ,KAAKuP,eAAiBvP,KAAKjB,kBAAoB5H,oBAAkBglC,IACjEn8B,KAAKs5B,eAAep+B,EAAQihC,EAAYplC,SAASH,EAAEI,WAAY,KAAM+B,EAAahC,SAASH,EAAEI,WAAY,MAAM,IAI3H,IAASJ,EAAI,EAAGA,EAAIykC,EAAWvkC,OAAQF,IAC9BO,oBAAkBkkC,EAAWtkC,SAASH,EAAEI,WAAY,OAAUgJ,KAAKwM,aAAiBxM,KAAKjC,sBAC1FiC,KAAKwY,yBAA2BxiB,EAAagK,OAAStJ,EAAgBsJ,QACtEu8B,EAAelB,EAAWtkC,SAASH,EAAEI,WAAY,KAAK4P,UAAU0H,QAA4B,SAAlB8sB,EAC1EC,EAAWtkC,SAASH,EAAEI,WAAY,KAAKoD,MAAMG,QAAU6gC,EAG1Dp7B,MAAKwM,aAAiBxM,KAAKjC,sBAAwBiC,KAAKwY,yBAA2BxiB,EAAagK,OAC9FtJ,EAAgBsJ,OACnBA,KAAK5I,KAAKuZ,OAAO,+BAAiC3L,KAAMhF,KAAK5I,KAAKgX,mBAG1EkP,EAASnhB,UAAUwxB,aAAe,SAAU3oB,GACxC,GAAIhF,KAAK0pB,eAAiB1pB,KAAK+Q,YAE3B,IAAK,GADD0rB,GAAkB,EACb7lC,EAAI,EAAGoO,GAAQpO,EAAIoO,EAAKlO,OAAQF,IAAK,CAC1C,GAAI8lC,GAAU13B,EAAKjO,SAASH,EAAEI,WAAY,IACZ,UAA1B0lC,EAAQtiC,MAAMG,UACVmiC,EAAQp3B,UAAUC,SAAS,aAC3BgF,eAAamyB,GAAU,YAEvBD,EAAkB,GAAM,GAAMC,EAAQp3B,UAAUC,SAAS,iBAAoBm3B,EAAQp3B,UAAUC,SAAS,gBACxGiI,YAAUkvB,GAAU,YAEnBA,EAAQp3B,UAAUC,SAAS,iBAAoBm3B,EAAQp3B,UAAUC,SAAS,gBAC3Ek3B,OAMpBnf,EAASnhB,UAAUwzB,sBAAwB,WACvC,GAAI3qB,GAAOhF,KAAK0O,kBAAkB1J,IAClCA,MAAUQ,MAAMnJ,KAAK2I,EAErB,KAAK,GADD23B,GAAa38B,KAAK5I,KAAKgX,gBAClBxX,EAAI,EAAGA,EAAIoO,EAAKlO,OAAQF,IAAK,CAClC,GAAIgmC,GAAQ58B,KAAK5I,KAAKsX,kBAAkB1J,KAAKjO,SAASH,EAAEI,WAAY,KAC/DoI,MAAMY,KAAKjB,iBACZR,EAAMyG,EAAKjO,SAASH,EAAEI,WAAY,KAElC6lC,GAAQx+B,KADwB,IAAtBs+B,EAAW7lC,OAAe6lC,EAAW5lC,SAASH,EAAEI,WAAY,KAAKqH,KAAO,GAAIvG,QAC/DyG,IAAKA,EAAKY,KAAMy9B,EAAOv9B,OAAQW,KAAKV,aAAaU,KAAKjB,iBACjFiB,MAAKf,aAAaC,WAAW29B,KAGrCvf,EAASnhB,UAAU+/B,oBAAsB,SAAUxlB,EAAYC,GACtDA,IACDD,EAAWve,OAAOS,UAAW,EAEjC,IACI2F,GACAsY,EAFA7R,EAAO0R,EAAW1R,KAGlB83B,KACAC,KACAT,EAAUt8B,KAAKkQ,4BAA8B,GAAKlQ,KAAKmQ,6BAA+B,CACtFmsB,KACAQ,EAAc98B,KAAKvB,UAAUzF,OAAO,SAAUyH,GAC1C,MAAOA,GAAEwH,cAAc,kBAAoByO,EAAWve,OAAO2B,MAAQ,SAAW4c,EAAWve,OAAO4B,MAAQ,MAE9GgjC,EAAY/8B,KAAKvB,UAAUzF,OAAO,SAAUyH,GACxC,MAAOA,GAAEwH,cAAc,kBAAoByO,EAAWve,OAAO2B,MAAQ,SAAW4c,EAAWve,OAAO4B,MAAQ,MAGlH,KAAK,GAAInD,GAAI,EAAGA,EAAIoO,EAAKlO,OAAQF,IAAK,CAClCoO,EAAKjO,SAASH,EAAEI,WAAY,KAAKoD,MAAMG,QAAU,OACjDgE,EAAMyG,EAAKjO,SAASH,EAAEI,WAAY,IAClC,IAAIgmC,GAAeh4B,EAAKjO,SAASH,EAAEI,WAAY,KAAKiR,cAAc,qBAgBlE,IAfK9Q,oBAAkB6lC,IACnBh9B,KAAK5I,KAAKggB,gBAAgB6lB,SAASD,GAEnCV,IACAQ,EAAY/lC,SAASH,EAAEI,WAAY,KAAKoD,MAAMG,QAAU,OACxDwiC,EAAUhmC,SAASH,EAAEI,WAAY,KAAKoD,MAAMG,QAAU,OACjDyK,EAAKjO,SAASH,EAAEI,WAAY,KAAKiR,cAAc,+CAC5C60B,EAAY/lC,SAASH,EAAEI,WAAY,KAAKiR,cAAc,6CACtD1J,EAAMu+B,EAAY/lC,SAASH,EAAEI,WAAY,KAEpC+lC,EAAUhmC,SAASH,EAAEI,WAAY,KAAKiR,cAAc,+CACzD1J,EAAMw+B,EAAUhmC,SAASH,EAAEI,WAAY,QAI/CuH,EAAI0J,cAAc,6CAA8C,CAChE,GAAIi1B,GAAgB3+B,EAAI0J,cAAc,4CACtC4O,GAAc7W,KAAK+Q,YAAc/Q,KAAK5I,KAAKgG,wBAAwB4H,EAAKjO,SAASH,EAAEI,WAAY,KAAK4P,UAChG5G,KAAK5I,KAAK4f,oBAAoBhS,EAAKjO,SAASH,EAAEI,WAAY,KAAKoS,aAAa,aAAa/K,MACxFlH,oBAAkB+lC,IAAkBrmB,EAAYje,WACjD2R,eAAa2yB,GAAgB,oBAC7B1vB,YAAU0vB,GAAgB,sBAI9B,KAAK,GAFDC,MACAC,EAAQp9B,KAAKvB,UACR4+B,EAAM,EAAGA,EAAMD,EAAMtmC,OAAQumC,IAC9BD,EAAMrmC,SAASsmC,EAAIrmC,WAAY,KAAKiR,cAAc,kBAAoB4O,EAAY/c,MAAQ,SAAW+c,EAAY9c,MAAQ,KACzHojC,EAAKllC,KAAKmlC,EAAMrmC,SAASsmC,EAAIrmC,WAAY,KAG7CmmC,GAAKrmC,QAAU+f,EAAYje,UAC3BoH,KAAKk8B,qBAAsB/jC,OAAQ0e,EAAa7R,KAAMm4B,IAAQ,MAa9E7f,EAASnhB,UAAUmhC,SAAW,SAAUzjC,GACpC,MAAImG,MAAKwqB,qBAA0C,mBACxC+S,qBAAmBD,SAASzjC,GAEhCA,GAUXyjB,EAASnhB,UAAUqhC,yBAA2B,SAAU7lC,EAASqN,EAAMlL,GACnE,IAAK,GAAIlD,GAAI,EAAGA,EAAIe,EAAQb,OAAQF,IAChCoJ,KAAKf,aAAaC,YACdb,KAAM1G,EAAQZ,SAASH,EAAEI,WAAY,KAAMmI,KAAM6F,EAAKjO,SAASH,EAAEI,WAAY,KAAKoI,MAAMrI,SAAS+C,EAAM9C,WAAY,KACnHqI,OAAQW,KAAK5I,KAAKkI,aAAaU,KAAKjB,iBACpCQ,YAAa,mBAEM,cAAnBS,KAAa,QAAwC,eAAnBA,KAAa,QAC/CA,KAAKf,aAAaO,aACdnB,KAAM1G,EAAQZ,SAASH,EAAEI,WAAY,KAAMuH,IAAKyG,EAAKjO,SAASH,EAAEI,WAAY,QAS5FsmB,EAASnhB,UAAU2rB,YAAc,WAC7B9nB,KAAKsH,GAAG,gBAAiBtH,KAAKy9B,kBAAmBz9B,MACjDA,KAAK5I,KAAKkQ,GAAG,cAAetH,KAAK8oB,gBAAiB9oB,OAEtDsd,EAASnhB,UAAUshC,kBAAoB,SAAUC,GAC7C19B,KAAKmT,YAAcuqB,GAMvBpgB,EAASnhB,UAAUu3B,eAAiB,WAC5B1zB,KAAK4H,cAGT5H,KAAK6H,IAAI,gBAAiB7H,KAAKy9B,mBAC/Bz9B,KAAK5I,KAAKyQ,IAAI,cAAe7H,KAAK8oB,mBAiBtCxL,EAASnhB,UAAUwhC,eAAiB,SAAUpI,EAAWqI,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,GACzIl+B,KAAK5I,KAAKumC,eAAepI,EAAWqI,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,IAO5H5gB,EAASnhB,UAAUgiC,eAAiB,WAChCn+B,KAAK5I,KAAK+mC,kBAUd7gB,EAASnhB,UAAUiiC,0BAA4B,SAAU1tB,EAAO2tB,GAC5Dr+B,KAAK5I,KAAKgnC,0BAA0B1tB,EAAO2tB,IAS/C/gB,EAASnhB,UAAUmiC,UAAY,SAAUxkC,EAAOykC,GAC5Cv+B,KAAK5I,KAAKknC,UAAUxkC,EAAOykC,IAQ/BjhB,EAASnhB,UAAUqiC,WAAa,SAAU1zB,GACtC9K,KAAK5I,KAAKonC,WAAW1zB,IAOzBwS,EAASnhB,UAAU6nB,eAAiB,WAChChkB,KAAK5I,KAAK4sB,kBAQd1G,EAASnhB,UAAUuK,KAAO,SAAU7B,GAChC7E,KAAKyB,gBAAgBiF,KAAK7B,IAU9ByY,EAASnhB,UAAUwK,MAAQ,SAAUtI,EAAMuI,EAAUC,GACjD7G,KAAKyB,gBAAgBkF,MAAMtI,EAAMuI,EAAUC,IAS/CyW,EAASnhB,UAAUsiC,WAAa,SAAUxsB,EAAWssB,GACjDv+B,KAAK5I,KAAKqnC,WAAWxsB,EAAWssB,IAOpCjhB,EAASnhB,UAAUuiC,gBAAkB,WACjC,MAAO1+B,MAAK5I,KAAKsnC,mBAWrBphB,EAASnhB,UAAUwiC,wBAA0B,SAAU/3B,EAAUoC,GAC7D,MAAOhJ,MAAK5I,KAAKmb,iBAAiB3L,EAAUoC,IAShDsU,EAASnhB,UAAUyiC,mBAAqB,WACpC,MAAO5+B,MAAK5I,KAAKmV,eAUrB+Q,EAASnhB,UAAU0iC,qBAAuB,SAAU/kC,GAChD,MAAOkG,MAAK5I,KAAKoH,cAAc1E,IAQnCwjB,EAASnhB,UAAU2iC,eAAiB,WAChC,MAAO9+B,MAAK5I,KAAKqH,WAUrB6e,EAASnhB,UAAU4iC,yBAA2B,SAAUjlC,GACpD,MAAOkG,MAAK5I,KAAKoH,cAAc1E,IASnCwjB,EAASnhB,UAAU6iC,mBAAqB,WACpC,MAAOh/B,MAAK5I,KAAKqH,WASrB6e,EAASnhB,UAAU8iC,uBAAyB,WACxC,MAAOj/B,MAAK5I,KAAKmV,eAWrB+Q,EAASnhB,UAAU+iC,4BAA8B,SAAUt4B,EAAUoC,GACjE,MAAOhJ,MAAK5I,KAAKmb,iBAAiB3L,EAAUoC,IAUhDsU,EAASnhB,UAAUgjC,iCAAmC,SAAUrlC,GAC5D,MAAOkG,MAAK5I,KAAKigC,uBAAuBv9B,IAU5CwjB,EAASnhB,UAAUijC,kCAAoC,SAAUtlC,GAC7D,MAAOkG,MAAK5I,KAAKigC,uBAAuBv9B,IAU5CwjB,EAASnhB,UAAUkjC,8BAAgC,SAAUvlC,GACzD,MAAOkG,MAAK5I,KAAKigC,uBAAuBv9B,IAM5CwjB,EAASnhB,UAAUmjC,uBAAyB,WACxC,MAAOt/B,MAAK5I,KAAKkoC,0BAMrBhiB,EAASnhB,UAAU+T,0BAA4B,WAC3C,MAAOlQ,MAAK5I,KAAK8Y,6BAMrBoN,EAASnhB,UAAUgU,2BAA6B,WAC5C,MAAOnQ,MAAK5I,KAAK+Y,8BAMrBmN,EAASnhB,UAAUoU,qBAAuB,WAEtC,MADAvQ,MAAK0iB,kBAAkB1iB,KAAK5I,KAAKmZ,wBAC1BvQ,KAAKwkB,aAMhBlH,EAASnhB,UAAUkU,sBAAwB,WAEvC,MADArQ,MAAK0iB,kBAAkB1iB,KAAK5I,KAAKiZ,yBAC1BrQ,KAAKwkB,aAMhBlH,EAASnhB,UAAUojC,uBAAyB,WACxC,MAAOv/B,MAAK5I,KAAKmoC,0BAMrBjiB,EAASnhB,UAAUqjC,2BAA6B,WAC5C,MAAOx/B,MAAK5I,KAAKooC,8BAMrBliB,EAASnhB,UAAUsjC,0BAA4B,WAC3C,MAAOz/B,MAAK5I,KAAKqoC,6BAMrBniB,EAASnhB,UAAUsU,kBAAoB,WAEnC,MADAzQ,MAAK0iB,kBAAkB1iB,KAAK5I,KAAKqZ,qBAC1BzQ,KAAKwkB,aAQhBlH,EAASnhB,UAAU0C,iBAAmB,WAClC,MAAOmB,MAAK0/B,eAAe1/B,KAAKnJ,QAAS,GAAKmJ,KAAKuP,eAEvD+N,EAASnhB,UAAUujC,eAAiB,SAAU/K,EAAMgL,GAChD,IAAK,GAAIhmC,GAAI,EAAG9B,EAAM88B,EAAK79B,OAAQ6C,EAAI9B,EAAK8B,IACpCg7B,EAAK59B,SAAS4C,EAAE3C,WAAY,KAAKH,QACjC8oC,EAAM3/B,KAAK0/B,eAAe/K,EAAK59B,SAAS4C,EAAE3C,WAAY,KAAKH,QAAS8oC,GAGhEhL,EAAK59B,SAAS4C,EAAE3C,WAAY,KAAK4oC,UACjCD,GAIZ,OAAOA,IAOXriB,EAASnhB,UAAUgJ,sBAAwB,WACvC,MAAOnF,MAAK5I,KAAK+N,yBAOrBmY,EAASnhB,UAAU0jC,0BAA4B,WAC3C,MAAO7/B,MAAK5I,KAAKyoC,6BAQrBviB,EAASnhB,UAAUwJ,mBAAqB,WACpC,MAAO3F,MAAK5I,KAAKuO,sBAOrB2X,EAASnhB,UAAUmb,cAAgB,WAC/B,OAASwoB,WAAY9/B,KAAK5I,KAAKkgB,gBAAiByoB,WAAY//B,KAAKwnB,aAUrElK,EAASnhB,UAAU6jC,YAAc,SAAUC,EAAaC,EAAShL,GAC7Dl1B,KAAKyO,qBAAqBuxB,YAAYC,EAAaC,EAAShL,IAQhE5X,EAASnhB,UAAU4V,OAAS,SAAU5Z,GAC7BhB,oBAAkB6I,KAAKyO,wBACxBtW,EAASA,EACT6H,KAAKyO,qBAAqBzO,KAAK2d,qBAAqBxlB,EAAQ,YASpEmlB,EAASnhB,UAAUgkC,QAAU,SAAUhoC,GAC9BhB,oBAAkB6I,KAAKyO,wBACxBtW,EAASA,EACT6H,KAAKyO,qBAAqBzO,KAAK2d,qBAAqBxlB,EAAQ,YAGpE,IAAIkmB,EA6YJ,OA5YAle,KACI2B,WAAS,IACVwb,EAASnhB,UAAW,iBAAc,IACrCgE,IACI2B,WAAS,IACVwb,EAASnhB,UAAW,oBAAiB,IACxCgE,IACI2B,WAAS,aACVwb,EAASnhB,UAAW,eAAY,IACnCgE,IACI2B,gBACDwb,EAASnhB,UAAW,cAAW,IAClCgE,IACI2B,WAAS,OACVwb,EAASnhB,UAAW,mBAAgB,IACvCgE,IACI2B,WAAS,OACVwb,EAASnhB,UAAW,sBAAmB,IAC1CgE,IACI2B,WAAS,IACVwb,EAASnhB,UAAW,sBAAmB,IAC1CgE,IACI2B,WAAS,OACVwb,EAASnhB,UAAW,gBAAa,IACpCgE,IACI2B,WAAS,OACVwb,EAASnhB,UAAW,sBAAmB,IAC1CgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,wBAAqB,IAC5CgE,IACI2B,WAAS,OACVwb,EAASnhB,UAAW,yBAAsB,IAC7CgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,0BAAuB,IAC9CgE,IACI2B,gBACDwb,EAASnhB,UAAW,iBAAc,IACrCgE,IACI2B,cACDwb,EAASnhB,UAAW,YAAS,IAChCgE,IACI2B,cACDwb,EAASnhB,UAAW,iBAAc,IACrCgE,IACI2B,WAAS,aACVwb,EAASnhB,UAAW,gBAAa,IACpCgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,kBAAe,IACtCgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,wBAAqB,IAC5CgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,oBAAiB,IACxCgE,IACIigC,aAAY/9B,IACbib,EAASnhB,UAAW,uBAAoB,IAC3CgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,sBAAmB,IAC1CgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,oBAAiB,IACxCgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,yBAAsB,IAC7CgE,IACIigC,aAAY5kB,KACb8B,EAASnhB,UAAW,mBAAgB,IACvCgE,IACIigC,aAAYC,oBACb/iB,EAASnhB,UAAW,sBAAmB,IAC1CgE,IACI2B,WAAS,QACVwb,EAASnhB,UAAW,mBAAgB,IACvCgE,IACI2B,cACDwb,EAASnhB,UAAW,oBAAiB,IACxCgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,qBAAkB,IACzCgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,wBAAqB,IAC5CgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,mBAAgB,IACvCgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,wBAAqB,IAC5CgE,IACIigC,aAAYhjB,KACbE,EAASnhB,UAAW,mBAAgB,IACvCgE,IACIiC,gBAAe6a,KAChBK,EAASnhB,UAAW,iBAAc,IACrCgE,IACIigC,aAAYljB,KACbI,EAASnhB,UAAW,mBAAgB,IACvCgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,qBAAkB,IACzCgE,IACI2B,cACDwb,EAASnhB,UAAW,qBAAkB,IACzCgE,IACIigC,aAAYj+B,IACbmb,EAASnhB,UAAW,qBAAkB,IACzCgE,IACIigC,aAAY1yB,IACb4P,EAASnhB,UAAW,qBAAkB,IACzCgE,IACI2B,cACDwb,EAASnhB,UAAW,cAAW,IAClCgE,IACI2B,cACDwb,EAASnhB,UAAW,sBAAmB,IAC1CgE,IACI2B,WAAS,YACVwb,EAASnhB,UAAW,gBAAa,IACpCgE,IACI2B,cACDwb,EAASnhB,UAAW,uBAAoB,IAC3CgE,IACI2B,cACDwb,EAASnhB,UAAW,sBAAmB,IAC1CgE,IACI2B,cACDwb,EAASnhB,UAAW,kBAAe,IACtCgE,IACI2B,WAAS,WACVwb,EAASnhB,UAAW,wBAAqB,IAC5CgE,IACI2B,WAAS,OACVwb,EAASnhB,UAAW,gBAAa,IACpCgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,mBAAgB,IACvCgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,oBAAiB,IACxCgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,kBAAe,IACtCgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,qBAAkB,IACzCgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,uBAAoB,IAC3CgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,0BAAuB,IAC9CgE,IACI2B,WAAS,SACVwb,EAASnhB,UAAW,aAAU,IACjCgE,IACI2B,WAAS,SACVwb,EAASnhB,UAAW,YAAS,IAChCgE,IACIigC,aAAYp+B,IACbsb,EAASnhB,UAAW,uBAAoB,IAC3CgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,2BAAwB,IAC/CgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,2BAAwB,IAC/CgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,iCAA8B,IACrDgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,0BAAuB,IAC9CgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,8BAA2B,IAClDgE,IACIigC,aAAY/iB,KACbC,EAASnhB,UAAW,6BAA0B,IACjDgE,IACI2B,WAAS,QACVwb,EAASnhB,UAAW,sBAAmB,IAC1CgE,IACImgC,WACDhjB,EAASnhB,UAAW,cAAW,IAClCgE,IACImgC,WACDhjB,EAASnhB,UAAW,WAAQ,IAC/BgE,IACImgC,WACDhjB,EAASnhB,UAAW,gBAAa,IACpCgE,IACImgC,WACDhjB,EAASnhB,UAAW,eAAY,IACnCgE,IACImgC,WACDhjB,EAASnhB,UAAW,iBAAc,IACrCgE,IACImgC,WACDhjB,EAASnhB,UAAW,gBAAa,IACpCgE,IACImgC,WACDhjB,EAASnhB,UAAW,eAAY,IACnCgE,IACImgC,WACDhjB,EAASnhB,UAAW,gBAAa,IACpCgE,IACImgC,WACDhjB,EAASnhB,UAAW,kBAAe,IACtCgE,IACImgC,WACDhjB,EAASnhB,UAAW,qBAAkB,IACzCgE,IACImgC,WACDhjB,EAASnhB,UAAW,gBAAa,IACpCgE,IACImgC,WACDhjB,EAASnhB,UAAW,eAAY,IACnCgE,IACImgC,WACDhjB,EAASnhB,UAAW,kBAAe,IACtCgE,IACImgC,WACDhjB,EAASnhB,UAAW,kBAAe,IACtCgE,IACImgC,WACDhjB,EAASnhB,UAAW,qBAAkB,IACzCgE,IACImgC,WACDhjB,EAASnhB,UAAW,wBAAqB,IAC5CgE,IACImgC,WACDhjB,EAASnhB,UAAW,sBAAmB,IAC1CgE,IACImgC,WACDhjB,EAASnhB,UAAW,eAAY,IACnCgE,IACImgC,WACDhjB,EAASnhB,UAAW,oBAAiB,IACxCgE,IACImgC,WACDhjB,EAASnhB,UAAW,gBAAa,IACpCgE,IACImgC,WACDhjB,EAASnhB,UAAW,wBAAqB,IAC5CgE,IACImgC,WACDhjB,EAASnhB,UAAW,sBAAmB,IAC1CgE,IACImgC,WACDhjB,EAASnhB,UAAW,wBAAqB,IAC5CgE,IACImgC,WACDhjB,EAASnhB,UAAW,mBAAgB,IACvCgE,IACImgC,WACDhjB,EAASnhB,UAAW,sBAAmB,IAC1CgE,IACImgC,WACDhjB,EAASnhB,UAAW,oBAAiB,IACxCgE,IACI2B,YAAS,IACVwb,EAASnhB,UAAW,qBAAkB,IACzCgE,IACImgC,WACDhjB,EAASnhB,UAAW,mBAAgB,IACvCgE,IACImgC,WACDhjB,EAASnhB,UAAW,kBAAe,IACtCgE,IACImgC,WACDhjB,EAASnhB,UAAW,qBAAkB,IACzCgE,IACImgC,WACDhjB,EAASnhB,UAAW,oBAAiB,IACxCgE,IACImgC,WACDhjB,EAASnhB,UAAW,qBAAkB,IACzCgE,IACImgC,WACDhjB,EAASnhB,UAAW,oBAAiB,IACxCgE,IACImgC,WACDhjB,EAASnhB,UAAW,qBAAkB,IACzCgE,IACImgC,WACDhjB,EAASnhB,UAAW,sBAAmB,IAC1CgE,IACImgC,WACDhjB,EAASnhB,UAAW,mBAAgB,IACvCgE,IACImgC,WACDhjB,EAASnhB,UAAW,sBAAmB,IAC1CgE,IACImgC,WACDhjB,EAASnhB,UAAW,qBAAkB,IACzCgE,IACImgC,WACDhjB,EAASnhB,UAAW,kBAAe,IACtCgE,IACImgC,WACDhjB,EAASnhB,UAAW,eAAY,IACnCgE,IACImgC,WACDhjB,EAASnhB,UAAW,iBAAc,IACrCgE,IACImgC,WACDhjB,EAASnhB,UAAW,sBAAmB,IAC1CgE,IACImgC,WACDhjB,EAASnhB,UAAW,iBAAc,IACrCgE,IACImgC,WACDhjB,EAASnhB,UAAW,iBAAc,IACrCgE,IACImgC,WACDhjB,EAASnhB,UAAW,qBAAkB,IACzCgE,IACImgC,WACDhjB,EAASnhB,UAAW,oBAAiB,IACxCgE,IACImgC,WACDhjB,EAASnhB,UAAW,kBAAe,IACtCgE,IACImgC,WACDhjB,EAASnhB,UAAW,mBAAgB,IACvCgE,IAC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"}